PROJECT_ROOT: /Users/vernetemmanueladjobi/Documents/RessourcesStages/Projets/VulRAG-Hybrid-System
CODE_DIR    : /Users/vernetemmanueladjobi/Documents/RessourcesStages/Projets/VulRAG-Hybrid-System/data/datasets/test_c_files
CPG_DIR     : /Users/vernetemmanueladjobi/Documents/RessourcesStages/Projets/VulRAG-Hybrid-System/data/datasets/test_cpg_files
TMPDIR      : /Users/vernetemmanueladjobi/Documents/RessourcesStages/Projets/VulRAG-Hybrid-System/tmp/joern_20250816_132807_8095
VULN count :       586
PATCH count:       586
==> Extract VULN CPGs
======================================
ü¶† VULNERABLE CPG EXTRACTION ONLY
======================================
Project root: /Users/vernetemmanueladjobi/Documents/RessourcesStages/Projets/VulRAG-Hybrid-System
Input: /Users/vernetemmanueladjobi/Documents/RessourcesStages/Projets/VulRAG-Hybrid-System/data/datasets/test_c_files
Output: /Users/vernetemmanueladjobi/Documents/RessourcesStages/Projets/VulRAG-Hybrid-System/data/datasets/test_cpg_files/vuln
Logs: /Users/vernetemmanueladjobi/Documents/RessourcesStages/Projets/VulRAG-Hybrid-System/logs/extract_vuln_cpg.log
Target: *_vuln.c files ONLY
Started: Sat Aug 16 13:28:07 EDT 2025

üîç Found 586 vulnerable files to process

ü¶† Processing CWE-CSV...
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xt0XEH0f6M/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xt0XEH0f6M/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xt0XEH0f6M/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xt0XEH0f6M/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xt0XEH0f6M/code.cpg.bin`
exported 1030 nodes, 3235 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xt0XEH0f6M/export
‚úÖ CVE_2017_16527_1313_Linux_Kernel_CWE_416_Testset_ee24e3f6_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.04BRR386s3/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.04BRR386s3/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.04BRR386s3/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.04BRR386s3/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.04BRR386s3/code.cpg.bin`
exported 1191 nodes, 4319 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.04BRR386s3/export
‚úÖ CVE_2018_16871_1716_Linux_Kernel_CWE_476_Testset_a0b7204e_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d1Skvwl0Kh/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d1Skvwl0Kh/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d1Skvwl0Kh/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d1Skvwl0Kh/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d1Skvwl0Kh/code.cpg.bin`
exported 1271 nodes, 4711 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d1Skvwl0Kh/export
‚úÖ CVE_2018_1000200_1578_Linux_Kernel_CWE_476_Testset_5d8aae4c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ssQumvGvoF/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ssQumvGvoF/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ssQumvGvoF/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ssQumvGvoF/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ssQumvGvoF/code.cpg.bin`
exported 2274 nodes, 13105 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ssQumvGvoF/export
‚úÖ CVE_2018_14613_1683_Linux_Kernel_CWE_476_Testset_67fd81b3_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Sg2dkUssNl/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Sg2dkUssNl/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Sg2dkUssNl/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Sg2dkUssNl/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Sg2dkUssNl/code.cpg.bin`
exported 1293 nodes, 4959 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Sg2dkUssNl/export
‚úÖ CVE_2023_2162_3924_Linux_Kernel_CWE_416_Testset_9f8f3c3b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.P7yh71YZA9/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.P7yh71YZA9/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.P7yh71YZA9/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.P7yh71YZA9/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.P7yh71YZA9/code.cpg.bin`
exported 1544 nodes, 6960 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.P7yh71YZA9/export
‚úÖ CVE_2022_2938_3517_Linux_Kernel_CWE_416_Testset_9d4d08d2_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GcwwpKy0AV/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GcwwpKy0AV/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GcwwpKy0AV/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GcwwpKy0AV/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GcwwpKy0AV/code.cpg.bin`
exported 1423 nodes, 5920 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GcwwpKy0AV/export
‚úÖ CVE_2020_27067_2612_Linux_Kernel_CWE_362_Testset_3371c4a9_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D6hATJtJRD/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D6hATJtJRD/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D6hATJtJRD/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D6hATJtJRD/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D6hATJtJRD/code.cpg.bin`
exported 1129 nodes, 3810 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D6hATJtJRD/export
‚úÖ CVE_2013_2930_260_Linux_Kernel_CWE_264_Testset_17fa93ab_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8vVPNwFodV/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8vVPNwFodV/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8vVPNwFodV/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8vVPNwFodV/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8vVPNwFodV/code.cpg.bin`
exported 1098 nodes, 3610 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8vVPNwFodV/export
‚úÖ CVE_2022_2318_3437_Linux_Kernel_CWE_416_Testset_a14c2431_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ucua68Y0Ik/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ucua68Y0Ik/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ucua68Y0Ik/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ucua68Y0Ik/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ucua68Y0Ik/code.cpg.bin`
exported 1132 nodes, 3880 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ucua68Y0Ik/export
‚úÖ CVE_2022_3633_3667_Linux_Kernel_CWE_401_Testset_7d662301_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.B8cqFgipTH/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.B8cqFgipTH/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.B8cqFgipTH/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.B8cqFgipTH/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.B8cqFgipTH/code.cpg.bin`
exported 1089 nodes, 3525 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.B8cqFgipTH/export
‚úÖ CVE_2023_1855_3880_Linux_Kernel_CWE_416_Testset_a32c23ef_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MAEhx61zgo/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MAEhx61zgo/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MAEhx61zgo/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MAEhx61zgo/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MAEhx61zgo/code.cpg.bin`
exported 1730 nodes, 8046 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MAEhx61zgo/export
‚úÖ CVE_2021_45095_3174_Linux_Kernel_CWE_200_Testset_0ce34f94_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EA3yPcozzh/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EA3yPcozzh/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EA3yPcozzh/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EA3yPcozzh/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EA3yPcozzh/code.cpg.bin`
exported 1850 nodes, 9031 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EA3yPcozzh/export
‚úÖ CVE_2018_10323_1588_Linux_Kernel_CWE_476_Testset_94d36861_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wN44nhp3Ok/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wN44nhp3Ok/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wN44nhp3Ok/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wN44nhp3Ok/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wN44nhp3Ok/code.cpg.bin`
exported 1315 nodes, 5194 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wN44nhp3Ok/export
‚úÖ CVE_2021_3348_2980_Linux_Kernel_CWE_362_Testset_046d8c19_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Su4mtnfjnX/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Su4mtnfjnX/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Su4mtnfjnX/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Su4mtnfjnX/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Su4mtnfjnX/code.cpg.bin`
exported 1435 nodes, 6034 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Su4mtnfjnX/export
‚úÖ CVE_2022_2380_3462_Linux_Kernel_CWE_787_Testset_17992c48_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pYEL1Zkve7/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pYEL1Zkve7/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pYEL1Zkve7/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pYEL1Zkve7/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pYEL1Zkve7/code.cpg.bin`
exported 1274 nodes, 4771 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pYEL1Zkve7/export
‚úÖ CVE_2023_4732_4243_Linux_Kernel_CWE_362_Testset_5cb18474_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5ceHrjguPt/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5ceHrjguPt/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5ceHrjguPt/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5ceHrjguPt/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5ceHrjguPt/code.cpg.bin`
exported 1299 nodes, 4832 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5ceHrjguPt/export
‚úÖ CVE_2014_0181_452_Linux_Kernel_CWE_264_Testset_94c2690e_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.arJBIWdqU6/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.arJBIWdqU6/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.arJBIWdqU6/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.arJBIWdqU6/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.arJBIWdqU6/code.cpg.bin`
exported 1264 nodes, 4684 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.arJBIWdqU6/export
‚úÖ CVE_2015_8956_868_Linux_Kernel_CWE_476_Testset_05e81be0_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8bXwlJ46z0/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8bXwlJ46z0/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8bXwlJ46z0/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8bXwlJ46z0/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8bXwlJ46z0/code.cpg.bin`
exported 1282 nodes, 4812 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8bXwlJ46z0/export
‚úÖ CVE_2016_6786_1089_Linux_Kernel_CWE_264_Testset_7ad1cbf6_v OK
   üìä [20/586] Rate: 8.2 files/min | Success: 19
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vDZJu2dlRz/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vDZJu2dlRz/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vDZJu2dlRz/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vDZJu2dlRz/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vDZJu2dlRz/code.cpg.bin`
exported 1483 nodes, 6591 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vDZJu2dlRz/export
‚úÖ CVE_2018_13093_1668_Linux_Kernel_CWE_476_Testset_e8b0f067_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jD8xJNsnr0/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jD8xJNsnr0/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jD8xJNsnr0/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jD8xJNsnr0/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jD8xJNsnr0/code.cpg.bin`
exported 1275 nodes, 4777 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jD8xJNsnr0/export
‚úÖ CVE_2016_3841_1005_Linux_Kernel_CWE_416_Testset_e5d27eb7_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sr72VrWoHz/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sr72VrWoHz/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sr72VrWoHz/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sr72VrWoHz/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sr72VrWoHz/code.cpg.bin`
exported 1573 nodes, 7537 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sr72VrWoHz/export
‚úÖ CVE_2022_47938_3767_Linux_Kernel_CWE_125_Testset_560a4baf_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wSdFnBLM7o/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wSdFnBLM7o/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wSdFnBLM7o/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wSdFnBLM7o/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wSdFnBLM7o/code.cpg.bin`
exported 1176 nodes, 4200 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wSdFnBLM7o/export
‚úÖ CVE_2013_2234_225_Linux_Kernel_CWE_119_Testset_5873ec76_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aRMq3hPAc2/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aRMq3hPAc2/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aRMq3hPAc2/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aRMq3hPAc2/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aRMq3hPAc2/code.cpg.bin`
exported 4814 nodes, 48199 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aRMq3hPAc2/export
‚úÖ CVE_2019_16233_2046_Linux_Kernel_CWE_476_Testset_a33ceea9_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XgJQzo6ifR/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XgJQzo6ifR/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XgJQzo6ifR/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XgJQzo6ifR/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XgJQzo6ifR/code.cpg.bin`
exported 1241 nodes, 4658 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XgJQzo6ifR/export
‚úÖ CVE_2020_25669_2596_Linux_Kernel_CWE_416_Testset_647ff4ce_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0IAmVqi8wa/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0IAmVqi8wa/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0IAmVqi8wa/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0IAmVqi8wa/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0IAmVqi8wa/code.cpg.bin`
exported 1341 nodes, 5230 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0IAmVqi8wa/export
‚úÖ CVE_2017_18216_1402_Linux_Kernel_CWE_476_Testset_69326d8b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vD8DDs1NGu/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vD8DDs1NGu/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vD8DDs1NGu/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vD8DDs1NGu/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vD8DDs1NGu/code.cpg.bin`
exported 1078 nodes, 3493 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vD8DDs1NGu/export
‚úÖ CVE_2015_4170_764_Linux_Kernel_CWE_362_Testset_a971e52e_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pYEybvJBYl/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pYEybvJBYl/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pYEybvJBYl/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pYEybvJBYl/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pYEybvJBYl/code.cpg.bin`
exported 1107 nodes, 3756 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pYEybvJBYl/export
‚úÖ CVE_2014_3184_515_Linux_Kernel_CWE_119_Testset_fb079a18_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9UXJmFXF29/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9UXJmFXF29/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9UXJmFXF29/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9UXJmFXF29/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9UXJmFXF29/code.cpg.bin`
exported 1114 nodes, 3709 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9UXJmFXF29/export
‚úÖ CVE_2017_16538_1325_Linux_Kernel_CWE_20_Testset_90fe41ee_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q7C1XZVjaN/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q7C1XZVjaN/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q7C1XZVjaN/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q7C1XZVjaN/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q7C1XZVjaN/code.cpg.bin`
exported 1042 nodes, 3279 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q7C1XZVjaN/export
‚úÖ CVE_2018_14619_1691_Linux_Kernel_CWE_20_Testset_595506ca_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ELCGrbWXXK/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ELCGrbWXXK/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ELCGrbWXXK/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ELCGrbWXXK/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ELCGrbWXXK/code.cpg.bin`
exported 1124 nodes, 3788 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ELCGrbWXXK/export
‚úÖ CVE_2019_10207_1898_Linux_Kernel_CWE_476_Testset_864afcd7_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rD7tJntYt6/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rD7tJntYt6/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rD7tJntYt6/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rD7tJntYt6/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rD7tJntYt6/code.cpg.bin`
exported 1442 nodes, 6345 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rD7tJntYt6/export
‚úÖ CVE_2023_3863_4155_Linux_Kernel_CWE_416_Testset_c37139e9_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0qlmPSiOKy/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0qlmPSiOKy/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0qlmPSiOKy/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0qlmPSiOKy/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0qlmPSiOKy/code.cpg.bin`
exported 1341 nodes, 5302 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0qlmPSiOKy/export
‚úÖ CVE_2017_11600_1252_Linux_Kernel_CWE_125_Testset_8198a35f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9lTKCIMq2a/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9lTKCIMq2a/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9lTKCIMq2a/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9lTKCIMq2a/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9lTKCIMq2a/code.cpg.bin`
exported 1229 nodes, 4596 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9lTKCIMq2a/export
‚úÖ CVE_2012_2745_53_Linux_Kernel_CWE_119_Testset_9db824f1_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nwIFh7vp6c/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nwIFh7vp6c/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nwIFh7vp6c/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nwIFh7vp6c/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nwIFh7vp6c/code.cpg.bin`
exported 1181 nodes, 4167 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nwIFh7vp6c/export
‚úÖ CVE_2019_19048_2129_Linux_Kernel_CWE_401_Testset_498a33a9_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dmrE4cFpCs/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dmrE4cFpCs/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dmrE4cFpCs/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dmrE4cFpCs/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dmrE4cFpCs/code.cpg.bin`
exported 1130 nodes, 3855 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dmrE4cFpCs/export
‚úÖ CVE_2022_47942_3772_Linux_Kernel_CWE_787_Testset_1b2fd91a_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZTmsPtBmTB/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZTmsPtBmTB/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZTmsPtBmTB/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZTmsPtBmTB/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZTmsPtBmTB/code.cpg.bin`
exported 1422 nodes, 5753 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZTmsPtBmTB/export
‚úÖ CVE_2023_31248_4000_Linux_Kernel_CWE_416_Testset_7798a163_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LmWE1kGpfQ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LmWE1kGpfQ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LmWE1kGpfQ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LmWE1kGpfQ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LmWE1kGpfQ/code.cpg.bin`
exported 1137 nodes, 3873 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LmWE1kGpfQ/export
‚úÖ CVE_2018_20669_1779_Linux_Kernel_CWE_20_Testset_8d012959_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UeIPgWTyJj/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UeIPgWTyJj/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UeIPgWTyJj/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UeIPgWTyJj/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UeIPgWTyJj/code.cpg.bin`
exported 1622 nodes, 7756 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UeIPgWTyJj/export
‚úÖ CVE_2020_8835_2808_Linux_Kernel_CWE_125_Testset_bbf8dc00_v OK
   üìä [40/586] Rate: 9.4 files/min | Success: 39
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BivIg2TTKk/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BivIg2TTKk/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BivIg2TTKk/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BivIg2TTKk/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BivIg2TTKk/code.cpg.bin`
exported 1487 nodes, 6290 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BivIg2TTKk/export
‚úÖ CVE_2018_10675_1593_Linux_Kernel_CWE_416_Testset_ca6084c0_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a0d3PAENqE/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a0d3PAENqE/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a0d3PAENqE/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a0d3PAENqE/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a0d3PAENqE/code.cpg.bin`
exported 1177 nodes, 4152 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a0d3PAENqE/export
‚úÖ CVE_2020_10711_2403_Linux_Kernel_CWE_476_Testset_daf359de_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sYjJkekuEJ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sYjJkekuEJ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sYjJkekuEJ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sYjJkekuEJ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sYjJkekuEJ/code.cpg.bin`
exported 1083 nodes, 3619 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sYjJkekuEJ/export
‚úÖ CVE_2018_20509_1763_Linux_Kernel_CWE_200_Testset_59181c86_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tQGDRFYHvc/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tQGDRFYHvc/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tQGDRFYHvc/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tQGDRFYHvc/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tQGDRFYHvc/code.cpg.bin`
exported 1078 nodes, 3503 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tQGDRFYHvc/export
‚úÖ CVE_2022_43750_3741_Linux_Kernel_CWE_787_Testset_0466d740_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z31Oog4u4o/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z31Oog4u4o/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z31Oog4u4o/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z31Oog4u4o/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z31Oog4u4o/code.cpg.bin`
exported 1198 nodes, 4397 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z31Oog4u4o/export
‚úÖ CVE_2017_6874_1488_Linux_Kernel_CWE_362_Testset_44fc8b96_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K78kI21Zyo/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K78kI21Zyo/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K78kI21Zyo/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K78kI21Zyo/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K78kI21Zyo/code.cpg.bin`
exported 1805 nodes, 9132 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K78kI21Zyo/export
‚úÖ CVE_2015_8839_857_Linux_Kernel_CWE_362_Testset_5f453442_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JLQWpolng4/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JLQWpolng4/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JLQWpolng4/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JLQWpolng4/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JLQWpolng4/code.cpg.bin`
exported 1203 nodes, 4273 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JLQWpolng4/export
‚úÖ CVE_2022_47946_3785_Linux_Kernel_CWE_416_Testset_60d6436b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vjC8FtvRX7/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vjC8FtvRX7/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vjC8FtvRX7/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vjC8FtvRX7/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vjC8FtvRX7/code.cpg.bin`
exported 1070 nodes, 3439 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vjC8FtvRX7/export
‚úÖ CVE_2015_2672_741_Linux_Kernel_CWE_20_Testset_2493f7d7_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YBZjDQBYag/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YBZjDQBYag/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YBZjDQBYag/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YBZjDQBYag/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YBZjDQBYag/code.cpg.bin`
exported 1637 nodes, 7942 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YBZjDQBYag/export
‚úÖ CVE_2021_3501_3015_Linux_Kernel_CWE_787_Testset_aeb0e0ef_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hXBKXLhR8s/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hXBKXLhR8s/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hXBKXLhR8s/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hXBKXLhR8s/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hXBKXLhR8s/code.cpg.bin`
exported 1283 nodes, 4923 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hXBKXLhR8s/export
‚úÖ CVE_2022_20566_3387_Linux_Kernel_CWE_416_Testset_0966bf35_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ufe94utVtf/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ufe94utVtf/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ufe94utVtf/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ufe94utVtf/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ufe94utVtf/code.cpg.bin`
exported 1437 nodes, 6223 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ufe94utVtf/export
‚úÖ CVE_2022_4378_3743_Linux_Kernel_CWE_787_Testset_b021713e_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DtXnzrvwab/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DtXnzrvwab/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DtXnzrvwab/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DtXnzrvwab/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DtXnzrvwab/code.cpg.bin`
exported 1912 nodes, 10047 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DtXnzrvwab/export
‚úÖ CVE_2023_5633_4287_Linux_Kernel_CWE_416_Testset_368f688a_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hg9s8sUWOi/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hg9s8sUWOi/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hg9s8sUWOi/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hg9s8sUWOi/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hg9s8sUWOi/code.cpg.bin`
exported 1068 nodes, 3442 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hg9s8sUWOi/export
‚úÖ CVE_2017_17741_1368_Linux_Kernel_CWE_125_Testset_bfc2b4e2_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b4WW5Vw1O6/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b4WW5Vw1O6/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b4WW5Vw1O6/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b4WW5Vw1O6/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b4WW5Vw1O6/code.cpg.bin`
exported 1232 nodes, 4495 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b4WW5Vw1O6/export
‚úÖ CVE_2023_33951_4082_Linux_Kernel_CWE_362_Testset_aa302df4_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2MHL1ozNd1/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2MHL1ozNd1/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2MHL1ozNd1/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2MHL1ozNd1/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2MHL1ozNd1/code.cpg.bin`
exported 1513 nodes, 6469 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2MHL1ozNd1/export
‚úÖ CVE_2016_10200_899_Linux_Kernel_CWE_362_Testset_9436fd43_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SDn3TcZa8I/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SDn3TcZa8I/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SDn3TcZa8I/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SDn3TcZa8I/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SDn3TcZa8I/code.cpg.bin`
exported 1432 nodes, 6094 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SDn3TcZa8I/export
‚úÖ CVE_2019_3701_2310_Linux_Kernel_CWE_787_Testset_69c2f5cf_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R7zCVcnI6C/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R7zCVcnI6C/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R7zCVcnI6C/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R7zCVcnI6C/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R7zCVcnI6C/code.cpg.bin`
exported 2735 nodes, 17273 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R7zCVcnI6C/export
‚úÖ CVE_2016_9083_1137_Linux_Kernel_CWE_119_Testset_b8b5a770_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Llu8prdgyf/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Llu8prdgyf/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Llu8prdgyf/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Llu8prdgyf/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Llu8prdgyf/code.cpg.bin`
exported 1267 nodes, 4729 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Llu8prdgyf/export
‚úÖ CVE_2022_38457_3684_Linux_Kernel_CWE_416_Testset_57241537_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wdJlaeqSnB/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wdJlaeqSnB/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wdJlaeqSnB/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wdJlaeqSnB/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wdJlaeqSnB/code.cpg.bin`
exported 1315 nodes, 5171 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wdJlaeqSnB/export
‚úÖ CVE_2014_1874_478_Linux_Kernel_CWE_20_Testset_d881b22a_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zg8deuw5WU/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zg8deuw5WU/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zg8deuw5WU/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zg8deuw5WU/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zg8deuw5WU/code.cpg.bin`
exported 1112 nodes, 3714 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zg8deuw5WU/export
‚úÖ CVE_2022_2318_3429_Linux_Kernel_CWE_416_Testset_7f4609fc_v OK
   üìä [60/586] Rate: 9.9 files/min | Success: 59
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ClPDrYw66e/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ClPDrYw66e/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ClPDrYw66e/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ClPDrYw66e/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ClPDrYw66e/code.cpg.bin`
exported 1255 nodes, 4675 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ClPDrYw66e/export
‚úÖ CVE_2013_1772_172_Linux_Kernel_CWE_119_Testset_20f52faf_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.23vLNeajkN/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.23vLNeajkN/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.23vLNeajkN/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.23vLNeajkN/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.23vLNeajkN/code.cpg.bin`
exported 1373 nodes, 5596 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.23vLNeajkN/export
‚úÖ CVE_2019_18812_2104_Linux_Kernel_CWE_401_Testset_22529eb0_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iT4W33d3u6/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iT4W33d3u6/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iT4W33d3u6/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iT4W33d3u6/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iT4W33d3u6/code.cpg.bin`
exported 1202 nodes, 4447 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iT4W33d3u6/export
‚úÖ CVE_2016_8632_1121_Linux_Kernel_CWE_264_Testset_c41cf8ed_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QPi4ysjSfX/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QPi4ysjSfX/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QPi4ysjSfX/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QPi4ysjSfX/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QPi4ysjSfX/code.cpg.bin`
exported 1219 nodes, 4430 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QPi4ysjSfX/export
‚úÖ CVE_2019_2213_2295_Linux_Kernel_CWE_416_Testset_3f033b37_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2kbBkMtL4a/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2kbBkMtL4a/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2kbBkMtL4a/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2kbBkMtL4a/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2kbBkMtL4a/code.cpg.bin`
exported 1231 nodes, 4549 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2kbBkMtL4a/export
‚úÖ CVE_2019_18810_2102_Linux_Kernel_CWE_401_Testset_0cea3d4a_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q3wLQn9bai/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q3wLQn9bai/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q3wLQn9bai/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q3wLQn9bai/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q3wLQn9bai/code.cpg.bin`
exported 1297 nodes, 4961 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q3wLQn9bai/export
‚úÖ CVE_2023_33951_4084_Linux_Kernel_CWE_362_Testset_e36b0c21_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MEYHG3YOOI/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MEYHG3YOOI/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MEYHG3YOOI/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MEYHG3YOOI/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MEYHG3YOOI/code.cpg.bin`
exported 1298 nodes, 4964 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MEYHG3YOOI/export
‚úÖ CVE_2021_3736_3047_Linux_Kernel_CWE_401_Testset_c7246cbb_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z4iUdcc6u9/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z4iUdcc6u9/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z4iUdcc6u9/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z4iUdcc6u9/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z4iUdcc6u9/code.cpg.bin`
exported 1304 nodes, 4866 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z4iUdcc6u9/export
‚úÖ CVE_2023_1582_3870_Linux_Kernel_CWE_362_Testset_1c76ee08_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vgXvG3d4Xp/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vgXvG3d4Xp/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vgXvG3d4Xp/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vgXvG3d4Xp/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vgXvG3d4Xp/code.cpg.bin`
exported 1438 nodes, 6299 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vgXvG3d4Xp/export
‚úÖ CVE_2022_3107_3552_Linux_Kernel_CWE_476_Testset_a8387bac_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F3yHoqNCwb/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F3yHoqNCwb/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F3yHoqNCwb/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F3yHoqNCwb/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F3yHoqNCwb/code.cpg.bin`
exported 1577 nodes, 7139 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F3yHoqNCwb/export
‚úÖ CVE_2021_39634_3092_Linux_Kernel_CWE_416_Testset_9dfa2a81_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T8Pq7BlCyy/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T8Pq7BlCyy/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T8Pq7BlCyy/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T8Pq7BlCyy/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T8Pq7BlCyy/code.cpg.bin`
exported 1709 nodes, 8183 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T8Pq7BlCyy/export
‚úÖ CVE_2022_1184_3251_Linux_Kernel_CWE_416_Testset_f716bfb4_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0BwxTSTld9/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0BwxTSTld9/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0BwxTSTld9/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0BwxTSTld9/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0BwxTSTld9/code.cpg.bin`
exported 1775 nodes, 8111 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0BwxTSTld9/export
‚úÖ CVE_2013_7281_411_Linux_Kernel_CWE_200_Testset_6ecf815f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LPhcll1jYh/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LPhcll1jYh/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LPhcll1jYh/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LPhcll1jYh/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LPhcll1jYh/code.cpg.bin`
exported 1166 nodes, 3994 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LPhcll1jYh/export
‚úÖ CVE_2022_48502_3796_Linux_Kernel_CWE_125_Testset_c8433617_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GrzWi4A4GO/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GrzWi4A4GO/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GrzWi4A4GO/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GrzWi4A4GO/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GrzWi4A4GO/code.cpg.bin`
exported 1227 nodes, 4458 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GrzWi4A4GO/export
‚úÖ CVE_2014_9710_689_Linux_Kernel_CWE_362_Testset_5ce3e236_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BvLShFjelg/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BvLShFjelg/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BvLShFjelg/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BvLShFjelg/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BvLShFjelg/code.cpg.bin`
exported 2084 nodes, 10996 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BvLShFjelg/export
‚úÖ CVE_2013_6368_343_Linux_Kernel_CWE_20_Testset_74bfaef1_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zizYrc2pvL/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zizYrc2pvL/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zizYrc2pvL/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zizYrc2pvL/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zizYrc2pvL/code.cpg.bin`
exported 1297 nodes, 4912 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zizYrc2pvL/export
‚úÖ CVE_2023_3090_3990_Linux_Kernel_CWE_787_Testset_75038add_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z8hbEdKdqw/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z8hbEdKdqw/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z8hbEdKdqw/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z8hbEdKdqw/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z8hbEdKdqw/code.cpg.bin`
exported 1499 nodes, 6865 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z8hbEdKdqw/export
‚úÖ CVE_2022_1973_3305_Linux_Kernel_CWE_416_Testset_0a024244_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fy7O6Z35hw/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fy7O6Z35hw/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fy7O6Z35hw/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fy7O6Z35hw/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fy7O6Z35hw/code.cpg.bin`
exported 1144 nodes, 3868 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fy7O6Z35hw/export
‚úÖ CVE_2016_3134_970_Linux_Kernel_CWE_119_Testset_5c73431f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JE4FZsumgb/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JE4FZsumgb/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JE4FZsumgb/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JE4FZsumgb/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JE4FZsumgb/code.cpg.bin`
exported 1057 nodes, 3368 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JE4FZsumgb/export
‚úÖ CVE_2017_7374_1501_Linux_Kernel_CWE_476_Testset_69e2d43b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PsHnAkvrxj/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PsHnAkvrxj/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PsHnAkvrxj/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PsHnAkvrxj/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PsHnAkvrxj/code.cpg.bin`
exported 1340 nodes, 5587 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PsHnAkvrxj/export
‚úÖ CVE_2020_36386_2753_Linux_Kernel_CWE_125_Testset_89ac1180_v OK
   üìä [80/586] Rate: 10.3 files/min | Success: 79
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jmQPNGJ0nY/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jmQPNGJ0nY/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jmQPNGJ0nY/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jmQPNGJ0nY/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jmQPNGJ0nY/code.cpg.bin`
exported 1242 nodes, 4555 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jmQPNGJ0nY/export
‚úÖ CVE_2023_21255_3916_Linux_Kernel_CWE_787_Testset_2588f12e_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RYhubDU8lq/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RYhubDU8lq/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RYhubDU8lq/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RYhubDU8lq/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RYhubDU8lq/code.cpg.bin`
exported 1094 nodes, 3552 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RYhubDU8lq/export
‚úÖ CVE_2019_12817_1950_Linux_Kernel_CWE_787_Testset_614f355b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jFrArZ1X0e/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jFrArZ1X0e/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jFrArZ1X0e/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jFrArZ1X0e/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jFrArZ1X0e/code.cpg.bin`
exported 1455 nodes, 6063 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jFrArZ1X0e/export
‚úÖ CVE_2013_7266_372_Linux_Kernel_CWE_20_Testset_3f08649d_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jsKYByzAQe/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jsKYByzAQe/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jsKYByzAQe/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jsKYByzAQe/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jsKYByzAQe/code.cpg.bin`
exported 1074 nodes, 3466 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jsKYByzAQe/export
‚úÖ CVE_2023_3863_4150_Linux_Kernel_CWE_416_Testset_b0284962_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HV1EH0tdep/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HV1EH0tdep/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HV1EH0tdep/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HV1EH0tdep/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HV1EH0tdep/code.cpg.bin`
exported 1234 nodes, 4730 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HV1EH0tdep/export
‚úÖ CVE_2023_4208_4200_Linux_Kernel_CWE_416_Testset_2b153479_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XFP5KS8KAV/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XFP5KS8KAV/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XFP5KS8KAV/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XFP5KS8KAV/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XFP5KS8KAV/code.cpg.bin`
exported 1127 nodes, 3817 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XFP5KS8KAV/export
‚úÖ CVE_2017_8062_1537_Linux_Kernel_CWE_119_Testset_99b73a8d_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9uZgwxnAoG/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9uZgwxnAoG/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9uZgwxnAoG/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9uZgwxnAoG/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9uZgwxnAoG/code.cpg.bin`
exported 1279 nodes, 4899 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9uZgwxnAoG/export
‚úÖ CVE_2021_22555_2884_Linux_Kernel_CWE_787_Testset_f381f726_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ewgX7HtX7B/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ewgX7HtX7B/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ewgX7HtX7B/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ewgX7HtX7B/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ewgX7HtX7B/code.cpg.bin`
exported 1237 nodes, 4501 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ewgX7HtX7B/export
‚úÖ CVE_2021_20261_2865_Linux_Kernel_CWE_362_Testset_afb4bf4a_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dQ67ILAY9n/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dQ67ILAY9n/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dQ67ILAY9n/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dQ67ILAY9n/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dQ67ILAY9n/code.cpg.bin`
exported 1301 nodes, 4984 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dQ67ILAY9n/export
‚úÖ CVE_2022_4095_3706_Linux_Kernel_CWE_416_Testset_742932d4_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EXM4v9aSwk/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EXM4v9aSwk/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EXM4v9aSwk/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EXM4v9aSwk/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EXM4v9aSwk/code.cpg.bin`
exported 1597 nodes, 7319 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EXM4v9aSwk/export
‚úÖ CVE_2017_18218_1404_Linux_Kernel_CWE_416_Testset_156ef23c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sB6ycba5mp/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sB6ycba5mp/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sB6ycba5mp/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sB6ycba5mp/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sB6ycba5mp/code.cpg.bin`
exported 1360 nodes, 5398 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sB6ycba5mp/export
‚úÖ CVE_2014_8369_622_Linux_Kernel_CWE_119_Testset_d1b8b297_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1alkU8sUAf/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1alkU8sUAf/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1alkU8sUAf/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1alkU8sUAf/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1alkU8sUAf/code.cpg.bin`
exported 1268 nodes, 4913 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1alkU8sUAf/export
‚úÖ CVE_2019_19768_2231_Linux_Kernel_CWE_416_Testset_32dd19aa_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2Ux6tn2WU6/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2Ux6tn2WU6/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2Ux6tn2WU6/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2Ux6tn2WU6/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2Ux6tn2WU6/code.cpg.bin`
exported 1541 nodes, 6881 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2Ux6tn2WU6/export
‚úÖ CVE_2013_7266_394_Linux_Kernel_CWE_20_Testset_272cffde_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r7vv4o9sKT/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r7vv4o9sKT/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r7vv4o9sKT/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r7vv4o9sKT/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r7vv4o9sKT/code.cpg.bin`
exported 1322 nodes, 5193 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r7vv4o9sKT/export
‚úÖ CVE_2014_2523_481_Linux_Kernel_CWE_20_Testset_9dabc4c0_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xKSXQq8rPn/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xKSXQq8rPn/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xKSXQq8rPn/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xKSXQq8rPn/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xKSXQq8rPn/code.cpg.bin`
exported 1111 nodes, 3660 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xKSXQq8rPn/export
‚úÖ CVE_2022_3424_3598_Linux_Kernel_CWE_416_Testset_0eca6b8f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gEI3r1kuuk/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gEI3r1kuuk/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gEI3r1kuuk/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gEI3r1kuuk/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gEI3r1kuuk/code.cpg.bin`
exported 1330 nodes, 5255 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gEI3r1kuuk/export
‚úÖ CVE_2019_19927_2265_Linux_Kernel_CWE_125_Testset_4cf424bc_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DUv3Huozth/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DUv3Huozth/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DUv3Huozth/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DUv3Huozth/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DUv3Huozth/code.cpg.bin`
exported 1799 nodes, 8647 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DUv3Huozth/export
‚úÖ CVE_2014_0101_429_Linux_Kernel_CWE_476_Testset_d9f932d7_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XPm9NNVGTK/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XPm9NNVGTK/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XPm9NNVGTK/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XPm9NNVGTK/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XPm9NNVGTK/code.cpg.bin`
exported 1061 nodes, 3410 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XPm9NNVGTK/export
‚úÖ CVE_2022_38457_3688_Linux_Kernel_CWE_416_Testset_2cd31d2d_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PhKbWuvCmF/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PhKbWuvCmF/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PhKbWuvCmF/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PhKbWuvCmF/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PhKbWuvCmF/code.cpg.bin`
exported 1520 nodes, 6918 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PhKbWuvCmF/export
‚úÖ CVE_2018_14612_1681_Linux_Kernel_CWE_476_Testset_bd862dfe_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7GIgkahekB/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7GIgkahekB/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7GIgkahekB/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7GIgkahekB/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7GIgkahekB/code.cpg.bin`
exported 1492 nodes, 6678 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7GIgkahekB/export
‚úÖ CVE_2021_22555_2882_Linux_Kernel_CWE_787_Testset_aa6bbed8_v OK
   üìä [100/586] Rate: 10.2 files/min | Success: 99
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zHOdWB8koD/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zHOdWB8koD/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zHOdWB8koD/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zHOdWB8koD/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zHOdWB8koD/code.cpg.bin`
exported 1125 nodes, 3763 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zHOdWB8koD/export
‚úÖ CVE_2021_20261_2864_Linux_Kernel_CWE_362_Testset_7461d763_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ktlv1atrQS/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ktlv1atrQS/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ktlv1atrQS/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ktlv1atrQS/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ktlv1atrQS/code.cpg.bin`
exported 1355 nodes, 5464 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ktlv1atrQS/export
‚úÖ CVE_2022_20132_3334_Linux_Kernel_CWE_125_Testset_4caa8258_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.H6hgkVQIuR/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.H6hgkVQIuR/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.H6hgkVQIuR/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.H6hgkVQIuR/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.H6hgkVQIuR/code.cpg.bin`
exported 2817 nodes, 18802 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.H6hgkVQIuR/export
‚úÖ CVE_2013_4387_302_Linux_Kernel_CWE_119_Testset_5e33b914_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q7f0wzytAV/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q7f0wzytAV/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q7f0wzytAV/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q7f0wzytAV/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q7f0wzytAV/code.cpg.bin`
exported 1484 nodes, 6742 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q7f0wzytAV/export
‚úÖ CVE_2019_0149_1880_Linux_Kernel_CWE_20_Testset_2a14e16f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6DjEXcADxu/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6DjEXcADxu/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6DjEXcADxu/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6DjEXcADxu/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6DjEXcADxu/code.cpg.bin`
exported 1331 nodes, 5162 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6DjEXcADxu/export
‚úÖ CVE_2023_3812_4136_Linux_Kernel_CWE_787_Testset_ec4d259e_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CTckFjYvDh/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CTckFjYvDh/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CTckFjYvDh/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CTckFjYvDh/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CTckFjYvDh/code.cpg.bin`
exported 1235 nodes, 4514 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CTckFjYvDh/export
‚úÖ CVE_2018_20854_1784_Linux_Kernel_CWE_125_Testset_069535ec_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4xLRyDRAYt/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4xLRyDRAYt/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4xLRyDRAYt/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4xLRyDRAYt/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4xLRyDRAYt/code.cpg.bin`
exported 1175 nodes, 4295 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4xLRyDRAYt/export
‚úÖ CVE_2023_4611_4236_Linux_Kernel_CWE_416_Testset_2da11108_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XqVsECJ678/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XqVsECJ678/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XqVsECJ678/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XqVsECJ678/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XqVsECJ678/code.cpg.bin`
exported 1254 nodes, 4684 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XqVsECJ678/export
‚úÖ CVE_2021_4203_3147_Linux_Kernel_CWE_362_Testset_59688406_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PIfpKCpCqF/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PIfpKCpCqF/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PIfpKCpCqF/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PIfpKCpCqF/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PIfpKCpCqF/code.cpg.bin`
exported 1622 nodes, 7756 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PIfpKCpCqF/export
‚úÖ CVE_2020_8835_2809_Linux_Kernel_CWE_787_Testset_81548ac6_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4IHaoxkMoA/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4IHaoxkMoA/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4IHaoxkMoA/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4IHaoxkMoA/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4IHaoxkMoA/code.cpg.bin`
exported 1243 nodes, 4667 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4IHaoxkMoA/export
‚úÖ CVE_2018_1000004_1573_Linux_Kernel_CWE_362_Testset_cca18360_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S1QHLewmrp/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S1QHLewmrp/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S1QHLewmrp/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S1QHLewmrp/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S1QHLewmrp/code.cpg.bin`
exported 1420 nodes, 5945 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S1QHLewmrp/export
‚úÖ CVE_2014_9419_680_Linux_Kernel_CWE_200_Testset_3d01246f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YTTTqQO7dm/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YTTTqQO7dm/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YTTTqQO7dm/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YTTTqQO7dm/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YTTTqQO7dm/code.cpg.bin`
exported 1449 nodes, 5929 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YTTTqQO7dm/export
‚úÖ CVE_2013_0871_164_Linux_Kernel_CWE_362_Testset_3cadf998_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VmqqS7d0Aj/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VmqqS7d0Aj/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VmqqS7d0Aj/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VmqqS7d0Aj/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VmqqS7d0Aj/code.cpg.bin`
exported 1180 nodes, 4142 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VmqqS7d0Aj/export
‚úÖ CVE_2014_0181_436_Linux_Kernel_CWE_264_Testset_f527d0e9_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IHBv4lUzG9/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IHBv4lUzG9/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IHBv4lUzG9/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IHBv4lUzG9/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IHBv4lUzG9/code.cpg.bin`
exported 1080 nodes, 3494 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IHBv4lUzG9/export
‚úÖ CVE_2016_2143_925_Linux_Kernel_CWE_20_Testset_7b322ed4_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NsOjSPHjim/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NsOjSPHjim/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NsOjSPHjim/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NsOjSPHjim/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NsOjSPHjim/code.cpg.bin`
exported 1070 nodes, 3404 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NsOjSPHjim/export
‚úÖ CVE_2023_3610_4130_Linux_Kernel_CWE_416_Testset_c21663eb_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5xyzXmRake/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5xyzXmRake/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5xyzXmRake/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5xyzXmRake/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5xyzXmRake/code.cpg.bin`
exported 1182 nodes, 4305 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5xyzXmRake/export
‚úÖ CVE_2021_3612_3024_Linux_Kernel_CWE_787_Testset_0ea0d157_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lv40Wa4k2l/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lv40Wa4k2l/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lv40Wa4k2l/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lv40Wa4k2l/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lv40Wa4k2l/code.cpg.bin`
exported 1111 nodes, 3686 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lv40Wa4k2l/export
‚úÖ CVE_2019_19768_2228_Linux_Kernel_CWE_416_Testset_ac69dd03_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tSnQyaGOZz/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tSnQyaGOZz/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tSnQyaGOZz/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tSnQyaGOZz/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tSnQyaGOZz/code.cpg.bin`
exported 1000 nodes, 3087 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tSnQyaGOZz/export
‚úÖ CVE_2019_18885_2108_Linux_Kernel_CWE_476_Testset_8ab55ab7_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MWUmIMU32H/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MWUmIMU32H/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MWUmIMU32H/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MWUmIMU32H/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MWUmIMU32H/code.cpg.bin`
exported 1288 nodes, 5008 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MWUmIMU32H/export
‚úÖ CVE_2022_3523_3605_Linux_Kernel_CWE_416_Testset_fef93d5e_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.plgRNeBh5J/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.plgRNeBh5J/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.plgRNeBh5J/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.plgRNeBh5J/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.plgRNeBh5J/code.cpg.bin`
exported 1287 nodes, 4955 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.plgRNeBh5J/export
‚úÖ CVE_2022_2590_3480_Linux_Kernel_CWE_362_Testset_c0526aa5_v OK
   üìä [120/586] Rate: 10.4 files/min | Success: 119
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ISVM5VyTc2/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ISVM5VyTc2/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ISVM5VyTc2/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ISVM5VyTc2/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ISVM5VyTc2/code.cpg.bin`
exported 1068 nodes, 3464 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ISVM5VyTc2/export
‚úÖ CVE_2019_19332_2191_Linux_Kernel_CWE_787_Testset_024a1339_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jktO5i9ZEP/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jktO5i9ZEP/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jktO5i9ZEP/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jktO5i9ZEP/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jktO5i9ZEP/code.cpg.bin`
exported 1815 nodes, 9088 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jktO5i9ZEP/export
‚úÖ CVE_2018_7191_1843_Linux_Kernel_CWE_476_Testset_24d8163f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2v9ZX4Hl3S/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2v9ZX4Hl3S/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2v9ZX4Hl3S/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2v9ZX4Hl3S/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2v9ZX4Hl3S/code.cpg.bin`
exported 1936 nodes, 11034 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2v9ZX4Hl3S/export
‚úÖ CVE_2017_17558_1365_Linux_Kernel_CWE_787_Testset_fd864740_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i9gaPSxtDQ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i9gaPSxtDQ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i9gaPSxtDQ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i9gaPSxtDQ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i9gaPSxtDQ/code.cpg.bin`
exported 1381 nodes, 5624 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i9gaPSxtDQ/export
‚úÖ CVE_2019_19813_2245_Linux_Kernel_CWE_416_Testset_13a50a60_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.79lAb72fUF/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.79lAb72fUF/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.79lAb72fUF/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.79lAb72fUF/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.79lAb72fUF/code.cpg.bin`
exported 1153 nodes, 3945 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.79lAb72fUF/export
‚úÖ CVE_2015_8963_871_Linux_Kernel_CWE_416_Testset_80be17aa_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0WRlVoGx40/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0WRlVoGx40/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0WRlVoGx40/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0WRlVoGx40/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0WRlVoGx40/code.cpg.bin`
exported 1112 nodes, 3743 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0WRlVoGx40/export
‚úÖ CVE_2020_27825_2638_Linux_Kernel_CWE_362_Testset_730386ea_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.v612fsZ4gH/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.v612fsZ4gH/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.v612fsZ4gH/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.v612fsZ4gH/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.v612fsZ4gH/code.cpg.bin`
exported 1466 nodes, 6719 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.v612fsZ4gH/export
‚úÖ CVE_2013_2891_248_Linux_Kernel_CWE_119_Testset_ec4bc06a_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gjkyP2ppxq/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gjkyP2ppxq/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gjkyP2ppxq/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gjkyP2ppxq/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gjkyP2ppxq/code.cpg.bin`
exported 1069 nodes, 3419 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gjkyP2ppxq/export
‚úÖ CVE_2023_3863_4146_Linux_Kernel_CWE_416_Testset_ebf744eb_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gYxv9xxpNf/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gYxv9xxpNf/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gYxv9xxpNf/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gYxv9xxpNf/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gYxv9xxpNf/code.cpg.bin`
exported 1286 nodes, 4981 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gYxv9xxpNf/export
‚úÖ CVE_2022_1011_3230_Linux_Kernel_CWE_416_Testset_5ae9d49a_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.58yijKGLr9/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.58yijKGLr9/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.58yijKGLr9/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.58yijKGLr9/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.58yijKGLr9/code.cpg.bin`
exported 1229 nodes, 4632 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.58yijKGLr9/export
‚úÖ CVE_2020_36313_2718_Linux_Kernel_CWE_416_Testset_693d8e28_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.axRQBjLno8/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.axRQBjLno8/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.axRQBjLno8/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.axRQBjLno8/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.axRQBjLno8/code.cpg.bin`
exported 1153 nodes, 3945 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.axRQBjLno8/export
‚úÖ CVE_2015_8963_871_Linux_Kernel_CWE_362_Testset_80be17aa_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BVzYvxXWUv/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BVzYvxXWUv/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BVzYvxXWUv/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BVzYvxXWUv/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BVzYvxXWUv/code.cpg.bin`
exported 1230 nodes, 4846 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BVzYvxXWUv/export
‚úÖ CVE_2016_8405_1118_Linux_Kernel_CWE_200_Testset_23c26744_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.85Kqd1WS3y/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.85Kqd1WS3y/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.85Kqd1WS3y/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.85Kqd1WS3y/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.85Kqd1WS3y/code.cpg.bin`
exported 1208 nodes, 4704 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.85Kqd1WS3y/export
‚úÖ CVE_2016_8405_1117_Linux_Kernel_CWE_200_Testset_f5ea88bb_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VWqEHN9FqX/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VWqEHN9FqX/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VWqEHN9FqX/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VWqEHN9FqX/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VWqEHN9FqX/code.cpg.bin`
exported 1370 nodes, 5700 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VWqEHN9FqX/export
‚úÖ CVE_2017_7645_1527_Linux_Kernel_CWE_20_Testset_34ba6ff5_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rrUnhvifmT/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rrUnhvifmT/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rrUnhvifmT/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rrUnhvifmT/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rrUnhvifmT/code.cpg.bin`
exported 1375 nodes, 5940 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rrUnhvifmT/export
‚úÖ CVE_2016_6786_1081_Linux_Kernel_CWE_264_Testset_3a55d947_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.w7jAxjNFDL/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.w7jAxjNFDL/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.w7jAxjNFDL/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.w7jAxjNFDL/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.w7jAxjNFDL/code.cpg.bin`
exported 1485 nodes, 6240 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.w7jAxjNFDL/export
‚úÖ CVE_2018_14646_1701_Linux_Kernel_CWE_476_Testset_a21d644e_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D5qaGNsmVf/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D5qaGNsmVf/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D5qaGNsmVf/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D5qaGNsmVf/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D5qaGNsmVf/code.cpg.bin`
exported 1323 nodes, 5160 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D5qaGNsmVf/export
‚úÖ CVE_2016_3134_962_Linux_Kernel_CWE_119_Testset_154eba68_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ORC9IHc1rk/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ORC9IHc1rk/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ORC9IHc1rk/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ORC9IHc1rk/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ORC9IHc1rk/code.cpg.bin`
exported 1402 nodes, 5827 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ORC9IHc1rk/export
‚úÖ CVE_2017_7979_1534_Linux_Kernel_CWE_20_Testset_e8d186e0_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kgvaJBVDhk/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kgvaJBVDhk/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kgvaJBVDhk/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kgvaJBVDhk/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kgvaJBVDhk/code.cpg.bin`
exported 1185 nodes, 4353 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kgvaJBVDhk/export
‚úÖ CVE_2021_3491_3013_Linux_Kernel_CWE_787_Testset_a5fb70ce_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.voydhDJiEQ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.voydhDJiEQ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.voydhDJiEQ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.voydhDJiEQ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.voydhDJiEQ/code.cpg.bin`
exported 1158 nodes, 4144 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.voydhDJiEQ/export
‚úÖ CVE_2020_27784_2631_Linux_Kernel_CWE_416_Testset_b3d9bcce_v OK
   üìä [140/586] Rate: 10.7 files/min | Success: 139
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.389yyGlubw/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.389yyGlubw/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.389yyGlubw/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.389yyGlubw/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.389yyGlubw/code.cpg.bin`
exported 1230 nodes, 4499 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.389yyGlubw/export
‚úÖ CVE_2015_9016_882_Linux_Kernel_CWE_362_Testset_5e442f48_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ocr8A3gz3c/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ocr8A3gz3c/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ocr8A3gz3c/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ocr8A3gz3c/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ocr8A3gz3c/code.cpg.bin`
exported 1044 nodes, 3296 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ocr8A3gz3c/export
‚úÖ CVE_2020_27675_2626_Linux_Kernel_CWE_362_Testset_861bb14f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4YKJn87etc/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4YKJn87etc/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4YKJn87etc/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4YKJn87etc/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4YKJn87etc/code.cpg.bin`
exported 1281 nodes, 4691 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4YKJn87etc/export
‚úÖ CVE_2022_2905_3510_Linux_Kernel_CWE_125_Testset_d911b95c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jqIMG9KxBr/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jqIMG9KxBr/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jqIMG9KxBr/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jqIMG9KxBr/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jqIMG9KxBr/code.cpg.bin`
exported 2048 nodes, 11320 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jqIMG9KxBr/export
‚úÖ CVE_2023_32247_4015_Linux_Kernel_CWE_401_Testset_3bd293da_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.J09vLeyM2X/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.J09vLeyM2X/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.J09vLeyM2X/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.J09vLeyM2X/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.J09vLeyM2X/code.cpg.bin`
exported 1368 nodes, 5830 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.J09vLeyM2X/export
‚úÖ CVE_2019_18680_2090_Linux_Kernel_CWE_476_Testset_b8187934_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Mz2Fcttjkl/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Mz2Fcttjkl/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Mz2Fcttjkl/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Mz2Fcttjkl/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Mz2Fcttjkl/code.cpg.bin`
exported 1043 nodes, 3304 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Mz2Fcttjkl/export
‚úÖ CVE_2012_3552_80_Linux_Kernel_CWE_362_Testset_211a5710_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qYjfHI1HGo/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qYjfHI1HGo/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qYjfHI1HGo/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qYjfHI1HGo/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qYjfHI1HGo/code.cpg.bin`
exported 1354 nodes, 5395 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qYjfHI1HGo/export
‚úÖ CVE_2016_4998_1049_Linux_Kernel_CWE_119_Testset_e778ea74_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dqRLCgNZQ1/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dqRLCgNZQ1/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dqRLCgNZQ1/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dqRLCgNZQ1/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dqRLCgNZQ1/code.cpg.bin`
exported 1127 nodes, 3791 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dqRLCgNZQ1/export
‚úÖ CVE_2017_8067_1541_Linux_Kernel_CWE_787_Testset_ca6ea128_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TLhNqHfbr8/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TLhNqHfbr8/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TLhNqHfbr8/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TLhNqHfbr8/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TLhNqHfbr8/code.cpg.bin`
exported 3401 nodes, 24306 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TLhNqHfbr8/export
‚úÖ CVE_2017_18549_1437_Linux_Kernel_CWE_200_Testset_beb333d5_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Lx78p3lvIU/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Lx78p3lvIU/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Lx78p3lvIU/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Lx78p3lvIU/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Lx78p3lvIU/code.cpg.bin`
exported 1120 nodes, 3755 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Lx78p3lvIU/export
‚úÖ CVE_2018_20836_1782_Linux_Kernel_CWE_362_Testset_198e9554_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NAAX8Cvv0u/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NAAX8Cvv0u/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NAAX8Cvv0u/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NAAX8Cvv0u/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NAAX8Cvv0u/code.cpg.bin`
exported 1433 nodes, 6587 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NAAX8Cvv0u/export
‚úÖ CVE_2021_28691_2916_Linux_Kernel_CWE_416_Testset_2aac4bc3_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4ewwObZB9G/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4ewwObZB9G/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4ewwObZB9G/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4ewwObZB9G/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4ewwObZB9G/code.cpg.bin`
exported 1391 nodes, 6640 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4ewwObZB9G/export
‚úÖ CVE_2020_14381_2519_Linux_Kernel_CWE_416_Testset_e5839f36_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FuU5cCptzV/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FuU5cCptzV/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FuU5cCptzV/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FuU5cCptzV/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FuU5cCptzV/code.cpg.bin`
exported 1592 nodes, 7989 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FuU5cCptzV/export
‚úÖ CVE_2020_11608_2427_Linux_Kernel_CWE_476_Testset_24196b76_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lirL5KpAAs/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lirL5KpAAs/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lirL5KpAAs/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lirL5KpAAs/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lirL5KpAAs/code.cpg.bin`
exported 1947 nodes, 10715 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lirL5KpAAs/export
‚úÖ CVE_2022_47942_3774_Linux_Kernel_CWE_787_Testset_d22d0704_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nUZgHWhA5K/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nUZgHWhA5K/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nUZgHWhA5K/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nUZgHWhA5K/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nUZgHWhA5K/code.cpg.bin`
exported 1036 nodes, 3251 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nUZgHWhA5K/export
‚úÖ CVE_2020_12364_2468_Linux_Kernel_CWE_476_Testset_787b7839_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pjP8Y2902K/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pjP8Y2902K/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pjP8Y2902K/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pjP8Y2902K/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pjP8Y2902K/code.cpg.bin`
exported 1310 nodes, 5306 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pjP8Y2902K/export
‚úÖ CVE_2022_20409_3351_Linux_Kernel_CWE_416_Testset_8adb6151_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.57czNcA2w3/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.57czNcA2w3/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.57czNcA2w3/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.57czNcA2w3/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.57czNcA2w3/code.cpg.bin`
exported 1183 nodes, 4103 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.57czNcA2w3/export
‚úÖ CVE_2013_4299_293_Linux_Kernel_CWE_264_Testset_d66788a0_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y1BHthb5iz/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y1BHthb5iz/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y1BHthb5iz/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y1BHthb5iz/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y1BHthb5iz/code.cpg.bin`
exported 1967 nodes, 11084 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y1BHthb5iz/export
‚úÖ CVE_2023_6622_4307_Linux_Kernel_CWE_476_Testset_332404a7_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DuiCd1XxOn/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DuiCd1XxOn/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DuiCd1XxOn/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DuiCd1XxOn/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DuiCd1XxOn/code.cpg.bin`
exported 1203 nodes, 4312 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DuiCd1XxOn/export
‚úÖ CVE_2020_36387_2757_Linux_Kernel_CWE_416_Testset_a47ac8aa_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7TBzfByL75/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7TBzfByL75/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7TBzfByL75/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7TBzfByL75/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7TBzfByL75/code.cpg.bin`
exported 1109 nodes, 3747 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7TBzfByL75/export
‚úÖ CVE_2020_10690_2399_Linux_Kernel_CWE_416_Testset_2a02b95c_v OK
   üìä [160/586] Rate: 10.9 files/min | Success: 159
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yjEvN3H6Pu/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yjEvN3H6Pu/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yjEvN3H6Pu/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yjEvN3H6Pu/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yjEvN3H6Pu/code.cpg.bin`
exported 1219 nodes, 4538 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yjEvN3H6Pu/export
‚úÖ CVE_2020_25639_2588_Linux_Kernel_CWE_476_Testset_a3f81464_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dCi24cdVvr/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dCi24cdVvr/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dCi24cdVvr/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dCi24cdVvr/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dCi24cdVvr/code.cpg.bin`
exported 2420 nodes, 14806 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dCi24cdVvr/export
‚úÖ CVE_2020_14386_2524_Linux_Kernel_CWE_787_Testset_6d712e68_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gD9xRiP08i/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gD9xRiP08i/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gD9xRiP08i/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gD9xRiP08i/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gD9xRiP08i/code.cpg.bin`
exported 1091 nodes, 3706 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gD9xRiP08i/export
‚úÖ CVE_2017_13305_1276_Linux_Kernel_CWE_125_Testset_b062c0f9_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1mUNGc4YkB/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1mUNGc4YkB/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1mUNGc4YkB/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1mUNGc4YkB/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1mUNGc4YkB/code.cpg.bin`
exported 1787 nodes, 9432 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1mUNGc4YkB/export
‚úÖ CVE_2019_19072_2153_Linux_Kernel_CWE_401_Testset_d60ed076_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.m88aUpikUI/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.m88aUpikUI/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.m88aUpikUI/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.m88aUpikUI/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.m88aUpikUI/code.cpg.bin`
exported 3166 nodes, 23248 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.m88aUpikUI/export
‚úÖ CVE_2023_26544_3968_Linux_Kernel_CWE_416_Testset_2f3076bf_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a2KvtNq7s9/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a2KvtNq7s9/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a2KvtNq7s9/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a2KvtNq7s9/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a2KvtNq7s9/code.cpg.bin`
exported 2062 nodes, 11342 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a2KvtNq7s9/export
‚úÖ CVE_2022_4842_3788_Linux_Kernel_CWE_476_Testset_49aec8e9_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o65eyrdU4l/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o65eyrdU4l/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o65eyrdU4l/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o65eyrdU4l/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o65eyrdU4l/code.cpg.bin`
exported 1092 nodes, 3591 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o65eyrdU4l/export
‚úÖ CVE_2021_4093_3131_Linux_Kernel_CWE_787_Testset_32247baf_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rxKlPrG7u4/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rxKlPrG7u4/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rxKlPrG7u4/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rxKlPrG7u4/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rxKlPrG7u4/code.cpg.bin`
exported 1425 nodes, 5738 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rxKlPrG7u4/export
‚úÖ CVE_2018_1093_1626_Linux_Kernel_CWE_125_Testset_4b31b229_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BcGbe9LRek/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BcGbe9LRek/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BcGbe9LRek/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BcGbe9LRek/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BcGbe9LRek/code.cpg.bin`
exported 1463 nodes, 6450 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BcGbe9LRek/export
‚úÖ CVE_2013_2888_245_Linux_Kernel_CWE_20_Testset_c53fd6ee_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1euQBxRhBn/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1euQBxRhBn/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1euQBxRhBn/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1euQBxRhBn/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1euQBxRhBn/code.cpg.bin`
exported 1163 nodes, 4206 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1euQBxRhBn/export
‚úÖ CVE_2022_23222_3460_Linux_Kernel_CWE_476_Testset_6dfcabcd_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uAeUtWylXL/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uAeUtWylXL/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uAeUtWylXL/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uAeUtWylXL/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uAeUtWylXL/code.cpg.bin`
exported 1334 nodes, 5198 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uAeUtWylXL/export
‚úÖ CVE_2023_39194_4182_Linux_Kernel_CWE_125_Testset_f1ea59f1_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9SH1plxPKz/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9SH1plxPKz/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9SH1plxPKz/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9SH1plxPKz/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9SH1plxPKz/code.cpg.bin`
exported 1471 nodes, 6185 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9SH1plxPKz/export
‚úÖ CVE_2015_8569_833_Linux_Kernel_CWE_200_Testset_a3a24224_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sOWoog2pUp/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sOWoog2pUp/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sOWoog2pUp/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sOWoog2pUp/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sOWoog2pUp/code.cpg.bin`
exported 1063 nodes, 3411 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sOWoog2pUp/export
‚úÖ CVE_2017_16911_1345_Linux_Kernel_CWE_200_Testset_da8785c5_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vvtAxfBm2f/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vvtAxfBm2f/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vvtAxfBm2f/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vvtAxfBm2f/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vvtAxfBm2f/code.cpg.bin`
exported 2320 nodes, 13140 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vvtAxfBm2f/export
‚úÖ CVE_2021_4203_3146_Linux_Kernel_CWE_362_Testset_03deb496_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zvR2pplTTY/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zvR2pplTTY/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zvR2pplTTY/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zvR2pplTTY/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zvR2pplTTY/code.cpg.bin`
exported 1233 nodes, 4732 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zvR2pplTTY/export
‚úÖ CVE_2023_3111_3998_Linux_Kernel_CWE_416_Testset_7c017226_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hFs19aCPSy/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hFs19aCPSy/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hFs19aCPSy/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hFs19aCPSy/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hFs19aCPSy/code.cpg.bin`
exported 1590 nodes, 7051 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hFs19aCPSy/export
‚úÖ CVE_2019_19080_2163_Linux_Kernel_CWE_401_Testset_f47fc2fa_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k23vmE0Uos/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k23vmE0Uos/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k23vmE0Uos/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k23vmE0Uos/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k23vmE0Uos/code.cpg.bin`
exported 3179 nodes, 19382 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k23vmE0Uos/export
‚úÖ CVE_2020_36558_2767_Linux_Kernel_CWE_362_Testset_fe01b5b7_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BU1uri1T1E/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BU1uri1T1E/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BU1uri1T1E/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BU1uri1T1E/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BU1uri1T1E/code.cpg.bin`
exported 1161 nodes, 4213 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BU1uri1T1E/export
‚úÖ CVE_2023_0030_3806_Linux_Kernel_CWE_416_Testset_4d2fb79c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oUrVi2c4qn/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oUrVi2c4qn/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oUrVi2c4qn/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oUrVi2c4qn/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oUrVi2c4qn/code.cpg.bin`
exported 2293 nodes, 17593 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oUrVi2c4qn/export
‚úÖ CVE_2016_8630_1119_Linux_Kernel_CWE_476_Testset_9fe70ded_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2OmMML17SS/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2OmMML17SS/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2OmMML17SS/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2OmMML17SS/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2OmMML17SS/code.cpg.bin`
exported 1072 nodes, 3444 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2OmMML17SS/export
‚úÖ CVE_2022_20369_3349_Linux_Kernel_CWE_787_Testset_dc836f10_v OK
   üìä [180/586] Rate: 10.9 files/min | Success: 179
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.s2cXpoLgsQ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.s2cXpoLgsQ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.s2cXpoLgsQ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.s2cXpoLgsQ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.s2cXpoLgsQ/code.cpg.bin`
exported 1346 nodes, 5161 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.s2cXpoLgsQ/export
‚úÖ CVE_2014_0181_453_Linux_Kernel_CWE_264_Testset_84a88d06_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.unFCI7xUAA/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.unFCI7xUAA/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.unFCI7xUAA/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.unFCI7xUAA/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.unFCI7xUAA/code.cpg.bin`
exported 1759 nodes, 9270 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.unFCI7xUAA/export
‚úÖ CVE_2022_1048_3245_Linux_Kernel_CWE_416_Testset_f258371a_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dDIqQIr5QY/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dDIqQIr5QY/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dDIqQIr5QY/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dDIqQIr5QY/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dDIqQIr5QY/code.cpg.bin`
exported 1103 nodes, 3666 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dDIqQIr5QY/export
‚úÖ CVE_2019_15098_1988_Linux_Kernel_CWE_476_Testset_a1791f69_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BO6NX6NMPT/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BO6NX6NMPT/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BO6NX6NMPT/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BO6NX6NMPT/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BO6NX6NMPT/code.cpg.bin`
exported 1091 nodes, 3582 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BO6NX6NMPT/export
‚úÖ CVE_2023_3863_4148_Linux_Kernel_CWE_416_Testset_0ed0eb1f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yQ5cr6RzSh/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yQ5cr6RzSh/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yQ5cr6RzSh/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yQ5cr6RzSh/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yQ5cr6RzSh/code.cpg.bin`
exported 1461 nodes, 6221 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yQ5cr6RzSh/export
‚úÖ CVE_2019_19063_2144_Linux_Kernel_CWE_401_Testset_5ed18888_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8SnHaY0vtn/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8SnHaY0vtn/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8SnHaY0vtn/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8SnHaY0vtn/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8SnHaY0vtn/code.cpg.bin`
exported 1435 nodes, 5959 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8SnHaY0vtn/export
‚úÖ CVE_2022_22942_3417_Linux_Kernel_CWE_416_Testset_d5235d5e_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BEHna5XHg5/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BEHna5XHg5/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BEHna5XHg5/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BEHna5XHg5/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BEHna5XHg5/code.cpg.bin`
exported 1127 nodes, 3799 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BEHna5XHg5/export
‚úÖ CVE_2014_0203_463_Linux_Kernel_CWE_416_Testset_2523e8fc_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g81ILpyWiu/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g81ILpyWiu/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g81ILpyWiu/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g81ILpyWiu/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g81ILpyWiu/code.cpg.bin`
exported 1732 nodes, 8479 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g81ILpyWiu/export
‚úÖ CVE_2012_3552_90_Linux_Kernel_CWE_362_Testset_194ffed4_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.C16ssVsSN2/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.C16ssVsSN2/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.C16ssVsSN2/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.C16ssVsSN2/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.C16ssVsSN2/code.cpg.bin`
exported 1640 nodes, 7788 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.C16ssVsSN2/export
‚úÖ CVE_2022_42896_3739_Linux_Kernel_CWE_416_Testset_aad6c8d2_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iyd32RhlRD/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iyd32RhlRD/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iyd32RhlRD/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iyd32RhlRD/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iyd32RhlRD/code.cpg.bin`
exported 1380 nodes, 6121 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iyd32RhlRD/export
‚úÖ CVE_2017_13166_1267_Linux_Kernel_CWE_787_Testset_dc172d32_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.G9HCRIOtsq/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.G9HCRIOtsq/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.G9HCRIOtsq/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.G9HCRIOtsq/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.G9HCRIOtsq/code.cpg.bin`
exported 1577 nodes, 7414 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.G9HCRIOtsq/export
‚úÖ CVE_2019_16232_2045_Linux_Kernel_CWE_476_Testset_294e302a_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bpoURN1jod/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bpoURN1jod/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bpoURN1jod/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bpoURN1jod/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bpoURN1jod/code.cpg.bin`
exported 2959 nodes, 19405 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bpoURN1jod/export
‚úÖ CVE_2013_4514_324_Linux_Kernel_CWE_119_Testset_c98a539b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6PFqf5b2AZ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6PFqf5b2AZ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6PFqf5b2AZ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6PFqf5b2AZ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6PFqf5b2AZ/code.cpg.bin`
exported 1508 nodes, 6797 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6PFqf5b2AZ/export
‚úÖ CVE_2021_39686_3101_Linux_Kernel_CWE_362_Testset_0688b620_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vglrduwYgS/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vglrduwYgS/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vglrduwYgS/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vglrduwYgS/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vglrduwYgS/code.cpg.bin`
exported 1185 nodes, 4309 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vglrduwYgS/export
‚úÖ CVE_2019_19069_2150_Linux_Kernel_CWE_401_Testset_aa661d21_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qzB2sh50Vu/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qzB2sh50Vu/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qzB2sh50Vu/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qzB2sh50Vu/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qzB2sh50Vu/code.cpg.bin`
exported 1387 nodes, 5867 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qzB2sh50Vu/export
‚úÖ CVE_2017_15265_1301_Linux_Kernel_CWE_362_Testset_9aae8e23_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wwirCkp7YP/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wwirCkp7YP/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wwirCkp7YP/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wwirCkp7YP/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wwirCkp7YP/code.cpg.bin`
exported 1430 nodes, 6050 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wwirCkp7YP/export
‚úÖ CVE_2014_0205_465_Linux_Kernel_CWE_119_Testset_c52e8f74_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lyKGguunBI/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lyKGguunBI/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lyKGguunBI/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lyKGguunBI/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lyKGguunBI/code.cpg.bin`
exported 1030 nodes, 3211 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lyKGguunBI/export
‚úÖ CVE_2019_19815_2253_Linux_Kernel_CWE_476_Testset_98824a5b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9xahSw8e9R/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9xahSw8e9R/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9xahSw8e9R/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9xahSw8e9R/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9xahSw8e9R/code.cpg.bin`
exported 1265 nodes, 4736 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9xahSw8e9R/export
‚úÖ CVE_2020_25212_2578_Linux_Kernel_CWE_787_Testset_ee3d9d5e_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SkLioxxny5/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SkLioxxny5/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SkLioxxny5/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SkLioxxny5/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SkLioxxny5/code.cpg.bin`
exported 1695 nodes, 8153 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SkLioxxny5/export
‚úÖ CVE_2017_18017_1387_Linux_Kernel_CWE_416_Testset_72a6a33e_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Eo2bsyYNy6/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Eo2bsyYNy6/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Eo2bsyYNy6/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Eo2bsyYNy6/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Eo2bsyYNy6/code.cpg.bin`
exported 1499 nodes, 6770 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Eo2bsyYNy6/export
‚úÖ CVE_2019_19036_2121_Linux_Kernel_CWE_476_Testset_51e4579a_v OK
   üìä [200/586] Rate: 11.0 files/min | Success: 199
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kSt6xGrTBG/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kSt6xGrTBG/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kSt6xGrTBG/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kSt6xGrTBG/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kSt6xGrTBG/code.cpg.bin`
exported 1042 nodes, 3297 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kSt6xGrTBG/export
‚úÖ CVE_2018_9465_1868_Linux_Kernel_CWE_416_Testset_9b64d4d4_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.v7LAN0jErM/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.v7LAN0jErM/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.v7LAN0jErM/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.v7LAN0jErM/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.v7LAN0jErM/code.cpg.bin`
exported 1453 nodes, 6432 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.v7LAN0jErM/export
‚úÖ CVE_2007_6761_4_Linux_Kernel_CWE_119_Testset_fa015cb2_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XNEY1PHnp4/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XNEY1PHnp4/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XNEY1PHnp4/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XNEY1PHnp4/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XNEY1PHnp4/code.cpg.bin`
exported 1059 nodes, 3356 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XNEY1PHnp4/export
‚úÖ CVE_2017_12146_1255_Linux_Kernel_CWE_362_Testset_c156efe9_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YiC6OODGcS/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YiC6OODGcS/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YiC6OODGcS/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YiC6OODGcS/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YiC6OODGcS/code.cpg.bin`
exported 1089 nodes, 3568 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YiC6OODGcS/export
‚úÖ CVE_2017_15116_1292_Linux_Kernel_CWE_476_Testset_9532622c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DHlIRvEa94/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DHlIRvEa94/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DHlIRvEa94/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DHlIRvEa94/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DHlIRvEa94/code.cpg.bin`
exported 1444 nodes, 5949 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DHlIRvEa94/export
‚úÖ CVE_2014_0181_441_Linux_Kernel_CWE_264_Testset_5d46c69a_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NqE8jTZJap/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NqE8jTZJap/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NqE8jTZJap/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NqE8jTZJap/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NqE8jTZJap/code.cpg.bin`
exported 1331 nodes, 5096 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NqE8jTZJap/export
‚úÖ CVE_2023_32250_4024_Linux_Kernel_CWE_362_Testset_ca2480eb_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i4p5IxqLfy/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i4p5IxqLfy/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i4p5IxqLfy/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i4p5IxqLfy/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i4p5IxqLfy/code.cpg.bin`
exported 1086 nodes, 3541 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i4p5IxqLfy/export
‚úÖ CVE_2014_7284_588_Linux_Kernel_CWE_200_Testset_99c58ea3_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3Y1K8cEVLX/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3Y1K8cEVLX/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3Y1K8cEVLX/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3Y1K8cEVLX/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3Y1K8cEVLX/code.cpg.bin`
exported 1827 nodes, 9403 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3Y1K8cEVLX/export
‚úÖ CVE_2012_3552_87_Linux_Kernel_CWE_362_Testset_c2972ddc_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ugGvA9s4Z1/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ugGvA9s4Z1/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ugGvA9s4Z1/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ugGvA9s4Z1/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ugGvA9s4Z1/code.cpg.bin`
exported 1098 nodes, 3610 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ugGvA9s4Z1/export
‚úÖ CVE_2022_2318_3428_Linux_Kernel_CWE_416_Testset_7b79d026_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9SsFERkUvt/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9SsFERkUvt/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9SsFERkUvt/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9SsFERkUvt/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9SsFERkUvt/code.cpg.bin`
exported 1137 nodes, 3843 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9SsFERkUvt/export
‚úÖ CVE_2019_19083_2175_Linux_Kernel_CWE_401_Testset_ee3a2de1_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nH2ESeKfaf/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nH2ESeKfaf/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nH2ESeKfaf/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nH2ESeKfaf/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nH2ESeKfaf/code.cpg.bin`
exported 1057 nodes, 3405 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nH2ESeKfaf/export
‚úÖ CVE_2017_10661_1244_Linux_Kernel_CWE_416_Testset_140eb5d4_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pqo0YJaWMT/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pqo0YJaWMT/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pqo0YJaWMT/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pqo0YJaWMT/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pqo0YJaWMT/code.cpg.bin`
exported 1265 nodes, 4805 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pqo0YJaWMT/export
‚úÖ CVE_2014_1690_474_Linux_Kernel_CWE_200_Testset_84f2da1f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iLLofzGq2s/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iLLofzGq2s/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iLLofzGq2s/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iLLofzGq2s/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iLLofzGq2s/code.cpg.bin`
exported 1794 nodes, 8692 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iLLofzGq2s/export
‚úÖ CVE_2012_6540_124_Linux_Kernel_CWE_200_Testset_f6bf94b6_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.shyt6BXTgu/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.shyt6BXTgu/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.shyt6BXTgu/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.shyt6BXTgu/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.shyt6BXTgu/code.cpg.bin`
exported 1051 nodes, 3344 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.shyt6BXTgu/export
‚úÖ CVE_2018_7995_1855_Linux_Kernel_CWE_362_Testset_9dc498f0_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bcQcyHQ3NI/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bcQcyHQ3NI/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bcQcyHQ3NI/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bcQcyHQ3NI/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bcQcyHQ3NI/code.cpg.bin`
exported 2098 nodes, 11582 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bcQcyHQ3NI/export
‚úÖ CVE_2016_3841_1003_Linux_Kernel_CWE_264_Testset_f7243f8a_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.N7i54DdVty/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.N7i54DdVty/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.N7i54DdVty/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.N7i54DdVty/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.N7i54DdVty/code.cpg.bin`
exported 1401 nodes, 5792 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.N7i54DdVty/export
‚úÖ CVE_2021_20194_2856_Linux_Kernel_CWE_20_Testset_3f854074_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dzGltD4oTc/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dzGltD4oTc/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dzGltD4oTc/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dzGltD4oTc/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dzGltD4oTc/code.cpg.bin`
exported 1619 nodes, 7640 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dzGltD4oTc/export
‚úÖ CVE_2011_4915_37_Linux_Kernel_CWE_200_Testset_b7c7ce2c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WEDMwD3sJC/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WEDMwD3sJC/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WEDMwD3sJC/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WEDMwD3sJC/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WEDMwD3sJC/code.cpg.bin`
exported 1262 nodes, 4973 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WEDMwD3sJC/export
‚úÖ CVE_2023_3772_4134_Linux_Kernel_CWE_476_Testset_d67522fb_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0MqDH7RPms/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0MqDH7RPms/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0MqDH7RPms/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0MqDH7RPms/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0MqDH7RPms/code.cpg.bin`
exported 1426 nodes, 6036 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0MqDH7RPms/export
‚úÖ CVE_2013_2895_253_Linux_Kernel_CWE_119_Testset_daf7c55b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tlH7DdJfdy/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tlH7DdJfdy/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tlH7DdJfdy/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tlH7DdJfdy/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tlH7DdJfdy/code.cpg.bin`
exported 1238 nodes, 4580 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tlH7DdJfdy/export
‚úÖ CVE_2018_1095_1630_Linux_Kernel_CWE_476_Testset_b62ddc27_v OK
   üìä [220/586] Rate: 11.1 files/min | Success: 219
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ONjmYajna5/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ONjmYajna5/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ONjmYajna5/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ONjmYajna5/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ONjmYajna5/code.cpg.bin`
exported 1244 nodes, 4618 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ONjmYajna5/export
‚úÖ CVE_2018_3665_1803_Linux_Kernel_CWE_200_Testset_9d821b48_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ktYzCar26V/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ktYzCar26V/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ktYzCar26V/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ktYzCar26V/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ktYzCar26V/code.cpg.bin`
exported 1273 nodes, 5168 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ktYzCar26V/export
‚úÖ CVE_2019_12818_1953_Linux_Kernel_CWE_476_Testset_ae0bf1c1_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mxgClYb6Iz/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mxgClYb6Iz/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mxgClYb6Iz/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mxgClYb6Iz/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mxgClYb6Iz/code.cpg.bin`
exported 1108 nodes, 3688 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mxgClYb6Iz/export
‚úÖ CVE_2019_19768_2230_Linux_Kernel_CWE_416_Testset_bc0034ed_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yAogu1Ueys/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yAogu1Ueys/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yAogu1Ueys/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yAogu1Ueys/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yAogu1Ueys/code.cpg.bin`
exported 1074 nodes, 3505 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yAogu1Ueys/export
‚úÖ CVE_2020_27067_2613_Linux_Kernel_CWE_416_Testset_40222de1_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EGm2BaE5pI/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EGm2BaE5pI/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EGm2BaE5pI/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EGm2BaE5pI/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EGm2BaE5pI/code.cpg.bin`
exported 1144 nodes, 3880 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EGm2BaE5pI/export
‚úÖ CVE_2018_20509_1761_Linux_Kernel_CWE_200_Testset_6778223d_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MWXiSLK1qn/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MWXiSLK1qn/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MWXiSLK1qn/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MWXiSLK1qn/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MWXiSLK1qn/code.cpg.bin`
exported 1066 nodes, 3410 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MWXiSLK1qn/export
‚úÖ CVE_2013_6383_351_Linux_Kernel_CWE_264_Testset_4f07d7cb_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aFzZTXYGVW/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aFzZTXYGVW/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aFzZTXYGVW/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aFzZTXYGVW/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aFzZTXYGVW/code.cpg.bin`
exported 1214 nodes, 4373 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aFzZTXYGVW/export
‚úÖ CVE_2016_4578_1028_Linux_Kernel_CWE_200_Testset_9da52f0f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zHVlqflxI9/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zHVlqflxI9/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zHVlqflxI9/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zHVlqflxI9/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zHVlqflxI9/code.cpg.bin`
exported 1565 nodes, 7224 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zHVlqflxI9/export
‚úÖ CVE_2022_33742_3586_Linux_Kernel_CWE_200_Testset_a7013bc6_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lhAmYEb9mI/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lhAmYEb9mI/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lhAmYEb9mI/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lhAmYEb9mI/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lhAmYEb9mI/code.cpg.bin`
exported 7877 nodes, 67642 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lhAmYEb9mI/export
‚úÖ CVE_2013_4515_326_Linux_Kernel_CWE_200_Testset_2c2a5a2b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bRZE0A0Jq9/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bRZE0A0Jq9/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bRZE0A0Jq9/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bRZE0A0Jq9/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bRZE0A0Jq9/code.cpg.bin`
exported 1291 nodes, 4875 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bRZE0A0Jq9/export
‚úÖ CVE_2012_3552_78_Linux_Kernel_CWE_362_Testset_3b88cc38_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lt8WXBAv74/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lt8WXBAv74/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lt8WXBAv74/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lt8WXBAv74/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lt8WXBAv74/code.cpg.bin`
exported 1439 nodes, 6280 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lt8WXBAv74/export
‚úÖ CVE_2019_10125_1890_Linux_Kernel_CWE_416_Testset_01c3f3c8_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6enjLGVwtM/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6enjLGVwtM/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6enjLGVwtM/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6enjLGVwtM/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6enjLGVwtM/code.cpg.bin`
exported 1591 nodes, 6844 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6enjLGVwtM/export
‚úÖ CVE_2013_7281_409_Linux_Kernel_CWE_200_Testset_0eb8484b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.A8hQEt7fxg/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.A8hQEt7fxg/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.A8hQEt7fxg/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.A8hQEt7fxg/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.A8hQEt7fxg/code.cpg.bin`
exported 1196 nodes, 4186 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.A8hQEt7fxg/export
‚úÖ CVE_2016_5243_1053_Linux_Kernel_CWE_200_Testset_b7f42c50_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z3zYjfHROi/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z3zYjfHROi/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z3zYjfHROi/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z3zYjfHROi/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z3zYjfHROi/code.cpg.bin`
exported 1168 nodes, 4041 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z3zYjfHROi/export
‚úÖ CVE_2022_20409_3355_Linux_Kernel_CWE_416_Testset_dd35a289_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x3xWAAAWTw/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x3xWAAAWTw/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x3xWAAAWTw/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x3xWAAAWTw/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x3xWAAAWTw/code.cpg.bin`
exported 3990 nodes, 34730 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x3xWAAAWTw/export
‚úÖ CVE_2019_2181_2291_Linux_Kernel_CWE_787_Testset_38254e2b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uduwaXDhry/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uduwaXDhry/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uduwaXDhry/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uduwaXDhry/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uduwaXDhry/code.cpg.bin`
exported 1080 nodes, 3555 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uduwaXDhry/export
‚úÖ CVE_2023_35823_4111_Linux_Kernel_CWE_362_Testset_9c7f72e9_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5RdauVi7oy/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5RdauVi7oy/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5RdauVi7oy/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5RdauVi7oy/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5RdauVi7oy/code.cpg.bin`
exported 1297 nodes, 4869 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5RdauVi7oy/export
‚úÖ CVE_2023_4732_4244_Linux_Kernel_CWE_362_Testset_a9b30ceb_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.etvB1RrXDs/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.etvB1RrXDs/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.etvB1RrXDs/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.etvB1RrXDs/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.etvB1RrXDs/code.cpg.bin`
exported 1289 nodes, 4856 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.etvB1RrXDs/export
‚úÖ CVE_2013_7266_373_Linux_Kernel_CWE_20_Testset_3eace586_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GIOHNhDK2y/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GIOHNhDK2y/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GIOHNhDK2y/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GIOHNhDK2y/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GIOHNhDK2y/code.cpg.bin`
exported 1083 nodes, 3594 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GIOHNhDK2y/export
‚úÖ CVE_2014_4652_564_Linux_Kernel_CWE_362_Testset_da467400_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VhELpDW5lt/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VhELpDW5lt/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VhELpDW5lt/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VhELpDW5lt/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VhELpDW5lt/code.cpg.bin`
exported 1115 nodes, 3833 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VhELpDW5lt/export
‚úÖ CVE_2018_10882_1615_Linux_Kernel_CWE_787_Testset_d17896fe_v OK
   üìä [240/586] Rate: 11.2 files/min | Success: 239
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5nVIa9jY0h/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5nVIa9jY0h/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5nVIa9jY0h/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5nVIa9jY0h/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5nVIa9jY0h/code.cpg.bin`
exported 1233 nodes, 4612 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5nVIa9jY0h/export
‚úÖ CVE_2018_12207_1648_Linux_Kernel_CWE_20_Testset_d5337659_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oUgihP1T4r/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oUgihP1T4r/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oUgihP1T4r/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oUgihP1T4r/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oUgihP1T4r/code.cpg.bin`
exported 1386 nodes, 6043 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oUgihP1T4r/export
‚úÖ CVE_2020_28097_2655_Linux_Kernel_CWE_125_Testset_cb71381f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vtfqkE9UyN/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vtfqkE9UyN/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vtfqkE9UyN/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vtfqkE9UyN/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vtfqkE9UyN/code.cpg.bin`
exported 1366 nodes, 5713 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vtfqkE9UyN/export
‚úÖ CVE_2021_33656_2983_Linux_Kernel_CWE_787_Testset_a13d59af_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tZhQN5jsHJ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tZhQN5jsHJ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tZhQN5jsHJ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tZhQN5jsHJ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tZhQN5jsHJ/code.cpg.bin`
exported 1494 nodes, 6366 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tZhQN5jsHJ/export
‚úÖ CVE_2023_21255_3917_Linux_Kernel_CWE_416_Testset_e8e70f10_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rJH7LYImDP/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rJH7LYImDP/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rJH7LYImDP/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rJH7LYImDP/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rJH7LYImDP/code.cpg.bin`
exported 1465 nodes, 6180 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rJH7LYImDP/export
‚úÖ CVE_2023_3567_4107_Linux_Kernel_CWE_416_Testset_771c3526_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vfOLaRrgfQ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vfOLaRrgfQ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vfOLaRrgfQ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vfOLaRrgfQ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vfOLaRrgfQ/code.cpg.bin`
exported 1254 nodes, 4554 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vfOLaRrgfQ/export
‚úÖ CVE_2014_7826_593_Linux_Kernel_CWE_476_Testset_0679f7f5_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.j66UMvceH7/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.j66UMvceH7/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.j66UMvceH7/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.j66UMvceH7/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.j66UMvceH7/code.cpg.bin`
exported 1123 nodes, 3754 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.j66UMvceH7/export
‚úÖ CVE_2023_3389_4071_Linux_Kernel_CWE_416_Testset_1f4cbcc9_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KqmBJjIe6F/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KqmBJjIe6F/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KqmBJjIe6F/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KqmBJjIe6F/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KqmBJjIe6F/code.cpg.bin`
exported 1735 nodes, 10158 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KqmBJjIe6F/export
‚úÖ CVE_2016_5400_1055_Linux_Kernel_CWE_119_Testset_ce5b3fb5_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9ze0ulGUhh/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9ze0ulGUhh/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9ze0ulGUhh/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9ze0ulGUhh/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9ze0ulGUhh/code.cpg.bin`
exported 1287 nodes, 5349 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9ze0ulGUhh/export
‚úÖ CVE_2023_1074_3841_Linux_Kernel_CWE_401_Testset_cca02ddb_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gZCwW9zFGe/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gZCwW9zFGe/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gZCwW9zFGe/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gZCwW9zFGe/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gZCwW9zFGe/code.cpg.bin`
exported 1504 nodes, 6455 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gZCwW9zFGe/export
‚úÖ CVE_2023_45898_4229_Linux_Kernel_CWE_416_Testset_700e97d8_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8DdI2Vyhl8/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8DdI2Vyhl8/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8DdI2Vyhl8/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8DdI2Vyhl8/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8DdI2Vyhl8/code.cpg.bin`
exported 1297 nodes, 4878 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8DdI2Vyhl8/export
‚úÖ CVE_2014_0181_442_Linux_Kernel_CWE_264_Testset_6a48e023_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sDldxx17a9/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sDldxx17a9/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sDldxx17a9/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sDldxx17a9/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sDldxx17a9/code.cpg.bin`
exported 1165 nodes, 4064 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sDldxx17a9/export
‚úÖ CVE_2023_33951_4083_Linux_Kernel_CWE_362_Testset_fcfefdd7_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mCb4cgVNJw/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mCb4cgVNJw/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mCb4cgVNJw/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mCb4cgVNJw/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mCb4cgVNJw/code.cpg.bin`
exported 1914 nodes, 9889 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mCb4cgVNJw/export
‚úÖ CVE_2022_21499_3409_Linux_Kernel_CWE_787_Testset_55091c02_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BoCZAdGv4n/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BoCZAdGv4n/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BoCZAdGv4n/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BoCZAdGv4n/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BoCZAdGv4n/code.cpg.bin`
exported 1144 nodes, 4024 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BoCZAdGv4n/export
‚úÖ CVE_2019_19528_2203_Linux_Kernel_CWE_416_Testset_0df36a5a_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c7mu2UZKvi/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c7mu2UZKvi/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c7mu2UZKvi/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c7mu2UZKvi/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c7mu2UZKvi/code.cpg.bin`
exported 1126 nodes, 3820 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c7mu2UZKvi/export
‚úÖ CVE_2022_2991_3540_Linux_Kernel_CWE_787_Testset_3b91ff68_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dwqTkwcYE4/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dwqTkwcYE4/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dwqTkwcYE4/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dwqTkwcYE4/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dwqTkwcYE4/code.cpg.bin`
exported 1277 nodes, 4850 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dwqTkwcYE4/export
‚úÖ CVE_2013_6382_349_Linux_Kernel_CWE_119_Testset_588cc4a1_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BHI7RuybKi/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BHI7RuybKi/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BHI7RuybKi/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BHI7RuybKi/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BHI7RuybKi/code.cpg.bin`
exported 1119 nodes, 3773 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BHI7RuybKi/export
‚úÖ CVE_2019_18660_2087_Linux_Kernel_CWE_200_Testset_5d64eca4_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ze5FgpmffA/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ze5FgpmffA/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ze5FgpmffA/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ze5FgpmffA/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ze5FgpmffA/code.cpg.bin`
exported 1000 nodes, 3087 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ze5FgpmffA/export
‚úÖ CVE_2018_3665_1805_Linux_Kernel_CWE_200_Testset_593b0327_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZgEk6cY9Lq/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZgEk6cY9Lq/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZgEk6cY9Lq/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZgEk6cY9Lq/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZgEk6cY9Lq/code.cpg.bin`
exported 1492 nodes, 6708 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZgEk6cY9Lq/export
‚úÖ CVE_2018_1068_1594_Linux_Kernel_CWE_787_Testset_5fa47baf_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eeahx9h9p0/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eeahx9h9p0/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eeahx9h9p0/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eeahx9h9p0/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eeahx9h9p0/code.cpg.bin`
exported 1298 nodes, 4905 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eeahx9h9p0/export
‚úÖ CVE_2023_1611_3874_Linux_Kernel_CWE_416_Testset_3110d88f_v OK
   üìä [260/586] Rate: 11.3 files/min | Success: 259
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mDfz3N8lz3/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mDfz3N8lz3/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mDfz3N8lz3/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mDfz3N8lz3/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mDfz3N8lz3/code.cpg.bin`
exported 1166 nodes, 4088 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mDfz3N8lz3/export
‚úÖ CVE_2023_33951_4078_Linux_Kernel_CWE_362_Testset_997ff364_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Kg2vFrEZ4G/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Kg2vFrEZ4G/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Kg2vFrEZ4G/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Kg2vFrEZ4G/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Kg2vFrEZ4G/code.cpg.bin`
exported 1087 nodes, 3618 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Kg2vFrEZ4G/export
‚úÖ CVE_2012_3364_55_Linux_Kernel_CWE_119_Testset_e60878e3_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r9FBCZa59I/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r9FBCZa59I/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r9FBCZa59I/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r9FBCZa59I/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r9FBCZa59I/code.cpg.bin`
exported 1566 nodes, 7209 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r9FBCZa59I/export
‚úÖ CVE_2012_4508_108_Linux_Kernel_CWE_362_Testset_e6fbbfd1_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V0YNUyTmJf/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V0YNUyTmJf/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V0YNUyTmJf/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V0YNUyTmJf/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V0YNUyTmJf/code.cpg.bin`
exported 1171 nodes, 4098 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V0YNUyTmJf/export
‚úÖ CVE_2017_2584_1444_Linux_Kernel_CWE_416_Testset_61224e25_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.074PTKQ9tQ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.074PTKQ9tQ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.074PTKQ9tQ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.074PTKQ9tQ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.074PTKQ9tQ/code.cpg.bin`
exported 1279 nodes, 4899 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.074PTKQ9tQ/export
‚úÖ CVE_2021_22555_2885_Linux_Kernel_CWE_787_Testset_7ce2dadc_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iJ7qP1zs3g/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iJ7qP1zs3g/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iJ7qP1zs3g/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iJ7qP1zs3g/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iJ7qP1zs3g/code.cpg.bin`
exported 1514 nodes, 7008 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iJ7qP1zs3g/export
‚úÖ CVE_2017_1000251_1192_Linux_Kernel_CWE_787_Testset_7310e288_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XumNQDC07d/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XumNQDC07d/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XumNQDC07d/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XumNQDC07d/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XumNQDC07d/code.cpg.bin`
exported 1440 nodes, 5896 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XumNQDC07d/export
‚úÖ CVE_2018_13093_1667_Linux_Kernel_CWE_476_Testset_9377d5e7_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8UawVhNn9U/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8UawVhNn9U/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8UawVhNn9U/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8UawVhNn9U/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8UawVhNn9U/code.cpg.bin`
exported 1145 nodes, 3869 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8UawVhNn9U/export
‚úÖ CVE_2018_7995_1857_Linux_Kernel_CWE_362_Testset_5e187ec0_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xANWtn9rp3/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xANWtn9rp3/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xANWtn9rp3/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xANWtn9rp3/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xANWtn9rp3/code.cpg.bin`
exported 1230 nodes, 4376 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xANWtn9rp3/export
‚úÖ CVE_2014_0181_447_Linux_Kernel_CWE_264_Testset_24a1548c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tzjX5IZv56/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tzjX5IZv56/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tzjX5IZv56/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tzjX5IZv56/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tzjX5IZv56/code.cpg.bin`
exported 1071 nodes, 3456 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tzjX5IZv56/export
‚úÖ CVE_2022_20566_3389_Linux_Kernel_CWE_416_Testset_a46ce7fc_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tNT2czsbuP/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tNT2czsbuP/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tNT2czsbuP/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tNT2czsbuP/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tNT2czsbuP/code.cpg.bin`
exported 1041 nodes, 3279 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tNT2czsbuP/export
‚úÖ CVE_2022_1976_3322_Linux_Kernel_CWE_416_Testset_b9bf54bc_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RSe82LBobD/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RSe82LBobD/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RSe82LBobD/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RSe82LBobD/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RSe82LBobD/code.cpg.bin`
exported 1541 nodes, 7030 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RSe82LBobD/export
‚úÖ CVE_2020_11608_2428_Linux_Kernel_CWE_476_Testset_d09dcb0f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eDcNFH0ECs/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eDcNFH0ECs/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eDcNFH0ECs/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eDcNFH0ECs/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eDcNFH0ECs/code.cpg.bin`
exported 1266 nodes, 4658 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eDcNFH0ECs/export
‚úÖ CVE_2020_0429_2381_Linux_Kernel_CWE_787_Testset_c37cae02_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UyOIgZEEII/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UyOIgZEEII/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UyOIgZEEII/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UyOIgZEEII/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UyOIgZEEII/code.cpg.bin`
exported 1212 nodes, 4333 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UyOIgZEEII/export
‚úÖ CVE_2017_5547_1460_Linux_Kernel_CWE_119_Testset_13dda2fc_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9DSjBD6hhE/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9DSjBD6hhE/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9DSjBD6hhE/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9DSjBD6hhE/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9DSjBD6hhE/code.cpg.bin`
exported 1287 nodes, 5020 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9DSjBD6hhE/export
‚úÖ CVE_2018_20669_1777_Linux_Kernel_CWE_20_Testset_5069b2b8_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9fUplHkBeZ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9fUplHkBeZ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9fUplHkBeZ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9fUplHkBeZ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9fUplHkBeZ/code.cpg.bin`
exported 1243 nodes, 4518 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9fUplHkBeZ/export
‚úÖ CVE_2020_11609_2431_Linux_Kernel_CWE_476_Testset_da620d7c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Hqis5XX5Xy/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Hqis5XX5Xy/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Hqis5XX5Xy/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Hqis5XX5Xy/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Hqis5XX5Xy/code.cpg.bin`
exported 2828 nodes, 18909 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Hqis5XX5Xy/export
‚úÖ CVE_2013_6380_347_Linux_Kernel_CWE_20_Testset_bcfc10e4_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ko5e05BAFZ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ko5e05BAFZ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ko5e05BAFZ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ko5e05BAFZ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ko5e05BAFZ/code.cpg.bin`
exported 1118 nodes, 3816 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ko5e05BAFZ/export
‚úÖ CVE_2018_14613_1682_Linux_Kernel_CWE_476_Testset_f97de88d_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WCTQgCUmCV/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WCTQgCUmCV/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WCTQgCUmCV/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WCTQgCUmCV/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WCTQgCUmCV/code.cpg.bin`
exported 1157 nodes, 4089 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WCTQgCUmCV/export
‚úÖ CVE_2022_3534_3629_Linux_Kernel_CWE_416_Testset_7cc7321b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8zlI7mmeVr/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8zlI7mmeVr/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8zlI7mmeVr/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8zlI7mmeVr/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8zlI7mmeVr/code.cpg.bin`
exported 1211 nodes, 4367 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8zlI7mmeVr/export
‚úÖ CVE_2013_7339_414_Linux_Kernel_CWE_476_Testset_eaf179ed_v OK
   üìä [280/586] Rate: 11.3 files/min | Success: 279
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zXpKbDYmI4/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zXpKbDYmI4/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zXpKbDYmI4/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zXpKbDYmI4/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zXpKbDYmI4/code.cpg.bin`
exported 1955 nodes, 9889 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zXpKbDYmI4/export
‚úÖ CVE_2012_6657_136_Linux_Kernel_CWE_264_Testset_793b4062_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OesBaTPsPt/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OesBaTPsPt/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OesBaTPsPt/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OesBaTPsPt/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OesBaTPsPt/code.cpg.bin`
exported 1246 nodes, 4530 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OesBaTPsPt/export
‚úÖ CVE_2015_8767_842_Linux_Kernel_CWE_362_Testset_0a4cd68b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0rl7xodonC/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0rl7xodonC/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0rl7xodonC/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0rl7xodonC/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0rl7xodonC/code.cpg.bin`
exported 1073 nodes, 3457 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0rl7xodonC/export
‚úÖ CVE_2020_0427_2379_Linux_Kernel_CWE_125_Testset_f60a832c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i3EV6gONp3/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i3EV6gONp3/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i3EV6gONp3/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i3EV6gONp3/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i3EV6gONp3/code.cpg.bin`
exported 1533 nodes, 7062 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i3EV6gONp3/export
‚úÖ CVE_2017_16532_1319_Linux_Kernel_CWE_476_Testset_c16b6c80_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S6qr4RFA8Q/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S6qr4RFA8Q/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S6qr4RFA8Q/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S6qr4RFA8Q/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S6qr4RFA8Q/code.cpg.bin`
exported 1206 nodes, 4334 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S6qr4RFA8Q/export
‚úÖ CVE_2019_15220_2004_Linux_Kernel_CWE_416_Testset_b7b20d4e_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eULCBstwyn/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eULCBstwyn/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eULCBstwyn/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eULCBstwyn/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eULCBstwyn/code.cpg.bin`
exported 1341 nodes, 5272 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eULCBstwyn/export
‚úÖ CVE_2020_29374_2670_Linux_Kernel_CWE_362_Testset_ec0e2218_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GXsFfT0i4w/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GXsFfT0i4w/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GXsFfT0i4w/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GXsFfT0i4w/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GXsFfT0i4w/code.cpg.bin`
exported 1382 nodes, 5998 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GXsFfT0i4w/export
‚úÖ CVE_2020_0030_2372_Linux_Kernel_CWE_416_Testset_79cc2b84_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l6UvpVURJ0/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l6UvpVURJ0/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l6UvpVURJ0/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l6UvpVURJ0/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l6UvpVURJ0/code.cpg.bin`
exported 1522 nodes, 7051 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l6UvpVURJ0/export
‚úÖ CVE_2019_12819_1954_Linux_Kernel_CWE_416_Testset_a4c47f0c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vX7xUlQ0nV/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vX7xUlQ0nV/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vX7xUlQ0nV/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vX7xUlQ0nV/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vX7xUlQ0nV/code.cpg.bin`
exported 1137 nodes, 3843 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vX7xUlQ0nV/export
‚úÖ CVE_2019_19083_2176_Linux_Kernel_CWE_401_Testset_59cc5a75_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WkxsVccofv/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WkxsVccofv/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WkxsVccofv/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WkxsVccofv/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WkxsVccofv/code.cpg.bin`
exported 1456 nodes, 6266 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WkxsVccofv/export
‚úÖ CVE_2014_3181_511_Linux_Kernel_CWE_119_Testset_1ee4ded3_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zguSwKuOeB/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zguSwKuOeB/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zguSwKuOeB/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zguSwKuOeB/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zguSwKuOeB/code.cpg.bin`
exported 1242 nodes, 4586 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zguSwKuOeB/export
‚úÖ CVE_2022_3630_3665_Linux_Kernel_CWE_401_Testset_ea3bf950_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.n8HSz1LAl6/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.n8HSz1LAl6/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.n8HSz1LAl6/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.n8HSz1LAl6/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.n8HSz1LAl6/code.cpg.bin`
exported 1332 nodes, 5152 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.n8HSz1LAl6/export
‚úÖ CVE_2014_0181_454_Linux_Kernel_CWE_264_Testset_9caf6652_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.n3etvXfvK6/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.n3etvXfvK6/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.n3etvXfvK6/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.n3etvXfvK6/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.n3etvXfvK6/code.cpg.bin`
exported 1361 nodes, 5633 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.n3etvXfvK6/export
‚úÖ CVE_2023_3389_4076_Linux_Kernel_CWE_416_Testset_97e14573_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xN4sML5qEp/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xN4sML5qEp/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xN4sML5qEp/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xN4sML5qEp/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xN4sML5qEp/code.cpg.bin`
exported 1354 nodes, 5395 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xN4sML5qEp/export
‚úÖ CVE_2016_4997_1041_Linux_Kernel_CWE_264_Testset_ef9f17f2_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.acFJl8uZUs/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.acFJl8uZUs/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.acFJl8uZUs/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.acFJl8uZUs/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.acFJl8uZUs/code.cpg.bin`
exported 1179 nodes, 4253 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.acFJl8uZUs/export
‚úÖ CVE_2022_3523_3617_Linux_Kernel_CWE_416_Testset_7501f90b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mrUVkLi69p/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mrUVkLi69p/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mrUVkLi69p/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mrUVkLi69p/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mrUVkLi69p/code.cpg.bin`
exported 1354 nodes, 5611 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mrUVkLi69p/export
‚úÖ CVE_2017_16911_1348_Linux_Kernel_CWE_200_Testset_a6c94deb_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.L5bvBz1HCF/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.L5bvBz1HCF/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.L5bvBz1HCF/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.L5bvBz1HCF/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.L5bvBz1HCF/code.cpg.bin`
exported 1254 nodes, 4554 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.L5bvBz1HCF/export
‚úÖ CVE_2014_7825_589_Linux_Kernel_CWE_125_Testset_0679f7f5_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Oo2LyKYrri/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Oo2LyKYrri/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Oo2LyKYrri/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Oo2LyKYrri/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Oo2LyKYrri/code.cpg.bin`
exported 1013 nodes, 3128 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Oo2LyKYrri/export
‚úÖ CVE_2023_6610_4306_Linux_Kernel_CWE_125_Testset_4bcc7cd8_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HvXKRv3XAK/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HvXKRv3XAK/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HvXKRv3XAK/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HvXKRv3XAK/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HvXKRv3XAK/code.cpg.bin`
exported 1208 nodes, 4320 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HvXKRv3XAK/export
‚úÖ CVE_2022_38457_3681_Linux_Kernel_CWE_416_Testset_69140601_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dSOjq8zoDQ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dSOjq8zoDQ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dSOjq8zoDQ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dSOjq8zoDQ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dSOjq8zoDQ/code.cpg.bin`
exported 1085 nodes, 3582 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dSOjq8zoDQ/export
‚úÖ CVE_2023_0240_3817_Linux_Kernel_CWE_416_Testset_43790d85_v OK
   üìä [300/586] Rate: 11.4 files/min | Success: 299
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GEvjrhrNR8/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GEvjrhrNR8/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GEvjrhrNR8/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GEvjrhrNR8/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GEvjrhrNR8/code.cpg.bin`
exported 1076 nodes, 3505 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GEvjrhrNR8/export
‚úÖ CVE_2021_4203_3149_Linux_Kernel_CWE_362_Testset_36e18dc2_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BW88JR5LgK/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BW88JR5LgK/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BW88JR5LgK/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BW88JR5LgK/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BW88JR5LgK/code.cpg.bin`
exported 1048 nodes, 3318 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BW88JR5LgK/export
‚úÖ CVE_2023_35823_4109_Linux_Kernel_CWE_416_Testset_a2435a0d_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PQvxTMRcQA/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PQvxTMRcQA/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PQvxTMRcQA/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PQvxTMRcQA/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PQvxTMRcQA/code.cpg.bin`
exported 1379 nodes, 5338 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PQvxTMRcQA/export
‚úÖ CVE_2023_4611_4235_Linux_Kernel_CWE_416_Testset_3505cb70_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S89p7tYneY/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S89p7tYneY/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S89p7tYneY/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S89p7tYneY/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S89p7tYneY/code.cpg.bin`
exported 1229 nodes, 4457 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S89p7tYneY/export
‚úÖ CVE_2023_42754_4207_Linux_Kernel_CWE_476_Testset_b213ba26_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K3RtjW7NzZ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K3RtjW7NzZ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K3RtjW7NzZ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K3RtjW7NzZ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K3RtjW7NzZ/code.cpg.bin`
exported 1438 nodes, 6267 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K3RtjW7NzZ/export
‚úÖ CVE_2021_38208_3085_Linux_Kernel_CWE_476_Testset_8d4453bb_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x2G9DeIwtA/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x2G9DeIwtA/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x2G9DeIwtA/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x2G9DeIwtA/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x2G9DeIwtA/code.cpg.bin`
exported 1103 nodes, 3661 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x2G9DeIwtA/export
‚úÖ CVE_2016_6786_1078_Linux_Kernel_CWE_264_Testset_c7fab331_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wit5Hf0CT5/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wit5Hf0CT5/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wit5Hf0CT5/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wit5Hf0CT5/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wit5Hf0CT5/code.cpg.bin`
exported 1229 nodes, 4466 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wit5Hf0CT5/export
‚úÖ CVE_2013_1772_171_Linux_Kernel_CWE_119_Testset_4abb267b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hLUzRpIOPj/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hLUzRpIOPj/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hLUzRpIOPj/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hLUzRpIOPj/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hLUzRpIOPj/code.cpg.bin`
exported 1510 nodes, 6933 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hLUzRpIOPj/export
‚úÖ CVE_2022_41222_3713_Linux_Kernel_CWE_416_Testset_5667d2c0_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dIwrP8O0if/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dIwrP8O0if/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dIwrP8O0if/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dIwrP8O0if/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dIwrP8O0if/code.cpg.bin`
exported 1083 nodes, 3586 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dIwrP8O0if/export
‚úÖ CVE_2021_3655_3033_Linux_Kernel_CWE_20_Testset_32ee73ff_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qQwIku9e18/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qQwIku9e18/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qQwIku9e18/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qQwIku9e18/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qQwIku9e18/code.cpg.bin`
exported 1069 nodes, 3499 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qQwIku9e18/export
‚úÖ CVE_2020_27835_2652_Linux_Kernel_CWE_416_Testset_30dbd65f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.743PdXO7Zt/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.743PdXO7Zt/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.743PdXO7Zt/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.743PdXO7Zt/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.743PdXO7Zt/code.cpg.bin`
exported 1264 nodes, 4647 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.743PdXO7Zt/export
‚úÖ CVE_2020_36694_2775_Linux_Kernel_CWE_416_Testset_a4ae9fab_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fB4utSFxDv/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fB4utSFxDv/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fB4utSFxDv/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fB4utSFxDv/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fB4utSFxDv/code.cpg.bin`
exported 1137 nodes, 3964 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fB4utSFxDv/export
‚úÖ CVE_2017_17862_1382_Linux_Kernel_CWE_20_Testset_bd538c2a_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MzyyqxkTJQ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MzyyqxkTJQ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MzyyqxkTJQ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MzyyqxkTJQ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MzyyqxkTJQ/code.cpg.bin`
exported 1566 nodes, 6932 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MzyyqxkTJQ/export
‚úÖ CVE_2016_4998_1050_Linux_Kernel_CWE_119_Testset_40e77412_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cQU8mSgvOt/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cQU8mSgvOt/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cQU8mSgvOt/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cQU8mSgvOt/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cQU8mSgvOt/code.cpg.bin`
exported 1059 nodes, 3431 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cQU8mSgvOt/export
‚úÖ CVE_2022_24122_3471_Linux_Kernel_CWE_416_Testset_16f9f288_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3lO0iAWNRv/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3lO0iAWNRv/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3lO0iAWNRv/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3lO0iAWNRv/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3lO0iAWNRv/code.cpg.bin`
exported 2509 nodes, 15556 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3lO0iAWNRv/export
‚úÖ CVE_2016_3841_1008_Linux_Kernel_CWE_264_Testset_6cde2702_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gFFb7rtaw8/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gFFb7rtaw8/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gFFb7rtaw8/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gFFb7rtaw8/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gFFb7rtaw8/code.cpg.bin`
exported 1260 nodes, 4627 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gFFb7rtaw8/export
‚úÖ CVE_2020_35519_2711_Linux_Kernel_CWE_125_Testset_b60f1a2c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WjwsJHU38a/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WjwsJHU38a/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WjwsJHU38a/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WjwsJHU38a/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WjwsJHU38a/code.cpg.bin`
exported 1056 nodes, 3364 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WjwsJHU38a/export
‚úÖ CVE_2018_20836_1783_Linux_Kernel_CWE_416_Testset_0d3abf57_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cctofg7GOG/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cctofg7GOG/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cctofg7GOG/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cctofg7GOG/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cctofg7GOG/code.cpg.bin`
exported 1565 nodes, 7066 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cctofg7GOG/export
‚úÖ CVE_2019_20806_2283_Linux_Kernel_CWE_476_Testset_334d5da7_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fdl0yRMNrQ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fdl0yRMNrQ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fdl0yRMNrQ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fdl0yRMNrQ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fdl0yRMNrQ/code.cpg.bin`
exported 1338 nodes, 5228 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fdl0yRMNrQ/export
‚úÖ CVE_2022_1652_3268_Linux_Kernel_CWE_416_Testset_7fa3b602_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5ICMF9dmK1/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5ICMF9dmK1/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5ICMF9dmK1/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5ICMF9dmK1/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5ICMF9dmK1/code.cpg.bin`
exported 1146 nodes, 3952 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5ICMF9dmK1/export
‚úÖ CVE_2019_15923_2032_Linux_Kernel_CWE_476_Testset_50183e83_v OK
   üìä [320/586] Rate: 11.5 files/min | Success: 319
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jEofOi6sN5/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jEofOi6sN5/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jEofOi6sN5/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jEofOi6sN5/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jEofOi6sN5/code.cpg.bin`
exported 1054 nodes, 3317 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jEofOi6sN5/export
‚úÖ CVE_2023_32233_4008_Linux_Kernel_CWE_416_Testset_d66459ce_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.59T5UnorJn/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.59T5UnorJn/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.59T5UnorJn/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.59T5UnorJn/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.59T5UnorJn/code.cpg.bin`
exported 2619 nodes, 18989 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.59T5UnorJn/export
‚úÖ CVE_2022_23222_3447_Linux_Kernel_CWE_476_Testset_45214770_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QJt720UdcI/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QJt720UdcI/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QJt720UdcI/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QJt720UdcI/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QJt720UdcI/code.cpg.bin`
exported 1028 nodes, 3210 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QJt720UdcI/export
‚úÖ CVE_2023_32252_4026_Linux_Kernel_CWE_476_Testset_0eddf425_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DsviNi2Oyu/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DsviNi2Oyu/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DsviNi2Oyu/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DsviNi2Oyu/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DsviNi2Oyu/code.cpg.bin`
exported 1153 nodes, 4167 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DsviNi2Oyu/export
‚úÖ CVE_2019_19531_2206_Linux_Kernel_CWE_416_Testset_61e3255d_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BkB8KZGrfG/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BkB8KZGrfG/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BkB8KZGrfG/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BkB8KZGrfG/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BkB8KZGrfG/code.cpg.bin`
exported 1367 nodes, 6017 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BkB8KZGrfG/export
‚úÖ CVE_2020_28915_2660_Linux_Kernel_CWE_125_Testset_9fedeecb_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WnvbdAX9Py/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WnvbdAX9Py/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WnvbdAX9Py/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WnvbdAX9Py/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WnvbdAX9Py/code.cpg.bin`
exported 1311 nodes, 5107 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WnvbdAX9Py/export
‚úÖ CVE_2015_8844_861_Linux_Kernel_CWE_20_Testset_338884a5_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9MljjzvMJJ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9MljjzvMJJ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9MljjzvMJJ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9MljjzvMJJ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9MljjzvMJJ/code.cpg.bin`
exported 1329 nodes, 5041 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9MljjzvMJJ/export
‚úÖ CVE_2019_19319_2188_Linux_Kernel_CWE_787_Testset_01112bff_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NbzswNyVQJ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NbzswNyVQJ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NbzswNyVQJ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NbzswNyVQJ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NbzswNyVQJ/code.cpg.bin`
exported 1177 nodes, 4105 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NbzswNyVQJ/export
‚úÖ CVE_2020_36557_2766_Linux_Kernel_CWE_416_Testset_d962cde7_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZGyTBhob2C/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZGyTBhob2C/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZGyTBhob2C/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZGyTBhob2C/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZGyTBhob2C/code.cpg.bin`
exported 1167 nodes, 4177 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZGyTBhob2C/export
‚úÖ CVE_2014_1738_476_Linux_Kernel_CWE_200_Testset_6ee04329_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GQhN9sKeIR/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GQhN9sKeIR/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GQhN9sKeIR/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GQhN9sKeIR/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GQhN9sKeIR/code.cpg.bin`
exported 1208 nodes, 4379 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GQhN9sKeIR/export
‚úÖ CVE_2019_15117_1991_Linux_Kernel_CWE_119_Testset_d917a328_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Kw8If4bDm4/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Kw8If4bDm4/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Kw8If4bDm4/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Kw8If4bDm4/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Kw8If4bDm4/code.cpg.bin`
exported 1265 nodes, 4626 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Kw8If4bDm4/export
‚úÖ CVE_2016_2069_919_Linux_Kernel_CWE_362_Testset_4ec0d71c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.voeFS2wB7H/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.voeFS2wB7H/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.voeFS2wB7H/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.voeFS2wB7H/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.voeFS2wB7H/code.cpg.bin`
exported 1238 nodes, 4566 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.voeFS2wB7H/export
‚úÖ CVE_2021_38201_3075_Linux_Kernel_CWE_119_Testset_4a5e3929_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K0VrpEmUqK/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K0VrpEmUqK/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K0VrpEmUqK/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K0VrpEmUqK/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K0VrpEmUqK/code.cpg.bin`
exported 1120 nodes, 3834 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K0VrpEmUqK/export
‚úÖ CVE_2022_3977_3700_Linux_Kernel_CWE_416_Testset_9dceef7e_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gPZO2OUjDt/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gPZO2OUjDt/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gPZO2OUjDt/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gPZO2OUjDt/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gPZO2OUjDt/code.cpg.bin`
exported 1093 nodes, 3571 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gPZO2OUjDt/export
‚úÖ CVE_2015_9016_885_Linux_Kernel_CWE_362_Testset_802d5333_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nH1JAHe11K/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nH1JAHe11K/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nH1JAHe11K/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nH1JAHe11K/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nH1JAHe11K/code.cpg.bin`
exported 1459 nodes, 6424 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nH1JAHe11K/export
‚úÖ CVE_2017_8066_1540_Linux_Kernel_CWE_119_Testset_a8ccef26_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MyMu6rqWOo/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MyMu6rqWOo/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MyMu6rqWOo/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MyMu6rqWOo/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MyMu6rqWOo/code.cpg.bin`
exported 1090 nodes, 3579 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MyMu6rqWOo/export
‚úÖ CVE_2013_1943_209_Linux_Kernel_CWE_20_Testset_d95b9562_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WGZMXYHRVw/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WGZMXYHRVw/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WGZMXYHRVw/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WGZMXYHRVw/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WGZMXYHRVw/code.cpg.bin`
exported 1206 nodes, 4359 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WGZMXYHRVw/export
‚úÖ CVE_2020_0427_2380_Linux_Kernel_CWE_125_Testset_a63e9c20_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JB5yLyTePJ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JB5yLyTePJ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JB5yLyTePJ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JB5yLyTePJ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JB5yLyTePJ/code.cpg.bin`
exported 1340 nodes, 5561 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JB5yLyTePJ/export
‚úÖ CVE_2023_3389_4068_Linux_Kernel_CWE_416_Testset_c6fc966b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jT9YQGsB4m/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jT9YQGsB4m/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jT9YQGsB4m/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jT9YQGsB4m/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jT9YQGsB4m/code.cpg.bin`
exported 1173 nodes, 4148 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jT9YQGsB4m/export
‚úÖ CVE_2023_3863_4151_Linux_Kernel_CWE_416_Testset_87fa3763_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R4B0MRoHug/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R4B0MRoHug/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R4B0MRoHug/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R4B0MRoHug/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R4B0MRoHug/code.cpg.bin`
exported 1662 nodes, 8833 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R4B0MRoHug/export
‚úÖ CVE_2019_3459_2309_Linux_Kernel_CWE_125_Testset_ee6215bb_v OK
   üìä [340/586] Rate: 11.5 files/min | Success: 339
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.icNZvJ6fjA/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.icNZvJ6fjA/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.icNZvJ6fjA/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.icNZvJ6fjA/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.icNZvJ6fjA/code.cpg.bin`
exported 1177 nodes, 4105 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.icNZvJ6fjA/export
‚úÖ CVE_2020_36557_2766_Linux_Kernel_CWE_362_Testset_d962cde7_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aozkQqsQxx/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aozkQqsQxx/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aozkQqsQxx/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aozkQqsQxx/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aozkQqsQxx/code.cpg.bin`
exported 1206 nodes, 4359 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aozkQqsQxx/export
‚úÖ CVE_2020_0427_2380_Linux_Kernel_CWE_416_Testset_a63e9c20_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d7p033Z02e/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d7p033Z02e/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d7p033Z02e/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d7p033Z02e/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d7p033Z02e/code.cpg.bin`
exported 1068 nodes, 3455 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d7p033Z02e/export
‚úÖ CVE_2022_21499_3410_Linux_Kernel_CWE_787_Testset_2b3fcfa8_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.E8Ui9wAjrM/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.E8Ui9wAjrM/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.E8Ui9wAjrM/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.E8Ui9wAjrM/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.E8Ui9wAjrM/code.cpg.bin`
exported 1213 nodes, 4251 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.E8Ui9wAjrM/export
‚úÖ CVE_2019_15223_2012_Linux_Kernel_CWE_476_Testset_e8cc1e21_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sfPZ0q5UNH/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sfPZ0q5UNH/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sfPZ0q5UNH/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sfPZ0q5UNH/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sfPZ0q5UNH/code.cpg.bin`
exported 1109 nodes, 3700 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sfPZ0q5UNH/export
‚úÖ CVE_2019_19768_2235_Linux_Kernel_CWE_416_Testset_46fa3f8c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gENDqfgWOz/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gENDqfgWOz/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gENDqfgWOz/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gENDqfgWOz/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gENDqfgWOz/code.cpg.bin`
exported 1336 nodes, 5255 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gENDqfgWOz/export
‚úÖ CVE_2020_36385_2752_Linux_Kernel_CWE_416_Testset_dd05f7e3_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fTODHmyz14/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fTODHmyz14/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fTODHmyz14/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fTODHmyz14/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fTODHmyz14/code.cpg.bin`
exported 1278 nodes, 5117 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fTODHmyz14/export
‚úÖ CVE_2020_14390_2526_Linux_Kernel_CWE_787_Testset_e955bd67_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lIT4YnqSmx/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lIT4YnqSmx/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lIT4YnqSmx/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lIT4YnqSmx/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lIT4YnqSmx/code.cpg.bin`
exported 1088 nodes, 3575 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lIT4YnqSmx/export
‚úÖ CVE_2018_15594_1710_Linux_Kernel_CWE_200_Testset_bc61f0c7_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MWhjy9ldRj/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MWhjy9ldRj/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MWhjy9ldRj/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MWhjy9ldRj/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MWhjy9ldRj/code.cpg.bin`
exported 1039 nodes, 3263 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MWhjy9ldRj/export
‚úÖ CVE_2019_19524_2199_Linux_Kernel_CWE_416_Testset_76b589a7_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WkprkKsHNX/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WkprkKsHNX/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WkprkKsHNX/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WkprkKsHNX/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WkprkKsHNX/code.cpg.bin`
exported 1731 nodes, 9363 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WkprkKsHNX/export
‚úÖ CVE_2019_18885_2107_Linux_Kernel_CWE_476_Testset_27d80031_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vC0myIpbh4/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vC0myIpbh4/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vC0myIpbh4/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vC0myIpbh4/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vC0myIpbh4/code.cpg.bin`
exported 1211 nodes, 4369 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vC0myIpbh4/export
‚úÖ CVE_2021_45868_3184_Linux_Kernel_CWE_416_Testset_f3b0320f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4bZQXl1hU0/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4bZQXl1hU0/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4bZQXl1hU0/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4bZQXl1hU0/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4bZQXl1hU0/code.cpg.bin`
exported 1316 nodes, 5020 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4bZQXl1hU0/export
‚úÖ CVE_2022_2590_3481_Linux_Kernel_CWE_362_Testset_e09c5253_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FRbzaTT3R2/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FRbzaTT3R2/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FRbzaTT3R2/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FRbzaTT3R2/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FRbzaTT3R2/code.cpg.bin`
exported 1301 nodes, 4981 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FRbzaTT3R2/export
‚úÖ CVE_2022_3624_3659_Linux_Kernel_CWE_401_Testset_81491212_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FHfHPxM3w9/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FHfHPxM3w9/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FHfHPxM3w9/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FHfHPxM3w9/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FHfHPxM3w9/code.cpg.bin`
exported 1506 nodes, 6772 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FHfHPxM3w9/export
‚úÖ CVE_2019_19807_2244_Linux_Kernel_CWE_416_Testset_c82e091e_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XiP7FtoV98/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XiP7FtoV98/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XiP7FtoV98/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XiP7FtoV98/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XiP7FtoV98/code.cpg.bin`
exported 1000 nodes, 3087 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XiP7FtoV98/export
‚úÖ CVE_2019_6133_2341_Linux_Kernel_CWE_362_Testset_9242eef6_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0UBIuCcX9j/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0UBIuCcX9j/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0UBIuCcX9j/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0UBIuCcX9j/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0UBIuCcX9j/code.cpg.bin`
exported 1316 nodes, 5208 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0UBIuCcX9j/export
‚úÖ CVE_2013_0160_146_Linux_Kernel_CWE_200_Testset_77a3783f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WfE8470qBm/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WfE8470qBm/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WfE8470qBm/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WfE8470qBm/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WfE8470qBm/code.cpg.bin`
exported 1479 nodes, 6612 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WfE8470qBm/export
‚úÖ CVE_2022_48502_3793_Linux_Kernel_CWE_125_Testset_f613ab20_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yY69j67KL2/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yY69j67KL2/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yY69j67KL2/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yY69j67KL2/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yY69j67KL2/code.cpg.bin`
exported 1160 nodes, 4052 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yY69j67KL2/export
‚úÖ CVE_2023_5717_4292_Linux_Kernel_CWE_787_Testset_d5aed263_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NnyIIofqRO/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NnyIIofqRO/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NnyIIofqRO/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NnyIIofqRO/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NnyIIofqRO/code.cpg.bin`
exported 1286 nodes, 4864 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NnyIIofqRO/export
‚úÖ CVE_2022_45888_3754_Linux_Kernel_CWE_362_Testset_54a579f2_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HoldFvGtCs/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HoldFvGtCs/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HoldFvGtCs/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HoldFvGtCs/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HoldFvGtCs/code.cpg.bin`
exported 1566 nodes, 6932 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HoldFvGtCs/export
‚úÖ CVE_2016_4998_1048_Linux_Kernel_CWE_119_Testset_f9a8b0b6_v OK
   üìä [360/586] Rate: 11.5 files/min | Success: 359
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.udm52PTmJ8/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.udm52PTmJ8/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.udm52PTmJ8/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.udm52PTmJ8/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.udm52PTmJ8/code.cpg.bin`
exported 1217 nodes, 4395 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.udm52PTmJ8/export
‚úÖ CVE_2020_10769_2422_Linux_Kernel_CWE_125_Testset_1d778619_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.A3jrwsY1aX/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.A3jrwsY1aX/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.A3jrwsY1aX/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.A3jrwsY1aX/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.A3jrwsY1aX/code.cpg.bin`
exported 1335 nodes, 5254 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.A3jrwsY1aX/export
‚úÖ CVE_2013_7263_360_Linux_Kernel_CWE_20_Testset_24c1def9_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.m4ohSNq7jp/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.m4ohSNq7jp/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.m4ohSNq7jp/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.m4ohSNq7jp/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.m4ohSNq7jp/code.cpg.bin`
exported 1178 nodes, 4275 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.m4ohSNq7jp/export
‚úÖ CVE_2023_6111_4297_Linux_Kernel_CWE_416_Testset_98a6d86c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BqXXrEfr3d/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BqXXrEfr3d/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BqXXrEfr3d/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BqXXrEfr3d/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BqXXrEfr3d/code.cpg.bin`
exported 1125 nodes, 3758 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BqXXrEfr3d/export
‚úÖ CVE_2021_20292_2871_Linux_Kernel_CWE_416_Testset_3144cd55_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.obOqqm58Bz/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.obOqqm58Bz/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.obOqqm58Bz/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.obOqqm58Bz/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.obOqqm58Bz/code.cpg.bin`
exported 1026 nodes, 3205 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.obOqqm58Bz/export
‚úÖ CVE_2018_12232_1650_Linux_Kernel_CWE_362_Testset_234ae365_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.46k9YZiKMO/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.46k9YZiKMO/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.46k9YZiKMO/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.46k9YZiKMO/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.46k9YZiKMO/code.cpg.bin`
exported 1654 nodes, 7952 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.46k9YZiKMO/export
‚úÖ CVE_2022_33742_3587_Linux_Kernel_CWE_200_Testset_3c0a8e1f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DFLFjx94AO/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DFLFjx94AO/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DFLFjx94AO/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DFLFjx94AO/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DFLFjx94AO/code.cpg.bin`
exported 1168 nodes, 4041 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DFLFjx94AO/export
‚úÖ CVE_2022_1786_3282_Linux_Kernel_CWE_416_Testset_dd35a289_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1fUE53nwLV/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1fUE53nwLV/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1fUE53nwLV/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1fUE53nwLV/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1fUE53nwLV/code.cpg.bin`
exported 1442 nodes, 5946 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1fUE53nwLV/export
‚úÖ CVE_2013_0871_162_Linux_Kernel_CWE_362_Testset_c5405f79_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Hh8h9ML3Nz/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Hh8h9ML3Nz/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Hh8h9ML3Nz/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Hh8h9ML3Nz/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Hh8h9ML3Nz/code.cpg.bin`
exported 1088 nodes, 3553 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Hh8h9ML3Nz/export
‚úÖ CVE_2020_27675_2621_Linux_Kernel_CWE_476_Testset_314a1ef5_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1nFonHRx9H/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1nFonHRx9H/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1nFonHRx9H/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1nFonHRx9H/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1nFonHRx9H/code.cpg.bin`
exported 1070 nodes, 3452 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1nFonHRx9H/export
‚úÖ CVE_2015_8709_836_Linux_Kernel_CWE_264_Testset_873f529b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XnXmKX48h5/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XnXmKX48h5/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XnXmKX48h5/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XnXmKX48h5/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XnXmKX48h5/code.cpg.bin`
exported 1489 nodes, 6242 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XnXmKX48h5/export
‚úÖ CVE_2013_7281_410_Linux_Kernel_CWE_200_Testset_fc913239_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7zTK2CRg7I/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7zTK2CRg7I/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7zTK2CRg7I/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7zTK2CRg7I/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7zTK2CRg7I/code.cpg.bin`
exported 1530 nodes, 6779 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7zTK2CRg7I/export
‚úÖ CVE_2023_25012_3959_Linux_Kernel_CWE_416_Testset_96f5de78_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dNeRt1HNcX/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dNeRt1HNcX/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dNeRt1HNcX/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dNeRt1HNcX/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dNeRt1HNcX/code.cpg.bin`
exported 1322 nodes, 4966 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dNeRt1HNcX/export
‚úÖ CVE_2014_0181_438_Linux_Kernel_CWE_264_Testset_88e324ec_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Iqnnpfy2Ue/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Iqnnpfy2Ue/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Iqnnpfy2Ue/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Iqnnpfy2Ue/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Iqnnpfy2Ue/code.cpg.bin`
exported 1204 nodes, 4394 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Iqnnpfy2Ue/export
‚úÖ CVE_2013_2888_244_Linux_Kernel_CWE_20_Testset_62878275_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7LlfDtXCZh/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7LlfDtXCZh/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7LlfDtXCZh/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7LlfDtXCZh/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7LlfDtXCZh/code.cpg.bin`
exported 1172 nodes, 4218 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7LlfDtXCZh/export
‚úÖ CVE_2016_6516_1077_Linux_Kernel_CWE_119_Testset_b29468e3_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XvGGLbgnks/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XvGGLbgnks/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XvGGLbgnks/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XvGGLbgnks/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XvGGLbgnks/code.cpg.bin`
exported 1114 nodes, 3716 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XvGGLbgnks/export
‚úÖ CVE_2020_27825_2637_Linux_Kernel_CWE_362_Testset_f28c9e1d_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dsexLuJBuF/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dsexLuJBuF/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dsexLuJBuF/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dsexLuJBuF/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dsexLuJBuF/code.cpg.bin`
exported 1183 nodes, 4233 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dsexLuJBuF/export
‚úÖ CVE_2013_1798_190_Linux_Kernel_CWE_20_Testset_48cbc58c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6EWLOuCiOf/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6EWLOuCiOf/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6EWLOuCiOf/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6EWLOuCiOf/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6EWLOuCiOf/code.cpg.bin`
exported 1280 nodes, 4934 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6EWLOuCiOf/export
‚úÖ CVE_2015_4176_765_Linux_Kernel_CWE_200_Testset_1cdc6caf_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6dKslUSb3j/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6dKslUSb3j/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6dKslUSb3j/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6dKslUSb3j/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6dKslUSb3j/code.cpg.bin`
exported 1157 nodes, 4009 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6dKslUSb3j/export
‚úÖ CVE_2021_0941_2839_Linux_Kernel_CWE_416_Testset_707e6ed5_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Rvx6dG1Xna/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Rvx6dG1Xna/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Rvx6dG1Xna/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Rvx6dG1Xna/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Rvx6dG1Xna/code.cpg.bin`
exported 1235 nodes, 4592 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Rvx6dG1Xna/export
‚úÖ CVE_2020_27835_2650_Linux_Kernel_CWE_416_Testset_81443f29_v OK
   üìä [380/586] Rate: 11.5 files/min | Success: 379
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.io7K6OhUL9/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.io7K6OhUL9/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.io7K6OhUL9/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.io7K6OhUL9/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.io7K6OhUL9/code.cpg.bin`
exported 1622 nodes, 7787 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.io7K6OhUL9/export
‚úÖ CVE_2015_3331_757_Linux_Kernel_CWE_119_Testset_7d22f9be_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GchPpasB7F/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GchPpasB7F/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GchPpasB7F/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GchPpasB7F/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GchPpasB7F/code.cpg.bin`
exported 1120 nodes, 3795 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GchPpasB7F/export
‚úÖ CVE_2022_1462_3261_Linux_Kernel_CWE_362_Testset_f8361848_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F2ov1nd9Ay/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F2ov1nd9Ay/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F2ov1nd9Ay/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F2ov1nd9Ay/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F2ov1nd9Ay/code.cpg.bin`
exported 1050 nodes, 3308 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F2ov1nd9Ay/export
‚úÖ CVE_2020_14416_2541_Linux_Kernel_CWE_416_Testset_dbf8d7b3_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TqO0IRZXg5/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TqO0IRZXg5/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TqO0IRZXg5/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TqO0IRZXg5/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TqO0IRZXg5/code.cpg.bin`
exported 1327 nodes, 5541 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TqO0IRZXg5/export
‚úÖ CVE_2021_29265_2947_Linux_Kernel_CWE_362_Testset_2c2768ba_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FO0YfEuKQB/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FO0YfEuKQB/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FO0YfEuKQB/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FO0YfEuKQB/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FO0YfEuKQB/code.cpg.bin`
exported 1069 nodes, 3497 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FO0YfEuKQB/export
‚úÖ CVE_2019_15098_1987_Linux_Kernel_CWE_476_Testset_80398359_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MilCYSA3w6/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MilCYSA3w6/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MilCYSA3w6/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MilCYSA3w6/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MilCYSA3w6/code.cpg.bin`
exported 1256 nodes, 4744 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MilCYSA3w6/export
‚úÖ CVE_2022_23222_3449_Linux_Kernel_CWE_476_Testset_718a9878_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uiET2hkqrE/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uiET2hkqrE/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uiET2hkqrE/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uiET2hkqrE/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uiET2hkqrE/code.cpg.bin`
exported 1245 nodes, 4735 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uiET2hkqrE/export
‚úÖ CVE_2020_27835_2642_Linux_Kernel_CWE_416_Testset_5eca977e_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5nAsUy9Kru/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5nAsUy9Kru/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5nAsUy9Kru/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5nAsUy9Kru/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5nAsUy9Kru/code.cpg.bin`
exported 1123 nodes, 3752 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5nAsUy9Kru/export
‚úÖ CVE_2020_10742_2409_Linux_Kernel_CWE_787_Testset_2cee9e0d_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BWNMf9YIAm/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BWNMf9YIAm/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BWNMf9YIAm/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BWNMf9YIAm/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BWNMf9YIAm/code.cpg.bin`
exported 1697 nodes, 9407 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BWNMf9YIAm/export
‚úÖ CVE_2019_19046_2127_Linux_Kernel_CWE_401_Testset_b68cfb15_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xxSM9sCJRS/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xxSM9sCJRS/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xxSM9sCJRS/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xxSM9sCJRS/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xxSM9sCJRS/code.cpg.bin`
exported 1634 nodes, 7326 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xxSM9sCJRS/export
‚úÖ CVE_2023_3269_4053_Linux_Kernel_CWE_416_Testset_8c5e84cc_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GGJUIMVA8l/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GGJUIMVA8l/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GGJUIMVA8l/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GGJUIMVA8l/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GGJUIMVA8l/code.cpg.bin`
exported 1012 nodes, 3136 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GGJUIMVA8l/export
‚úÖ CVE_2023_35823_4110_Linux_Kernel_CWE_362_Testset_b82cee8f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zCdOLOFbrH/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zCdOLOFbrH/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zCdOLOFbrH/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zCdOLOFbrH/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zCdOLOFbrH/code.cpg.bin`
exported 1554 nodes, 6957 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zCdOLOFbrH/export
‚úÖ CVE_2017_1000251_1189_Linux_Kernel_CWE_787_Testset_bd3ae88f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.G6l9a30hEn/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.G6l9a30hEn/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.G6l9a30hEn/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.G6l9a30hEn/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.G6l9a30hEn/code.cpg.bin`
exported 1504 nodes, 6666 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.G6l9a30hEn/export
‚úÖ CVE_2016_10905_908_Linux_Kernel_CWE_416_Testset_9aa6db63_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BbAPgbT6sr/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BbAPgbT6sr/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BbAPgbT6sr/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BbAPgbT6sr/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BbAPgbT6sr/code.cpg.bin`
exported 1323 nodes, 5120 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BbAPgbT6sr/export
‚úÖ CVE_2019_19462_2197_Linux_Kernel_CWE_476_Testset_7efcc51c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WfqWH3ArJm/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WfqWH3ArJm/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WfqWH3ArJm/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WfqWH3ArJm/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WfqWH3ArJm/code.cpg.bin`
exported 1141 nodes, 3968 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WfqWH3ArJm/export
‚úÖ CVE_2020_27835_2645_Linux_Kernel_CWE_416_Testset_14646a15_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kQlBAFW3NH/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kQlBAFW3NH/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kQlBAFW3NH/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kQlBAFW3NH/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kQlBAFW3NH/code.cpg.bin`
exported 1513 nodes, 6680 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kQlBAFW3NH/export
‚úÖ CVE_2019_18885_2113_Linux_Kernel_CWE_476_Testset_a356150c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dtrAlEKheo/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dtrAlEKheo/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dtrAlEKheo/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dtrAlEKheo/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dtrAlEKheo/code.cpg.bin`
exported 1880 nodes, 11052 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dtrAlEKheo/export
‚úÖ CVE_2023_0615_3838_Linux_Kernel_CWE_401_Testset_715f21ca_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6ialr5YxPR/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6ialr5YxPR/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6ialr5YxPR/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6ialr5YxPR/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6ialr5YxPR/code.cpg.bin`
exported 1221 nodes, 4566 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6ialr5YxPR/export
‚úÖ CVE_2017_18241_1423_Linux_Kernel_CWE_476_Testset_ac2018c6_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k6apGgjBwQ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k6apGgjBwQ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k6apGgjBwQ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k6apGgjBwQ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k6apGgjBwQ/code.cpg.bin`
exported 1477 nodes, 6623 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k6apGgjBwQ/export
‚úÖ CVE_2021_3609_3021_Linux_Kernel_CWE_362_Testset_d0695a66_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xNgLy2DINE/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xNgLy2DINE/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xNgLy2DINE/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xNgLy2DINE/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xNgLy2DINE/code.cpg.bin`
exported 1292 nodes, 4881 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xNgLy2DINE/export
‚úÖ CVE_2018_18021_1730_Linux_Kernel_CWE_20_Testset_408edd93_v OK
   üìä [400/586] Rate: 11.4 files/min | Success: 399
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uEANyjDYub/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uEANyjDYub/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uEANyjDYub/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uEANyjDYub/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uEANyjDYub/code.cpg.bin`
exported 1122 nodes, 3696 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uEANyjDYub/export
‚úÖ CVE_2020_27675_2623_Linux_Kernel_CWE_416_Testset_8ac60463_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sXMIyB97ya/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sXMIyB97ya/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sXMIyB97ya/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sXMIyB97ya/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sXMIyB97ya/code.cpg.bin`
exported 1021 nodes, 3168 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sXMIyB97ya/export
‚úÖ CVE_2014_8160_607_Linux_Kernel_CWE_20_Testset_acd6bed2_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZE81sji0jJ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZE81sji0jJ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZE81sji0jJ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZE81sji0jJ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZE81sji0jJ/code.cpg.bin`
exported 1000 nodes, 3087 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZE81sji0jJ/export
‚úÖ CVE_2019_19813_2247_Linux_Kernel_CWE_416_Testset_80a80720_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XvcLpmFbgd/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XvcLpmFbgd/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XvcLpmFbgd/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XvcLpmFbgd/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XvcLpmFbgd/code.cpg.bin`
exported 1723 nodes, 8430 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XvcLpmFbgd/export
‚úÖ CVE_2021_4204_3151_Linux_Kernel_CWE_119_Testset_3ccdb995_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6wWweQ2NoU/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6wWweQ2NoU/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6wWweQ2NoU/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6wWweQ2NoU/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6wWweQ2NoU/code.cpg.bin`
exported 1433 nodes, 6057 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6wWweQ2NoU/export
‚úÖ CVE_2020_10757_2414_Linux_Kernel_CWE_119_Testset_d7361e20_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3C6OZcRqxs/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3C6OZcRqxs/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3C6OZcRqxs/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3C6OZcRqxs/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3C6OZcRqxs/code.cpg.bin`
exported 1499 nodes, 7118 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3C6OZcRqxs/export
‚úÖ CVE_2022_2977_3528_Linux_Kernel_CWE_416_Testset_433a0425_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6Md5EaCYi4/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6Md5EaCYi4/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6Md5EaCYi4/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6Md5EaCYi4/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6Md5EaCYi4/code.cpg.bin`
exported 1042 nodes, 3271 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6Md5EaCYi4/export
‚úÖ CVE_2017_16526_1311_Linux_Kernel_CWE_119_Testset_8267e951_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NmigNSJur0/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NmigNSJur0/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NmigNSJur0/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NmigNSJur0/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NmigNSJur0/code.cpg.bin`
exported 1000 nodes, 3087 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NmigNSJur0/export
‚úÖ CVE_2023_4244_4203_Linux_Kernel_CWE_416_Testset_2f650d0e_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PuM9kUm8pl/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PuM9kUm8pl/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PuM9kUm8pl/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PuM9kUm8pl/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PuM9kUm8pl/code.cpg.bin`
exported 1173 nodes, 4286 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PuM9kUm8pl/export
‚úÖ CVE_2020_12464_2470_Linux_Kernel_CWE_416_Testset_07039125_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pOXVsJ65f4/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pOXVsJ65f4/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pOXVsJ65f4/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pOXVsJ65f4/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pOXVsJ65f4/code.cpg.bin`
exported 1076 nodes, 3485 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pOXVsJ65f4/export
‚úÖ CVE_2023_32250_4020_Linux_Kernel_CWE_362_Testset_b19ff369_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mCncNLJ4VV/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mCncNLJ4VV/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mCncNLJ4VV/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mCncNLJ4VV/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mCncNLJ4VV/code.cpg.bin`
exported 1113 nodes, 3709 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mCncNLJ4VV/export
‚úÖ CVE_2021_20261_2863_Linux_Kernel_CWE_362_Testset_d63ec3f0_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CfYc3g6V86/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CfYc3g6V86/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CfYc3g6V86/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CfYc3g6V86/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CfYc3g6V86/code.cpg.bin`
exported 1189 nodes, 4294 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CfYc3g6V86/export
‚úÖ CVE_2022_1048_3243_Linux_Kernel_CWE_416_Testset_cce98ec5_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wSdvPeGBfl/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wSdvPeGBfl/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wSdvPeGBfl/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wSdvPeGBfl/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wSdvPeGBfl/code.cpg.bin`
exported 1739 nodes, 9082 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wSdvPeGBfl/export
‚úÖ CVE_2015_5327_776_Linux_Kernel_CWE_125_Testset_1dbd2804_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F2pHl6pM0r/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F2pHl6pM0r/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F2pHl6pM0r/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F2pHl6pM0r/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F2pHl6pM0r/code.cpg.bin`
exported 1669 nodes, 7819 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F2pHl6pM0r/export
‚úÖ CVE_2015_7613_789_Linux_Kernel_CWE_362_Testset_8261e050_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.P2O6SyZsdH/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.P2O6SyZsdH/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.P2O6SyZsdH/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.P2O6SyZsdH/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.P2O6SyZsdH/code.cpg.bin`
exported 1400 nodes, 5902 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.P2O6SyZsdH/export
‚úÖ CVE_2013_6368_344_Linux_Kernel_CWE_20_Testset_1ddfc40f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xiqDTrZVuQ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xiqDTrZVuQ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xiqDTrZVuQ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xiqDTrZVuQ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xiqDTrZVuQ/code.cpg.bin`
exported 1711 nodes, 9193 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xiqDTrZVuQ/export
‚úÖ CVE_2020_12363_2463_Linux_Kernel_CWE_20_Testset_1edf74ea_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jhMioUVAUA/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jhMioUVAUA/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jhMioUVAUA/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jhMioUVAUA/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jhMioUVAUA/code.cpg.bin`
exported 1786 nodes, 9700 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jhMioUVAUA/export
‚úÖ CVE_2023_3357_4061_Linux_Kernel_CWE_476_Testset_681b1e79_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ht1ZrYhdAD/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ht1ZrYhdAD/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ht1ZrYhdAD/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ht1ZrYhdAD/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ht1ZrYhdAD/code.cpg.bin`
exported 1087 nodes, 3542 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ht1ZrYhdAD/export
‚úÖ CVE_2020_25656_2594_Linux_Kernel_CWE_416_Testset_0bd46a0f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GoUXPEptxK/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GoUXPEptxK/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GoUXPEptxK/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GoUXPEptxK/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GoUXPEptxK/code.cpg.bin`
exported 1355 nodes, 5503 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GoUXPEptxK/export
‚úÖ CVE_2017_16646_1329_Linux_Kernel_CWE_476_Testset_99663a61_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GuZfXrnjUb/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GuZfXrnjUb/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GuZfXrnjUb/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GuZfXrnjUb/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GuZfXrnjUb/code.cpg.bin`
exported 1169 nodes, 4082 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GuZfXrnjUb/export
‚úÖ CVE_2013_1848_196_Linux_Kernel_CWE_20_Testset_478c197d_v OK
   üìä [420/586] Rate: 11.4 files/min | Success: 419
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.74HNbOa8ah/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.74HNbOa8ah/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.74HNbOa8ah/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.74HNbOa8ah/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.74HNbOa8ah/code.cpg.bin`
exported 1094 nodes, 3574 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.74HNbOa8ah/export
‚úÖ CVE_2012_3552_70_Linux_Kernel_CWE_362_Testset_eed9930e_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UrTnc92DlD/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UrTnc92DlD/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UrTnc92DlD/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UrTnc92DlD/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UrTnc92DlD/code.cpg.bin`
exported 1931 nodes, 10373 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UrTnc92DlD/export
‚úÖ CVE_2022_20567_3398_Linux_Kernel_CWE_362_Testset_c4bf136d_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TysR7UEZpP/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TysR7UEZpP/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TysR7UEZpP/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TysR7UEZpP/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TysR7UEZpP/code.cpg.bin`
exported 1256 nodes, 4795 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TysR7UEZpP/export
‚úÖ CVE_2012_3552_74_Linux_Kernel_CWE_362_Testset_90871c5c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c2qqIZIbmF/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c2qqIZIbmF/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c2qqIZIbmF/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c2qqIZIbmF/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c2qqIZIbmF/code.cpg.bin`
exported 1000 nodes, 3087 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c2qqIZIbmF/export
‚úÖ CVE_2010_5328_24_Linux_Kernel_CWE_20_Testset_e0bae9e7_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Pj7mT45Dom/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Pj7mT45Dom/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Pj7mT45Dom/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Pj7mT45Dom/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Pj7mT45Dom/code.cpg.bin`
exported 1580 nodes, 7370 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Pj7mT45Dom/export
‚úÖ CVE_2021_39800_3108_Linux_Kernel_CWE_416_Testset_8ad21d1b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.L2QOm1ycfy/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.L2QOm1ycfy/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.L2QOm1ycfy/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.L2QOm1ycfy/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.L2QOm1ycfy/code.cpg.bin`
exported 1295 nodes, 4907 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.L2QOm1ycfy/export
‚úÖ CVE_2023_28327_3975_Linux_Kernel_CWE_476_Testset_6aaef979_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oRXQAnmJiK/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oRXQAnmJiK/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oRXQAnmJiK/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oRXQAnmJiK/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oRXQAnmJiK/code.cpg.bin`
exported 1098 nodes, 3610 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oRXQAnmJiK/export
‚úÖ CVE_2022_2318_3431_Linux_Kernel_CWE_416_Testset_aa829263_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pin5azT8Uf/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pin5azT8Uf/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pin5azT8Uf/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pin5azT8Uf/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pin5azT8Uf/code.cpg.bin`
exported 1479 nodes, 6337 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pin5azT8Uf/export
‚úÖ CVE_2022_4379_3746_Linux_Kernel_CWE_416_Testset_3a5090b0_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RsdvC41B5m/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RsdvC41B5m/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RsdvC41B5m/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RsdvC41B5m/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RsdvC41B5m/code.cpg.bin`
exported 1664 nodes, 8369 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RsdvC41B5m/export
‚úÖ CVE_2022_33741_3578_Linux_Kernel_CWE_200_Testset_867ff13c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PY7fuH512k/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PY7fuH512k/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PY7fuH512k/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PY7fuH512k/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PY7fuH512k/code.cpg.bin`
exported 1165 nodes, 3928 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PY7fuH512k/export
‚úÖ CVE_2021_3655_3030_Linux_Kernel_CWE_20_Testset_090974c1_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JZxkhLUWhe/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JZxkhLUWhe/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JZxkhLUWhe/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JZxkhLUWhe/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JZxkhLUWhe/code.cpg.bin`
exported 1191 nodes, 4149 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JZxkhLUWhe/export
‚úÖ CVE_2018_10940_1629_Linux_Kernel_CWE_119_Testset_8fb5746f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mbaTYAOXyj/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mbaTYAOXyj/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mbaTYAOXyj/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mbaTYAOXyj/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mbaTYAOXyj/code.cpg.bin`
exported 1102 nodes, 3613 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mbaTYAOXyj/export
‚úÖ CVE_2019_19082_2166_Linux_Kernel_CWE_401_Testset_57b06e79_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WCLrG9hEeQ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WCLrG9hEeQ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WCLrG9hEeQ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WCLrG9hEeQ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WCLrG9hEeQ/code.cpg.bin`
exported 1446 nodes, 5906 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WCLrG9hEeQ/export
‚úÖ CVE_2015_8709_839_Linux_Kernel_CWE_264_Testset_58ad33cf_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VkMDGLuaHy/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VkMDGLuaHy/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VkMDGLuaHy/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VkMDGLuaHy/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VkMDGLuaHy/code.cpg.bin`
exported 2008 nodes, 11072 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VkMDGLuaHy/export
‚úÖ CVE_2017_17712_1366_Linux_Kernel_CWE_362_Testset_08c7803f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RPc7V4aHw0/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RPc7V4aHw0/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RPc7V4aHw0/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RPc7V4aHw0/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RPc7V4aHw0/code.cpg.bin`
exported 1169 nodes, 4108 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RPc7V4aHw0/export
‚úÖ CVE_2019_25045_2304_Linux_Kernel_CWE_416_Testset_df36048f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.riOHirkdK5/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.riOHirkdK5/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.riOHirkdK5/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.riOHirkdK5/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.riOHirkdK5/code.cpg.bin`
exported 1220 nodes, 4425 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.riOHirkdK5/export
‚úÖ CVE_2023_2985_3984_Linux_Kernel_CWE_416_Testset_7c54d593_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.u3nGkfbzLc/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.u3nGkfbzLc/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.u3nGkfbzLc/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.u3nGkfbzLc/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.u3nGkfbzLc/code.cpg.bin`
exported 1111 nodes, 3670 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.u3nGkfbzLc/export
‚úÖ CVE_2020_36694_2770_Linux_Kernel_CWE_416_Testset_68500a7e_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lxiXbmqvum/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lxiXbmqvum/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lxiXbmqvum/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lxiXbmqvum/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lxiXbmqvum/code.cpg.bin`
exported 1127 nodes, 3737 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lxiXbmqvum/export
‚úÖ CVE_2013_0268_153_Linux_Kernel_CWE_264_Testset_6e774f4e_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QIdhcxdj47/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QIdhcxdj47/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QIdhcxdj47/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QIdhcxdj47/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QIdhcxdj47/code.cpg.bin`
exported 1398 nodes, 5893 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QIdhcxdj47/export
‚úÖ CVE_2023_32252_4031_Linux_Kernel_CWE_476_Testset_f6f461d2_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Bhut9ML7rn/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Bhut9ML7rn/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Bhut9ML7rn/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Bhut9ML7rn/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Bhut9ML7rn/code.cpg.bin`
exported 1475 nodes, 6626 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Bhut9ML7rn/export
‚úÖ CVE_2021_44733_3171_Linux_Kernel_CWE_362_Testset_2ac33929_v OK
   üìä [440/586] Rate: 11.4 files/min | Success: 439
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b8nC8NL3g8/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b8nC8NL3g8/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b8nC8NL3g8/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b8nC8NL3g8/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b8nC8NL3g8/code.cpg.bin`
exported 1177 nodes, 4045 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b8nC8NL3g8/export
‚úÖ CVE_2019_13233_1959_Linux_Kernel_CWE_362_Testset_92efcf8f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z4ZoMNDHND/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z4ZoMNDHND/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z4ZoMNDHND/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z4ZoMNDHND/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z4ZoMNDHND/code.cpg.bin`
exported 1382 nodes, 5809 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z4ZoMNDHND/export
‚úÖ CVE_2014_0181_437_Linux_Kernel_CWE_264_Testset_d1920747_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UyWQFY9lvZ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UyWQFY9lvZ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UyWQFY9lvZ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UyWQFY9lvZ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UyWQFY9lvZ/code.cpg.bin`
exported 1050 nodes, 3335 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UyWQFY9lvZ/export
‚úÖ CVE_2013_0309_156_Linux_Kernel_CWE_119_Testset_305e0f68_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UUmOPuLjoC/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UUmOPuLjoC/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UUmOPuLjoC/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UUmOPuLjoC/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UUmOPuLjoC/code.cpg.bin`
exported 1544 nodes, 7073 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UUmOPuLjoC/export
‚úÖ CVE_2012_3552_77_Linux_Kernel_CWE_362_Testset_0d61f862_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rg20eGozRV/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rg20eGozRV/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rg20eGozRV/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rg20eGozRV/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rg20eGozRV/code.cpg.bin`
exported 1302 nodes, 4906 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rg20eGozRV/export
‚úÖ CVE_2017_16912_1349_Linux_Kernel_CWE_125_Testset_8bb3c831_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KSsyFB58Yl/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KSsyFB58Yl/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KSsyFB58Yl/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KSsyFB58Yl/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KSsyFB58Yl/code.cpg.bin`
exported 1095 nodes, 3574 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KSsyFB58Yl/export
‚úÖ CVE_2019_19082_2167_Linux_Kernel_CWE_401_Testset_a64dd15b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LWiGjo8RoM/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LWiGjo8RoM/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LWiGjo8RoM/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LWiGjo8RoM/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LWiGjo8RoM/code.cpg.bin`
exported 1107 nodes, 3825 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LWiGjo8RoM/export
‚úÖ CVE_2019_15916_2023_Linux_Kernel_CWE_401_Testset_55474145_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JvetZVKQBY/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JvetZVKQBY/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JvetZVKQBY/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JvetZVKQBY/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JvetZVKQBY/code.cpg.bin`
exported 1070 nodes, 3437 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JvetZVKQBY/export
‚úÖ CVE_2022_40476_3704_Linux_Kernel_CWE_476_Testset_b4c18823_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cRHkaVeP1E/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cRHkaVeP1E/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cRHkaVeP1E/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cRHkaVeP1E/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cRHkaVeP1E/code.cpg.bin`
exported 1102 nodes, 3679 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cRHkaVeP1E/export
‚úÖ CVE_2021_3752_3054_Linux_Kernel_CWE_362_Testset_ba44d0b5_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KXSvKLqGin/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KXSvKLqGin/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KXSvKLqGin/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KXSvKLqGin/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KXSvKLqGin/code.cpg.bin`
exported 1133 nodes, 3856 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KXSvKLqGin/export
‚úÖ CVE_2022_47946_3778_Linux_Kernel_CWE_416_Testset_48e84292_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XF1u5dCdWB/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XF1u5dCdWB/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XF1u5dCdWB/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XF1u5dCdWB/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XF1u5dCdWB/code.cpg.bin`
exported 1111 nodes, 3670 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XF1u5dCdWB/export
‚úÖ CVE_2020_36694_2777_Linux_Kernel_CWE_416_Testset_767300c8_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tuXcFHgJ8C/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tuXcFHgJ8C/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tuXcFHgJ8C/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tuXcFHgJ8C/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tuXcFHgJ8C/code.cpg.bin`
exported 1052 nodes, 3324 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tuXcFHgJ8C/export
‚úÖ CVE_2017_16528_1314_Linux_Kernel_CWE_416_Testset_9e38f409_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b8lzG2kVkH/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b8lzG2kVkH/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b8lzG2kVkH/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b8lzG2kVkH/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b8lzG2kVkH/code.cpg.bin`
exported 1873 nodes, 9821 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b8lzG2kVkH/export
‚úÖ CVE_2021_0920_2830_Linux_Kernel_CWE_362_Testset_91972ca1_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RqsbUqu64P/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RqsbUqu64P/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RqsbUqu64P/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RqsbUqu64P/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RqsbUqu64P/code.cpg.bin`
exported 1072 nodes, 3480 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RqsbUqu64P/export
‚úÖ CVE_2007_6761_6_Linux_Kernel_CWE_119_Testset_48530390_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IkbwAgJ4cw/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IkbwAgJ4cw/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IkbwAgJ4cw/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IkbwAgJ4cw/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IkbwAgJ4cw/code.cpg.bin`
exported 1253 nodes, 4911 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IkbwAgJ4cw/export
‚úÖ CVE_2023_5717_4290_Linux_Kernel_CWE_787_Testset_a601f92d_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x0bPk6viV9/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x0bPk6viV9/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x0bPk6viV9/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x0bPk6viV9/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x0bPk6viV9/code.cpg.bin`
exported 1171 nodes, 4028 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x0bPk6viV9/export
‚úÖ CVE_2022_33742_3590_Linux_Kernel_CWE_200_Testset_e377ad6a_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zihRB9Qncj/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zihRB9Qncj/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zihRB9Qncj/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zihRB9Qncj/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zihRB9Qncj/code.cpg.bin`
exported 1955 nodes, 11119 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zihRB9Qncj/export
‚úÖ CVE_2014_0181_455_Linux_Kernel_CWE_264_Testset_90f4313f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7uU0bOdECI/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7uU0bOdECI/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7uU0bOdECI/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7uU0bOdECI/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7uU0bOdECI/code.cpg.bin`
exported 1264 nodes, 4870 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7uU0bOdECI/export
‚úÖ CVE_2019_12818_1951_Linux_Kernel_CWE_476_Testset_90887a33_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.v5FFwNGlFf/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.v5FFwNGlFf/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.v5FFwNGlFf/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.v5FFwNGlFf/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.v5FFwNGlFf/code.cpg.bin`
exported 1298 nodes, 4813 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.v5FFwNGlFf/export
‚úÖ CVE_2021_3506_3016_Linux_Kernel_CWE_125_Testset_4919869c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WLTzw9fxbf/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WLTzw9fxbf/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WLTzw9fxbf/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WLTzw9fxbf/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WLTzw9fxbf/code.cpg.bin`
exported 1318 nodes, 5319 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WLTzw9fxbf/export
‚úÖ CVE_2018_9465_1869_Linux_Kernel_CWE_416_Testset_78fccd6b_v OK
   üìä [460/586] Rate: 11.4 files/min | Success: 459
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DlO7DIcJz0/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DlO7DIcJz0/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DlO7DIcJz0/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DlO7DIcJz0/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DlO7DIcJz0/code.cpg.bin`
exported 2338 nodes, 14891 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DlO7DIcJz0/export
‚úÖ CVE_2019_2101_2290_Linux_Kernel_CWE_125_Testset_30a2e029_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FKGBNkoVHr/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FKGBNkoVHr/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FKGBNkoVHr/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FKGBNkoVHr/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FKGBNkoVHr/code.cpg.bin`
exported 1177 nodes, 4045 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FKGBNkoVHr/export
‚úÖ CVE_2019_13233_1959_Linux_Kernel_CWE_416_Testset_92efcf8f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yCi9QeGopb/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yCi9QeGopb/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yCi9QeGopb/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yCi9QeGopb/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yCi9QeGopb/code.cpg.bin`
exported 1144 nodes, 3868 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yCi9QeGopb/export
‚úÖ CVE_2016_3134_963_Linux_Kernel_CWE_119_Testset_e7691c36_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gbSaYvkDaW/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gbSaYvkDaW/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gbSaYvkDaW/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gbSaYvkDaW/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gbSaYvkDaW/code.cpg.bin`
exported 1152 nodes, 3921 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gbSaYvkDaW/export
‚úÖ CVE_2019_19815_2250_Linux_Kernel_CWE_476_Testset_21478f11_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3IAIBXgyeO/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3IAIBXgyeO/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3IAIBXgyeO/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3IAIBXgyeO/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3IAIBXgyeO/code.cpg.bin`
exported 1112 nodes, 3747 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3IAIBXgyeO/export
‚úÖ CVE_2019_10125_1891_Linux_Kernel_CWE_416_Testset_effeb2e5_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KrxLLe5u6d/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KrxLLe5u6d/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KrxLLe5u6d/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KrxLLe5u6d/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KrxLLe5u6d/code.cpg.bin`
exported 1057 nodes, 3385 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KrxLLe5u6d/export
‚úÖ CVE_2022_3169_3562_Linux_Kernel_CWE_20_Testset_c8e4e707_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GsihSq1IlZ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GsihSq1IlZ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GsihSq1IlZ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GsihSq1IlZ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GsihSq1IlZ/code.cpg.bin`
exported 1279 nodes, 4994 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GsihSq1IlZ/export
‚úÖ CVE_2022_1976_3324_Linux_Kernel_CWE_416_Testset_91be0e53_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BG5uWG9SYK/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BG5uWG9SYK/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BG5uWG9SYK/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BG5uWG9SYK/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BG5uWG9SYK/code.cpg.bin`
exported 1505 nodes, 7078 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BG5uWG9SYK/export
‚úÖ CVE_2020_27835_2651_Linux_Kernel_CWE_416_Testset_b20c35c0_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dcNNvLDSHh/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dcNNvLDSHh/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dcNNvLDSHh/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dcNNvLDSHh/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dcNNvLDSHh/code.cpg.bin`
exported 1141 nodes, 3920 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dcNNvLDSHh/export
‚úÖ CVE_2023_4132_4192_Linux_Kernel_CWE_416_Testset_7816e830_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Bs1Jo5dC5h/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Bs1Jo5dC5h/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Bs1Jo5dC5h/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Bs1Jo5dC5h/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Bs1Jo5dC5h/code.cpg.bin`
exported 1595 nodes, 6947 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Bs1Jo5dC5h/export
‚úÖ CVE_2021_38206_3083_Linux_Kernel_CWE_476_Testset_c2a141a9_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cpQ1fakVLu/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cpQ1fakVLu/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cpQ1fakVLu/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cpQ1fakVLu/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cpQ1fakVLu/code.cpg.bin`
exported 1432 nodes, 6174 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cpQ1fakVLu/export
‚úÖ CVE_2023_35827_4114_Linux_Kernel_CWE_362_Testset_25492a65_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.io9l6uP64x/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.io9l6uP64x/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.io9l6uP64x/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.io9l6uP64x/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.io9l6uP64x/code.cpg.bin`
exported 1418 nodes, 5751 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.io9l6uP64x/export
‚úÖ CVE_2014_2706_496_Linux_Kernel_CWE_362_Testset_2478c8af_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MkA1msSAVe/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MkA1msSAVe/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MkA1msSAVe/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MkA1msSAVe/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MkA1msSAVe/code.cpg.bin`
exported 1136 nodes, 3928 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MkA1msSAVe/export
‚úÖ CVE_2015_8961_869_Linux_Kernel_CWE_416_Testset_d1de697c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.epg4KUeVG4/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.epg4KUeVG4/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.epg4KUeVG4/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.epg4KUeVG4/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.epg4KUeVG4/code.cpg.bin`
exported 1046 nodes, 3324 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.epg4KUeVG4/export
‚úÖ CVE_2013_1772_177_Linux_Kernel_CWE_119_Testset_8125f97a_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RTmAAYBURa/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RTmAAYBURa/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RTmAAYBURa/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RTmAAYBURa/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RTmAAYBURa/code.cpg.bin`
exported 1152 nodes, 3992 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RTmAAYBURa/export
‚úÖ CVE_2022_20409_3354_Linux_Kernel_CWE_416_Testset_6cfbb381_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Vacz7VxdeH/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Vacz7VxdeH/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Vacz7VxdeH/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Vacz7VxdeH/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Vacz7VxdeH/code.cpg.bin`
exported 1432 nodes, 6174 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Vacz7VxdeH/export
‚úÖ CVE_2023_35827_4114_Linux_Kernel_CWE_416_Testset_25492a65_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Qvs4njCWi9/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Qvs4njCWi9/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Qvs4njCWi9/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Qvs4njCWi9/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Qvs4njCWi9/code.cpg.bin`
exported 1000 nodes, 3087 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Qvs4njCWi9/export
‚úÖ CVE_2019_18808_2100_Linux_Kernel_CWE_401_Testset_5bcfb24d_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g2CAClT2BP/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g2CAClT2BP/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g2CAClT2BP/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g2CAClT2BP/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g2CAClT2BP/code.cpg.bin`
exported 1973 nodes, 10378 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g2CAClT2BP/export
‚úÖ CVE_2012_6704_142_Linux_Kernel_CWE_119_Testset_5674cf36_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0EVg7P3UQg/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0EVg7P3UQg/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0EVg7P3UQg/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0EVg7P3UQg/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0EVg7P3UQg/code.cpg.bin`
exported 1031 nodes, 3236 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0EVg7P3UQg/export
‚úÖ CVE_2018_5814_1835_Linux_Kernel_CWE_362_Testset_902bc5db_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iJ6z0mvRTt/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iJ6z0mvRTt/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iJ6z0mvRTt/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iJ6z0mvRTt/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iJ6z0mvRTt/code.cpg.bin`
exported 1672 nodes, 10054 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iJ6z0mvRTt/export
‚úÖ CVE_2016_2782_955_Linux_Kernel_CWE_476_Testset_7d7472e9_v OK
   üìä [480/586] Rate: 11.4 files/min | Success: 479
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vO7caDaYkU/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vO7caDaYkU/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vO7caDaYkU/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vO7caDaYkU/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vO7caDaYkU/code.cpg.bin`
exported 1232 nodes, 4660 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vO7caDaYkU/export
‚úÖ CVE_2013_7266_381_Linux_Kernel_CWE_20_Testset_658605a9_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.su0kC7xzon/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.su0kC7xzon/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.su0kC7xzon/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.su0kC7xzon/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.su0kC7xzon/code.cpg.bin`
exported 1446 nodes, 6269 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.su0kC7xzon/export
‚úÖ CVE_2017_18200_1395_Linux_Kernel_CWE_20_Testset_b9e4aed6_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fmSwNDTZ1d/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fmSwNDTZ1d/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fmSwNDTZ1d/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fmSwNDTZ1d/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fmSwNDTZ1d/code.cpg.bin`
exported 1064 nodes, 3415 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fmSwNDTZ1d/export
‚úÖ CVE_2014_2673_492_Linux_Kernel_CWE_20_Testset_2fe82bb9_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9yjOFmbezq/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9yjOFmbezq/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9yjOFmbezq/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9yjOFmbezq/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9yjOFmbezq/code.cpg.bin`
exported 1157 nodes, 4041 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9yjOFmbezq/export
‚úÖ CVE_2021_43057_3160_Linux_Kernel_CWE_416_Testset_f4bd155c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kr6ppHxCPa/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kr6ppHxCPa/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kr6ppHxCPa/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kr6ppHxCPa/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kr6ppHxCPa/code.cpg.bin`
exported 1115 nodes, 3745 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kr6ppHxCPa/export
‚úÖ CVE_2019_19523_2198_Linux_Kernel_CWE_416_Testset_30c9c3e7_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wa6KSk8vEd/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wa6KSk8vEd/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wa6KSk8vEd/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wa6KSk8vEd/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wa6KSk8vEd/code.cpg.bin`
exported 1813 nodes, 9261 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wa6KSk8vEd/export
‚úÖ CVE_2014_0181_456_Linux_Kernel_CWE_264_Testset_378dc6fc_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.17HKMEekrh/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.17HKMEekrh/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.17HKMEekrh/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.17HKMEekrh/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.17HKMEekrh/code.cpg.bin`
exported 1091 nodes, 3544 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.17HKMEekrh/export
‚úÖ CVE_2020_27067_2611_Linux_Kernel_CWE_362_Testset_11d50fe4_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Mznx1aZyT1/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Mznx1aZyT1/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Mznx1aZyT1/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Mznx1aZyT1/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Mznx1aZyT1/code.cpg.bin`
exported 1487 nodes, 6401 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Mznx1aZyT1/export
‚úÖ CVE_2016_4997_1039_Linux_Kernel_CWE_264_Testset_07577930_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R14J7qHBUw/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R14J7qHBUw/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R14J7qHBUw/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R14J7qHBUw/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R14J7qHBUw/code.cpg.bin`
exported 1132 nodes, 3883 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R14J7qHBUw/export
‚úÖ CVE_2019_19768_2233_Linux_Kernel_CWE_416_Testset_1660e3ca_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pwBhXfDjBD/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pwBhXfDjBD/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pwBhXfDjBD/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pwBhXfDjBD/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pwBhXfDjBD/code.cpg.bin`
exported 1186 nodes, 4244 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pwBhXfDjBD/export
‚úÖ CVE_2013_1772_170_Linux_Kernel_CWE_119_Testset_0858cf6d_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xKQ7E1CYRb/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xKQ7E1CYRb/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xKQ7E1CYRb/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xKQ7E1CYRb/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xKQ7E1CYRb/code.cpg.bin`
exported 1122 nodes, 3755 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xKQ7E1CYRb/export
‚úÖ CVE_2010_3432_22_Linux_Kernel_CWE_20_Testset_c2e836db_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NrBLPX1Ikt/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NrBLPX1Ikt/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NrBLPX1Ikt/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NrBLPX1Ikt/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NrBLPX1Ikt/code.cpg.bin`
exported 1146 nodes, 3928 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NrBLPX1Ikt/export
‚úÖ CVE_2015_8963_873_Linux_Kernel_CWE_362_Testset_b412f573_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o7IylsI2R1/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o7IylsI2R1/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o7IylsI2R1/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o7IylsI2R1/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o7IylsI2R1/code.cpg.bin`
exported 1476 nodes, 6350 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o7IylsI2R1/export
‚úÖ CVE_2013_4591_335_Linux_Kernel_CWE_119_Testset_98629e98_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4kSxtkBSKN/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4kSxtkBSKN/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4kSxtkBSKN/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4kSxtkBSKN/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4kSxtkBSKN/code.cpg.bin`
exported 1241 nodes, 4550 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4kSxtkBSKN/export
‚úÖ CVE_2020_29660_2704_Linux_Kernel_CWE_416_Testset_f1d2b02c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6Ruhn3Hf48/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6Ruhn3Hf48/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6Ruhn3Hf48/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6Ruhn3Hf48/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6Ruhn3Hf48/code.cpg.bin`
exported 1648 nodes, 7844 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6Ruhn3Hf48/export
‚úÖ CVE_2021_3715_3042_Linux_Kernel_CWE_416_Testset_b3560084_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JO0A8ukcVE/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JO0A8ukcVE/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JO0A8ukcVE/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JO0A8ukcVE/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JO0A8ukcVE/code.cpg.bin`
exported 1094 nodes, 3539 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JO0A8ukcVE/export
‚úÖ CVE_2021_3736_3046_Linux_Kernel_CWE_401_Testset_a1591d91_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V2s6bg2yrg/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V2s6bg2yrg/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V2s6bg2yrg/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V2s6bg2yrg/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V2s6bg2yrg/code.cpg.bin`
exported 1401 nodes, 6076 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V2s6bg2yrg/export
‚úÖ CVE_2017_1000380_1237_Linux_Kernel_CWE_200_Testset_5e446c68_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.I6gkL8IbLW/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.I6gkL8IbLW/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.I6gkL8IbLW/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.I6gkL8IbLW/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.I6gkL8IbLW/code.cpg.bin`
exported 1372 nodes, 5675 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.I6gkL8IbLW/export
‚úÖ CVE_2018_10876_1608_Linux_Kernel_CWE_416_Testset_aa0a58d2_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a9imllrZRK/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a9imllrZRK/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a9imllrZRK/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a9imllrZRK/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a9imllrZRK/code.cpg.bin`
exported 1424 nodes, 5695 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a9imllrZRK/export
‚úÖ CVE_2014_0181_443_Linux_Kernel_CWE_264_Testset_97eebd23_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KnVbYf1phT/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KnVbYf1phT/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KnVbYf1phT/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KnVbYf1phT/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KnVbYf1phT/code.cpg.bin`
exported 1192 nodes, 4289 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KnVbYf1phT/export
‚úÖ CVE_2015_3288_755_Linux_Kernel_CWE_20_Testset_f05c6c98_v OK
   üìä [500/586] Rate: 11.4 files/min | Success: 499
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vNAhTJiEuV/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vNAhTJiEuV/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vNAhTJiEuV/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vNAhTJiEuV/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vNAhTJiEuV/code.cpg.bin`
exported 1124 nodes, 3794 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vNAhTJiEuV/export
‚úÖ CVE_2019_19815_2252_Linux_Kernel_CWE_476_Testset_1757bdaf_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Vv3oK8Ptja/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Vv3oK8Ptja/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Vv3oK8Ptja/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Vv3oK8Ptja/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Vv3oK8Ptja/code.cpg.bin`
exported 1745 nodes, 8906 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Vv3oK8Ptja/export
‚úÖ CVE_2019_12455_1946_Linux_Kernel_CWE_476_Testset_e2ffba41_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mP8GhDD12b/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mP8GhDD12b/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mP8GhDD12b/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mP8GhDD12b/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mP8GhDD12b/code.cpg.bin`
exported 1048 nodes, 3316 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mP8GhDD12b/export
‚úÖ CVE_2018_17182_1726_Linux_Kernel_CWE_416_Testset_993c8a96_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fzjA8bHn6G/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fzjA8bHn6G/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fzjA8bHn6G/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fzjA8bHn6G/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fzjA8bHn6G/code.cpg.bin`
exported 1049 nodes, 3337 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fzjA8bHn6G/export
‚úÖ CVE_2022_1976_3329_Linux_Kernel_CWE_416_Testset_5f6ad0e7_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kWlWhZGvBz/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kWlWhZGvBz/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kWlWhZGvBz/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kWlWhZGvBz/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kWlWhZGvBz/code.cpg.bin`
exported 1174 nodes, 4061 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kWlWhZGvBz/export
‚úÖ CVE_2015_9016_884_Linux_Kernel_CWE_264_Testset_24ce902a_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sq0W7D7ig1/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sq0W7D7ig1/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sq0W7D7ig1/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sq0W7D7ig1/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sq0W7D7ig1/code.cpg.bin`
exported 1177 nodes, 4152 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sq0W7D7ig1/export
‚úÖ CVE_2020_10711_2404_Linux_Kernel_CWE_476_Testset_b37560fe_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fhcjqiSFvd/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fhcjqiSFvd/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fhcjqiSFvd/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fhcjqiSFvd/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fhcjqiSFvd/code.cpg.bin`
exported 2917 nodes, 17810 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fhcjqiSFvd/export
‚úÖ CVE_2017_12762_1263_Linux_Kernel_CWE_119_Testset_6df4f47f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YA6G9e29vx/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YA6G9e29vx/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YA6G9e29vx/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YA6G9e29vx/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YA6G9e29vx/code.cpg.bin`
exported 1293 nodes, 4898 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YA6G9e29vx/export
‚úÖ CVE_2023_2006_3894_Linux_Kernel_CWE_362_Testset_347ee41e_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8Dyf1WTcHB/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8Dyf1WTcHB/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8Dyf1WTcHB/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8Dyf1WTcHB/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8Dyf1WTcHB/code.cpg.bin`
exported 1552 nodes, 7557 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8Dyf1WTcHB/export
‚úÖ CVE_2019_19044_2125_Linux_Kernel_CWE_401_Testset_602ac201_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HFrFY5Dak4/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HFrFY5Dak4/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HFrFY5Dak4/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HFrFY5Dak4/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HFrFY5Dak4/code.cpg.bin`
exported 1792 nodes, 8981 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HFrFY5Dak4/export
‚úÖ CVE_2012_3552_93_Linux_Kernel_CWE_362_Testset_2837e674_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HFAJx8FAIo/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HFAJx8FAIo/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HFAJx8FAIo/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HFAJx8FAIo/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HFAJx8FAIo/code.cpg.bin`
exported 1811 nodes, 9610 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HFAJx8FAIo/export
‚úÖ CVE_2019_19064_2145_Linux_Kernel_CWE_401_Testset_f956de5b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MhCuQBRgOt/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MhCuQBRgOt/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MhCuQBRgOt/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MhCuQBRgOt/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MhCuQBRgOt/code.cpg.bin`
exported 1282 nodes, 4827 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MhCuQBRgOt/export
‚úÖ CVE_2020_36557_2764_Linux_Kernel_CWE_416_Testset_cad2e39c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uNSySAmOb1/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uNSySAmOb1/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uNSySAmOb1/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uNSySAmOb1/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uNSySAmOb1/code.cpg.bin`
exported 1440 nodes, 6124 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uNSySAmOb1/export
‚úÖ CVE_2022_48502_3799_Linux_Kernel_CWE_125_Testset_0bd774ee_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5CJMPwrc7g/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5CJMPwrc7g/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5CJMPwrc7g/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5CJMPwrc7g/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5CJMPwrc7g/code.cpg.bin`
exported 1371 nodes, 5371 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5CJMPwrc7g/export
‚úÖ CVE_2018_1093_1625_Linux_Kernel_CWE_125_Testset_9b9c962c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5dvxpvrAI9/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5dvxpvrAI9/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5dvxpvrAI9/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5dvxpvrAI9/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5dvxpvrAI9/code.cpg.bin`
exported 1893 nodes, 10707 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5dvxpvrAI9/export
‚úÖ CVE_2022_47520_3765_Linux_Kernel_CWE_125_Testset_9f954cea_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CV8RRhFhQx/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CV8RRhFhQx/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CV8RRhFhQx/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CV8RRhFhQx/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CV8RRhFhQx/code.cpg.bin`
exported 1179 nodes, 4160 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CV8RRhFhQx/export
‚úÖ CVE_2022_1419_3260_Linux_Kernel_CWE_416_Testset_7cbde52c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vOFslmEt8A/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vOFslmEt8A/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vOFslmEt8A/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vOFslmEt8A/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vOFslmEt8A/code.cpg.bin`
exported 1249 nodes, 4723 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vOFslmEt8A/export
‚úÖ CVE_2023_3610_4127_Linux_Kernel_CWE_416_Testset_01e92ecb_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zfg9qkvZGN/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zfg9qkvZGN/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zfg9qkvZGN/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zfg9qkvZGN/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zfg9qkvZGN/code.cpg.bin`
exported 1385 nodes, 5708 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zfg9qkvZGN/export
‚úÖ CVE_2013_4513_323_Linux_Kernel_CWE_119_Testset_5b625877_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VytENTPABC/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VytENTPABC/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VytENTPABC/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VytENTPABC/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VytENTPABC/code.cpg.bin`
exported 2411 nodes, 14900 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VytENTPABC/export
‚úÖ CVE_2019_19067_2148_Linux_Kernel_CWE_401_Testset_3771b614_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4K4sBvZBHc/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4K4sBvZBHc/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4K4sBvZBHc/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4K4sBvZBHc/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4K4sBvZBHc/code.cpg.bin`
exported 1367 nodes, 5517 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4K4sBvZBHc/export
‚úÖ CVE_2020_12114_2442_Linux_Kernel_CWE_362_Testset_8a8aed2d_v OK
   üìä [520/586] Rate: 11.3 files/min | Success: 519
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pbfLsvJyEx/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pbfLsvJyEx/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pbfLsvJyEx/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pbfLsvJyEx/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pbfLsvJyEx/code.cpg.bin`
exported 1493 nodes, 7104 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pbfLsvJyEx/export
‚úÖ CVE_2018_10883_1618_Linux_Kernel_CWE_787_Testset_579357c7_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o4WtKZMQvk/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o4WtKZMQvk/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o4WtKZMQvk/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o4WtKZMQvk/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o4WtKZMQvk/code.cpg.bin`
exported 1185 nodes, 4207 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o4WtKZMQvk/export
‚úÖ CVE_2019_15090_1984_Linux_Kernel_CWE_125_Testset_fdcaa549_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5iGYJbUH7b/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5iGYJbUH7b/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5iGYJbUH7b/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5iGYJbUH7b/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5iGYJbUH7b/code.cpg.bin`
exported 1981 nodes, 11630 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5iGYJbUH7b/export
‚úÖ CVE_2019_3459_2307_Linux_Kernel_CWE_125_Testset_e1fae0ee_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uV7Yn1NOBq/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uV7Yn1NOBq/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uV7Yn1NOBq/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uV7Yn1NOBq/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uV7Yn1NOBq/code.cpg.bin`
exported 1110 nodes, 3687 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uV7Yn1NOBq/export
‚úÖ CVE_2020_36387_2754_Linux_Kernel_CWE_416_Testset_888d530b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r1ijQkEigy/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r1ijQkEigy/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r1ijQkEigy/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r1ijQkEigy/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r1ijQkEigy/code.cpg.bin`
exported 1312 nodes, 4966 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r1ijQkEigy/export
‚úÖ CVE_2013_3232_272_Linux_Kernel_CWE_200_Testset_5ee4b8a3_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4NvPTDLbDv/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4NvPTDLbDv/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4NvPTDLbDv/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4NvPTDLbDv/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4NvPTDLbDv/code.cpg.bin`
exported 1197 nodes, 4363 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4NvPTDLbDv/export
‚úÖ CVE_2023_1193_3853_Linux_Kernel_CWE_416_Testset_db70454c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zoojpAAKvH/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zoojpAAKvH/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zoojpAAKvH/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zoojpAAKvH/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zoojpAAKvH/code.cpg.bin`
exported 2152 nodes, 10942 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zoojpAAKvH/export
‚úÖ CVE_2023_3610_4124_Linux_Kernel_CWE_416_Testset_7ca0c9d3_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bnbUBQf4sG/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bnbUBQf4sG/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bnbUBQf4sG/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bnbUBQf4sG/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bnbUBQf4sG/code.cpg.bin`
exported 1131 nodes, 3844 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bnbUBQf4sG/export
‚úÖ CVE_2017_8240_1552_Linux_Kernel_CWE_125_Testset_992d0763_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2cXWMXKrcS/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2cXWMXKrcS/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2cXWMXKrcS/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2cXWMXKrcS/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2cXWMXKrcS/code.cpg.bin`
exported 1182 nodes, 4154 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2cXWMXKrcS/export
‚úÖ CVE_2019_18814_2106_Linux_Kernel_CWE_416_Testset_cdca6700_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3e5GJtLCkS/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3e5GJtLCkS/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3e5GJtLCkS/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3e5GJtLCkS/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3e5GJtLCkS/code.cpg.bin`
exported 1642 nodes, 7853 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3e5GJtLCkS/export
‚úÖ CVE_2014_0077_427_Linux_Kernel_CWE_787_Testset_7115e615_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.27LFilTaR1/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.27LFilTaR1/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.27LFilTaR1/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.27LFilTaR1/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.27LFilTaR1/code.cpg.bin`
exported 1163 nodes, 4182 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.27LFilTaR1/export
‚úÖ CVE_2017_15274_1302_Linux_Kernel_CWE_476_Testset_2115671b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i05sWNCy3k/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i05sWNCy3k/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i05sWNCy3k/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i05sWNCy3k/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i05sWNCy3k/code.cpg.bin`
exported 1222 nodes, 4544 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i05sWNCy3k/export
‚úÖ CVE_2015_5697_777_Linux_Kernel_CWE_200_Testset_7c8b14e0_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jBZX9MLn1R/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jBZX9MLn1R/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jBZX9MLn1R/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jBZX9MLn1R/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jBZX9MLn1R/code.cpg.bin`
exported 1169 nodes, 4093 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jBZX9MLn1R/export
‚úÖ CVE_2019_15922_2031_Linux_Kernel_CWE_476_Testset_1184772f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jsNbznHduQ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jsNbznHduQ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jsNbznHduQ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jsNbznHduQ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jsNbznHduQ/code.cpg.bin`
exported 1265 nodes, 4706 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jsNbznHduQ/export
‚úÖ CVE_2016_10154_897_Linux_Kernel_CWE_119_Testset_bf9e7cfd_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FKuuEdoRwY/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FKuuEdoRwY/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FKuuEdoRwY/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FKuuEdoRwY/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FKuuEdoRwY/code.cpg.bin`
exported 1151 nodes, 3948 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FKuuEdoRwY/export
‚úÖ CVE_2013_1928_204_Linux_Kernel_CWE_200_Testset_e3e56278_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Vo6cncsYyi/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Vo6cncsYyi/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Vo6cncsYyi/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Vo6cncsYyi/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Vo6cncsYyi/code.cpg.bin`
exported 1199 nodes, 4330 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Vo6cncsYyi/export
‚úÖ CVE_2022_32250_3569_Linux_Kernel_CWE_416_Testset_d3883b37_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CPX2aw1cg2/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CPX2aw1cg2/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CPX2aw1cg2/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CPX2aw1cg2/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CPX2aw1cg2/code.cpg.bin`
exported 1062 nodes, 3406 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CPX2aw1cg2/export
‚úÖ CVE_2020_27675_2622_Linux_Kernel_CWE_362_Testset_a0a976eb_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Kb3Zx3GHX8/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Kb3Zx3GHX8/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Kb3Zx3GHX8/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Kb3Zx3GHX8/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Kb3Zx3GHX8/code.cpg.bin`
exported 1321 nodes, 5215 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Kb3Zx3GHX8/export
‚úÖ CVE_2023_5633_4275_Linux_Kernel_CWE_416_Testset_4b8e2c96_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tc5TbWG2sm/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tc5TbWG2sm/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tc5TbWG2sm/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tc5TbWG2sm/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tc5TbWG2sm/code.cpg.bin`
exported 2009 nodes, 10913 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tc5TbWG2sm/export
‚úÖ CVE_2023_3220_4005_Linux_Kernel_CWE_476_Testset_70cbcbc8_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8ZPkMkKSHA/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8ZPkMkKSHA/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8ZPkMkKSHA/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8ZPkMkKSHA/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8ZPkMkKSHA/code.cpg.bin`
exported 1492 nodes, 6128 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8ZPkMkKSHA/export
‚úÖ CVE_2013_3235_275_Linux_Kernel_CWE_200_Testset_f81ff38f_v OK
   üìä [540/586] Rate: 11.3 files/min | Success: 539
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ufPt6fAzd2/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ufPt6fAzd2/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ufPt6fAzd2/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ufPt6fAzd2/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ufPt6fAzd2/code.cpg.bin`
exported 1238 nodes, 4464 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ufPt6fAzd2/export
‚úÖ CVE_2022_2153_3413_Linux_Kernel_CWE_476_Testset_5315467e_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HUZDzaLiIc/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HUZDzaLiIc/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HUZDzaLiIc/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HUZDzaLiIc/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HUZDzaLiIc/code.cpg.bin`
exported 1115 nodes, 3721 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HUZDzaLiIc/export
‚úÖ CVE_2022_47946_3786_Linux_Kernel_CWE_416_Testset_16eb593b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0zf4vC8zsA/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0zf4vC8zsA/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0zf4vC8zsA/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0zf4vC8zsA/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0zf4vC8zsA/code.cpg.bin`
exported 1129 nodes, 3764 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0zf4vC8zsA/export
‚úÖ CVE_2020_36557_2765_Linux_Kernel_CWE_416_Testset_f257cd71_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0uwkcMrJog/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0uwkcMrJog/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0uwkcMrJog/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0uwkcMrJog/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0uwkcMrJog/code.cpg.bin`
exported 1157 nodes, 3918 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0uwkcMrJog/export
‚úÖ CVE_2019_13233_1957_Linux_Kernel_CWE_416_Testset_64370603_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R35X7IUyJ2/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R35X7IUyJ2/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R35X7IUyJ2/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R35X7IUyJ2/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R35X7IUyJ2/code.cpg.bin`
exported 1577 nodes, 7967 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R35X7IUyJ2/export
‚úÖ CVE_2021_27365_2902_Linux_Kernel_CWE_787_Testset_393c7385_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D33XY8e9A8/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D33XY8e9A8/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D33XY8e9A8/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D33XY8e9A8/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D33XY8e9A8/code.cpg.bin`
exported 1062 nodes, 3406 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D33XY8e9A8/export
‚úÖ CVE_2020_27675_2622_Linux_Kernel_CWE_416_Testset_a0a976eb_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iPLbmrI98A/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iPLbmrI98A/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iPLbmrI98A/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iPLbmrI98A/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iPLbmrI98A/code.cpg.bin`
exported 1179 nodes, 4179 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iPLbmrI98A/export
‚úÖ CVE_2018_5814_1837_Linux_Kernel_CWE_362_Testset_3adb0e5d_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.enOc5Zt4iT/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.enOc5Zt4iT/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.enOc5Zt4iT/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.enOc5Zt4iT/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.enOc5Zt4iT/code.cpg.bin`
exported 1157 nodes, 3918 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.enOc5Zt4iT/export
‚úÖ CVE_2019_13233_1957_Linux_Kernel_CWE_362_Testset_64370603_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BpYnvkLSz9/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BpYnvkLSz9/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BpYnvkLSz9/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BpYnvkLSz9/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BpYnvkLSz9/code.cpg.bin`
exported 1129 nodes, 3764 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BpYnvkLSz9/export
‚úÖ CVE_2020_36557_2765_Linux_Kernel_CWE_362_Testset_f257cd71_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NfUsL0xXwT/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NfUsL0xXwT/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NfUsL0xXwT/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NfUsL0xXwT/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NfUsL0xXwT/code.cpg.bin`
exported 1341 nodes, 5574 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NfUsL0xXwT/export
‚úÖ CVE_2021_37576_3058_Linux_Kernel_CWE_787_Testset_d26e889a_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6tcVrlD1K3/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6tcVrlD1K3/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6tcVrlD1K3/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6tcVrlD1K3/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6tcVrlD1K3/code.cpg.bin`
exported 1176 nodes, 4094 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6tcVrlD1K3/export
‚úÖ CVE_2019_13233_1958_Linux_Kernel_CWE_416_Testset_6fca8dcb_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4O9ZfdUigW/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4O9ZfdUigW/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4O9ZfdUigW/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4O9ZfdUigW/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4O9ZfdUigW/code.cpg.bin`
exported 1591 nodes, 6844 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4O9ZfdUigW/export
‚úÖ CVE_2013_7263_361_Linux_Kernel_CWE_20_Testset_0eb8484b_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ydGpB9t87p/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ydGpB9t87p/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ydGpB9t87p/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ydGpB9t87p/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ydGpB9t87p/code.cpg.bin`
exported 1085 nodes, 3530 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ydGpB9t87p/export
‚úÖ CVE_2013_6368_342_Linux_Kernel_CWE_20_Testset_20bb1f03_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ycFHnfa01b/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ycFHnfa01b/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ycFHnfa01b/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ycFHnfa01b/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ycFHnfa01b/code.cpg.bin`
exported 1337 nodes, 5550 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ycFHnfa01b/export
‚úÖ CVE_2023_5717_4288_Linux_Kernel_CWE_787_Testset_a58b6a64_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VQCAdjsnRs/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VQCAdjsnRs/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VQCAdjsnRs/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VQCAdjsnRs/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VQCAdjsnRs/code.cpg.bin`
exported 1643 nodes, 7784 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VQCAdjsnRs/export
‚úÖ CVE_2018_20510_1769_Linux_Kernel_CWE_200_Testset_30e18a1d_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V3V1Ehsy8N/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V3V1Ehsy8N/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V3V1Ehsy8N/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V3V1Ehsy8N/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V3V1Ehsy8N/code.cpg.bin`
exported 1612 nodes, 7761 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V3V1Ehsy8N/export
‚úÖ CVE_2017_13695_1278_Linux_Kernel_CWE_200_Testset_bb2bb3d2_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sFBpzMnq85/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sFBpzMnq85/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sFBpzMnq85/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sFBpzMnq85/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sFBpzMnq85/code.cpg.bin`
exported 1212 nodes, 4337 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sFBpzMnq85/export
‚úÖ CVE_2017_18509_1435_Linux_Kernel_CWE_20_Testset_fe0eec25_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iPRHIaLufN/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iPRHIaLufN/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iPRHIaLufN/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iPRHIaLufN/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iPRHIaLufN/code.cpg.bin`
exported 1154 nodes, 3927 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iPRHIaLufN/export
‚úÖ CVE_2013_2232_223_Linux_Kernel_CWE_20_Testset_327e07a4_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7ewArmTDYB/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7ewArmTDYB/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7ewArmTDYB/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7ewArmTDYB/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7ewArmTDYB/code.cpg.bin`
exported 1111 nodes, 3680 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7ewArmTDYB/export
‚úÖ CVE_2022_1976_3328_Linux_Kernel_CWE_416_Testset_782ded07_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.770kTPKbZ0/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.770kTPKbZ0/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.770kTPKbZ0/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.770kTPKbZ0/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.770kTPKbZ0/code.cpg.bin`
exported 1624 nodes, 7506 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.770kTPKbZ0/export
‚úÖ CVE_2014_2739_497_Linux_Kernel_CWE_20_Testset_c87ffddf_v OK
   üìä [560/586] Rate: 11.3 files/min | Success: 559
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iepgRmFPF3/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iepgRmFPF3/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iepgRmFPF3/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iepgRmFPF3/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iepgRmFPF3/code.cpg.bin`
exported 1298 nodes, 5037 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iepgRmFPF3/export
‚úÖ CVE_2013_4587_332_Linux_Kernel_CWE_20_Testset_f7eaf5cf_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bxQZNYoJHx/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bxQZNYoJHx/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bxQZNYoJHx/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bxQZNYoJHx/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bxQZNYoJHx/code.cpg.bin`
exported 1314 nodes, 5561 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bxQZNYoJHx/export
‚úÖ CVE_2013_0349_161_Linux_Kernel_CWE_200_Testset_24312e33_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KDJWsHIqbl/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KDJWsHIqbl/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KDJWsHIqbl/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KDJWsHIqbl/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KDJWsHIqbl/code.cpg.bin`
exported 1184 nodes, 4179 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KDJWsHIqbl/export
‚úÖ CVE_2014_0100_428_Linux_Kernel_CWE_362_Testset_b29aa279_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pXL8YJZHp2/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pXL8YJZHp2/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pXL8YJZHp2/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pXL8YJZHp2/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pXL8YJZHp2/code.cpg.bin`
exported 1103 nodes, 3607 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pXL8YJZHp2/export
‚úÖ CVE_2020_0305_2377_Linux_Kernel_CWE_416_Testset_7d5d5eef_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c1n5sP5psu/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c1n5sP5psu/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c1n5sP5psu/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c1n5sP5psu/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c1n5sP5psu/code.cpg.bin`
exported 1373 nodes, 5653 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c1n5sP5psu/export
‚úÖ CVE_2022_1011_3231_Linux_Kernel_CWE_416_Testset_2294a997_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6IqdV1CjoH/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6IqdV1CjoH/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6IqdV1CjoH/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6IqdV1CjoH/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6IqdV1CjoH/code.cpg.bin`
exported 1838 nodes, 9465 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6IqdV1CjoH/export
‚úÖ CVE_2016_3841_1004_Linux_Kernel_CWE_264_Testset_f3f58720_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IsJaaU4PtJ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IsJaaU4PtJ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IsJaaU4PtJ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IsJaaU4PtJ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IsJaaU4PtJ/code.cpg.bin`
exported 1154 nodes, 3952 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IsJaaU4PtJ/export
‚úÖ CVE_2018_19407_1744_Linux_Kernel_CWE_476_Testset_e1003552_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Bcukid8LzF/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Bcukid8LzF/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Bcukid8LzF/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Bcukid8LzF/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Bcukid8LzF/code.cpg.bin`
exported 1049 nodes, 3337 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Bcukid8LzF/export
‚úÖ CVE_2022_1976_3323_Linux_Kernel_CWE_416_Testset_aa007c0f_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eWTmPNWWNX/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eWTmPNWWNX/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eWTmPNWWNX/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eWTmPNWWNX/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eWTmPNWWNX/code.cpg.bin`
exported 1342 nodes, 5433 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eWTmPNWWNX/export
‚úÖ CVE_2015_3214_753_Linux_Kernel_CWE_119_Testset_4430f63c_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q944qfP3EX/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q944qfP3EX/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q944qfP3EX/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q944qfP3EX/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q944qfP3EX/code.cpg.bin`
exported 1007 nodes, 3112 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q944qfP3EX/export
‚úÖ CVE_2013_1943_207_Linux_Kernel_CWE_20_Testset_84425441_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V9SzLi8qcc/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V9SzLi8qcc/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V9SzLi8qcc/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V9SzLi8qcc/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V9SzLi8qcc/code.cpg.bin`
exported 1390 nodes, 5958 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V9SzLi8qcc/export
‚úÖ CVE_2017_7487_1507_Linux_Kernel_CWE_416_Testset_35c063ce_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dvh5T9rJzY/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dvh5T9rJzY/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dvh5T9rJzY/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dvh5T9rJzY/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dvh5T9rJzY/code.cpg.bin`
exported 1394 nodes, 5577 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dvh5T9rJzY/export
‚úÖ CVE_2016_9755_1162_Linux_Kernel_CWE_787_Testset_a5cc172d_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tKrVT6fG9r/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tKrVT6fG9r/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tKrVT6fG9r/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tKrVT6fG9r/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tKrVT6fG9r/code.cpg.bin`
exported 1101 nodes, 3671 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tKrVT6fG9r/export
‚úÖ CVE_2020_0429_2382_Linux_Kernel_CWE_416_Testset_f8526fe6_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nGGUNTqA9s/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nGGUNTqA9s/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nGGUNTqA9s/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nGGUNTqA9s/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nGGUNTqA9s/code.cpg.bin`
exported 1054 nodes, 3317 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nGGUNTqA9s/export
‚úÖ CVE_2023_32233_4007_Linux_Kernel_CWE_416_Testset_5cdee47e_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0Qj4SDosRW/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0Qj4SDosRW/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0Qj4SDosRW/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0Qj4SDosRW/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0Qj4SDosRW/code.cpg.bin`
exported 1321 nodes, 5122 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0Qj4SDosRW/export
‚úÖ CVE_2021_42327_3156_Linux_Kernel_CWE_787_Testset_a5840209_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dMpTP5Uhvh/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dMpTP5Uhvh/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dMpTP5Uhvh/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dMpTP5Uhvh/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dMpTP5Uhvh/code.cpg.bin`
exported 1289 nodes, 5097 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dMpTP5Uhvh/export
‚úÖ CVE_2018_9465_1870_Linux_Kernel_CWE_416_Testset_4c31402a_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cTXIZVYuDn/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cTXIZVYuDn/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cTXIZVYuDn/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cTXIZVYuDn/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cTXIZVYuDn/code.cpg.bin`
exported 1265 nodes, 4731 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cTXIZVYuDn/export
‚úÖ CVE_2016_9644_1154_Linux_Kernel_CWE_264_Testset_e4c20cf6_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yaENn42L2L/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yaENn42L2L/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yaENn42L2L/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yaENn42L2L/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yaENn42L2L/code.cpg.bin`
exported 1731 nodes, 9533 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yaENn42L2L/export
‚úÖ CVE_2022_45888_3753_Linux_Kernel_CWE_416_Testset_34c168ed_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ogMmcBxDfb/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ogMmcBxDfb/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ogMmcBxDfb/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ogMmcBxDfb/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ogMmcBxDfb/code.cpg.bin`
exported 1149 nodes, 4137 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ogMmcBxDfb/export
‚úÖ CVE_2016_3841_995_Linux_Kernel_CWE_264_Testset_238fdf5d_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R8JVNQhE9Y/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R8JVNQhE9Y/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R8JVNQhE9Y/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R8JVNQhE9Y/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R8JVNQhE9Y/code.cpg.bin`
exported 1049 nodes, 3311 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R8JVNQhE9Y/export
‚úÖ CVE_2016_7910_1109_Linux_Kernel_CWE_416_Testset_6f0e1320_v OK
   üìä [580/586] Rate: 11.3 files/min | Success: 579
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QR61dHPPcb/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QR61dHPPcb/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QR61dHPPcb/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QR61dHPPcb/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QR61dHPPcb/code.cpg.bin`
exported 1251 nodes, 4652 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QR61dHPPcb/export
‚úÖ CVE_2022_48502_3801_Linux_Kernel_CWE_125_Testset_9a9dd0bf_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FDzbThpncT/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FDzbThpncT/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FDzbThpncT/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FDzbThpncT/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FDzbThpncT/code.cpg.bin`
exported 1157 nodes, 4003 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FDzbThpncT/export
‚úÖ CVE_2019_18809_2101_Linux_Kernel_CWE_401_Testset_ecb025c6_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PDcfS3xZRo/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PDcfS3xZRo/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PDcfS3xZRo/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PDcfS3xZRo/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PDcfS3xZRo/code.cpg.bin`
exported 1152 nodes, 4006 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PDcfS3xZRo/export
‚úÖ CVE_2022_1198_3253_Linux_Kernel_CWE_416_Testset_3434f955_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8iBLw4zMXE/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8iBLw4zMXE/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8iBLw4zMXE/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8iBLw4zMXE/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8iBLw4zMXE/code.cpg.bin`
exported 1234 nodes, 4564 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8iBLw4zMXE/export
‚úÖ CVE_2017_18344_1431_Linux_Kernel_CWE_125_Testset_00a355e5_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Mx7QHu8G7d/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Mx7QHu8G7d/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Mx7QHu8G7d/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Mx7QHu8G7d/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Mx7QHu8G7d/code.cpg.bin`
exported 1374 nodes, 5639 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Mx7QHu8G7d/export
‚úÖ CVE_2023_4921_4254_Linux_Kernel_CWE_416_Testset_1a345f53_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3tmJScpj3v/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3tmJScpj3v/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3tmJScpj3v/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3tmJScpj3v/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3tmJScpj3v/code.cpg.bin`
exported 1329 nodes, 5406 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3tmJScpj3v/export
‚úÖ CVE_2023_26605_3971_Linux_Kernel_CWE_416_Testset_dec7cb3d_v OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9KslNxvMxP/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9KslNxvMxP/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9KslNxvMxP/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9KslNxvMxP/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9KslNxvMxP/code.cpg.bin`
exported 1359 nodes, 5412 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9KslNxvMxP/export
‚úÖ CVE_2023_45898_4227_Linux_Kernel_CWE_416_Testset_25334570_v OK

======================================
üéØ VULNERABLE CPG EXTRACTION RESULTS
======================================
Finished: Sat Aug 16 14:19:48 EDT 2025
Total time: 3101s (51m)
Vulnerable files processed: 586
CPG files created:      586
Success rate: 100.0%

üìä Detailed Statistics:
  Successful extractions: 1173
  Parse failures: 0
0
  Export failures: 0
0
  No export file: 0
0
  Fallback successes: 0
0

üìÅ Output: /Users/vernetemmanueladjobi/Documents/RessourcesStages/Projets/VulRAG-Hybrid-System/data/datasets/test_cpg_files/vuln
üìã Log: /Users/vernetemmanueladjobi/Documents/RessourcesStages/Projets/VulRAG-Hybrid-System/logs/extract_vuln_cpg.log

==> Extract PATCH CPGs (via copie -> *_vuln.c)
======================================
ü¶† VULNERABLE CPG EXTRACTION ONLY
======================================
Project root: /Users/vernetemmanueladjobi/Documents/RessourcesStages/Projets/VulRAG-Hybrid-System
Input: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TbNq30QWaE
Output: /Users/vernetemmanueladjobi/Documents/RessourcesStages/Projets/VulRAG-Hybrid-System/data/datasets/test_cpg_files/patch
Logs: /Users/vernetemmanueladjobi/Documents/RessourcesStages/Projets/VulRAG-Hybrid-System/logs/extract_vuln_cpg.log
Target: *_vuln.c files ONLY
Started: Sat Aug 16 14:19:51 EDT 2025

üîç Found 586 vulnerable files to process

ü¶† Processing CWE-CSV...
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wJbZesA5ms/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wJbZesA5ms/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wJbZesA5ms/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wJbZesA5ms/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wJbZesA5ms/code.cpg.bin`
exported 1097 nodes, 3634 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wJbZesA5ms/export
‚úÖ CVE_2018_7995_1855_Linux_Kernel_CWE_362_Testset_9dc498f0_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z9qe0JEgnU/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z9qe0JEgnU/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z9qe0JEgnU/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z9qe0JEgnU/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z9qe0JEgnU/code.cpg.bin`
exported 2118 nodes, 11722 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z9qe0JEgnU/export
‚úÖ CVE_2016_3841_1003_Linux_Kernel_CWE_264_Testset_f7243f8a_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sYFRd5PKpK/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sYFRd5PKpK/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sYFRd5PKpK/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sYFRd5PKpK/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sYFRd5PKpK/code.cpg.bin`
exported 1800 nodes, 8756 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sYFRd5PKpK/export
‚úÖ CVE_2012_6540_124_Linux_Kernel_CWE_200_Testset_f6bf94b6_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rDeqKzHVRl/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rDeqKzHVRl/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rDeqKzHVRl/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rDeqKzHVRl/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rDeqKzHVRl/code.cpg.bin`
exported 1040 nodes, 3298 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rDeqKzHVRl/export
‚úÖ CVE_2017_10661_1244_Linux_Kernel_CWE_416_Testset_140eb5d4_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wOWCW27G2J/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wOWCW27G2J/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wOWCW27G2J/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wOWCW27G2J/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wOWCW27G2J/code.cpg.bin`
exported 1333 nodes, 5226 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wOWCW27G2J/export
‚úÖ CVE_2014_1690_474_Linux_Kernel_CWE_200_Testset_84f2da1f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1otURhv450/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1otURhv450/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1otURhv450/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1otURhv450/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1otURhv450/code.cpg.bin`
exported 1111 nodes, 3714 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1otURhv450/export
‚úÖ CVE_2022_2318_3428_Linux_Kernel_CWE_416_Testset_7b79d026_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nMG1QUHhNJ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nMG1QUHhNJ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nMG1QUHhNJ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nMG1QUHhNJ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nMG1QUHhNJ/code.cpg.bin`
exported 1139 nodes, 3863 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nMG1QUHhNJ/export
‚úÖ CVE_2019_19083_2175_Linux_Kernel_CWE_401_Testset_ee3a2de1_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b8Y2BzC9vE/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b8Y2BzC9vE/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b8Y2BzC9vE/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b8Y2BzC9vE/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b8Y2BzC9vE/code.cpg.bin`
exported 1884 nodes, 9772 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b8Y2BzC9vE/export
‚úÖ CVE_2012_3552_87_Linux_Kernel_CWE_362_Testset_c2972ddc_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hBRG0HUKxd/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hBRG0HUKxd/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hBRG0HUKxd/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hBRG0HUKxd/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hBRG0HUKxd/code.cpg.bin`
exported 1092 nodes, 3572 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hBRG0HUKxd/export
‚úÖ CVE_2014_7284_588_Linux_Kernel_CWE_200_Testset_99c58ea3_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EKrmSudszY/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EKrmSudszY/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EKrmSudszY/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EKrmSudszY/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EKrmSudszY/code.cpg.bin`
exported 1587 nodes, 7415 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EKrmSudszY/export
‚úÖ CVE_2022_33742_3586_Linux_Kernel_CWE_200_Testset_a7013bc6_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xepD02Vt4g/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xepD02Vt4g/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xepD02Vt4g/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xepD02Vt4g/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xepD02Vt4g/code.cpg.bin`
exported 7883 nodes, 67714 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xepD02Vt4g/export
‚úÖ CVE_2013_4515_326_Linux_Kernel_CWE_200_Testset_2c2a5a2b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dDg6xtm7xz/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dDg6xtm7xz/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dDg6xtm7xz/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dDg6xtm7xz/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dDg6xtm7xz/code.cpg.bin`
exported 1085 nodes, 3515 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dDg6xtm7xz/export
‚úÖ CVE_2013_6383_351_Linux_Kernel_CWE_264_Testset_4f07d7cb_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yeP4o8QIXS/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yeP4o8QIXS/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yeP4o8QIXS/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yeP4o8QIXS/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yeP4o8QIXS/code.cpg.bin`
exported 1220 nodes, 4442 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yeP4o8QIXS/export
‚úÖ CVE_2016_4578_1028_Linux_Kernel_CWE_200_Testset_9da52f0f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XsMn7Rzknu/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XsMn7Rzknu/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XsMn7Rzknu/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XsMn7Rzknu/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XsMn7Rzknu/code.cpg.bin`
exported 1051 nodes, 3363 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XsMn7Rzknu/export
‚úÖ CVE_2020_27067_2613_Linux_Kernel_CWE_416_Testset_40222de1_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6tSuBarcZs/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6tSuBarcZs/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6tSuBarcZs/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6tSuBarcZs/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6tSuBarcZs/code.cpg.bin`
exported 1150 nodes, 3927 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6tSuBarcZs/export
‚úÖ CVE_2018_20509_1761_Linux_Kernel_CWE_200_Testset_6778223d_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xrn3ofeEbF/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xrn3ofeEbF/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xrn3ofeEbF/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xrn3ofeEbF/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xrn3ofeEbF/code.cpg.bin`
exported 1334 nodes, 5749 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xrn3ofeEbF/export
‚úÖ CVE_2019_12818_1953_Linux_Kernel_CWE_476_Testset_ae0bf1c1_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hVmVfJbBcS/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hVmVfJbBcS/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hVmVfJbBcS/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hVmVfJbBcS/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hVmVfJbBcS/code.cpg.bin`
exported 1125 nodes, 3773 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hVmVfJbBcS/export
‚úÖ CVE_2019_19768_2230_Linux_Kernel_CWE_416_Testset_bc0034ed_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BiNjIRzFNt/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BiNjIRzFNt/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BiNjIRzFNt/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BiNjIRzFNt/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BiNjIRzFNt/code.cpg.bin`
exported 1245 nodes, 4625 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BiNjIRzFNt/export
‚úÖ CVE_2018_1095_1630_Linux_Kernel_CWE_476_Testset_b62ddc27_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IGQDcFDlBq/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IGQDcFDlBq/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IGQDcFDlBq/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IGQDcFDlBq/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IGQDcFDlBq/code.cpg.bin`
exported 1244 nodes, 4618 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IGQDcFDlBq/export
‚úÖ CVE_2018_3665_1803_Linux_Kernel_CWE_200_Testset_9d821b48_p OK
   üìä [20/586] Rate: 12.2 files/min | Success: 19
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8a8HwQwe50/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8a8HwQwe50/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8a8HwQwe50/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8a8HwQwe50/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8a8HwQwe50/code.cpg.bin`
exported 1458 nodes, 6271 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8a8HwQwe50/export
‚úÖ CVE_2013_2895_253_Linux_Kernel_CWE_119_Testset_daf7c55b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dsJ5CoxxZc/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dsJ5CoxxZc/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dsJ5CoxxZc/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dsJ5CoxxZc/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dsJ5CoxxZc/code.cpg.bin`
exported 1277 nodes, 5111 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dsJ5CoxxZc/export
‚úÖ CVE_2023_3772_4134_Linux_Kernel_CWE_476_Testset_d67522fb_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pRu4yNurhj/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pRu4yNurhj/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pRu4yNurhj/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pRu4yNurhj/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pRu4yNurhj/code.cpg.bin`
exported 1408 nodes, 5823 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pRu4yNurhj/export
‚úÖ CVE_2021_20194_2856_Linux_Kernel_CWE_20_Testset_3f854074_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ieB1V0Hh0m/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ieB1V0Hh0m/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ieB1V0Hh0m/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ieB1V0Hh0m/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ieB1V0Hh0m/code.cpg.bin`
exported 1621 nodes, 7660 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ieB1V0Hh0m/export
‚úÖ CVE_2011_4915_37_Linux_Kernel_CWE_200_Testset_b7c7ce2c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5OuGTFW3Yp/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5OuGTFW3Yp/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5OuGTFW3Yp/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5OuGTFW3Yp/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5OuGTFW3Yp/code.cpg.bin`
exported 1187 nodes, 4331 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5OuGTFW3Yp/export
‚úÖ CVE_2019_19069_2150_Linux_Kernel_CWE_401_Testset_aa661d21_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IQiuBD7WUH/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IQiuBD7WUH/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IQiuBD7WUH/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IQiuBD7WUH/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IQiuBD7WUH/code.cpg.bin`
exported 1397 nodes, 5946 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IQiuBD7WUH/export
‚úÖ CVE_2017_15265_1301_Linux_Kernel_CWE_362_Testset_9aae8e23_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KBZnzJTV1l/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KBZnzJTV1l/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KBZnzJTV1l/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KBZnzJTV1l/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KBZnzJTV1l/code.cpg.bin`
exported 3000 nodes, 19697 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KBZnzJTV1l/export
‚úÖ CVE_2013_4514_324_Linux_Kernel_CWE_119_Testset_c98a539b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Hmv7eQyHdw/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Hmv7eQyHdw/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Hmv7eQyHdw/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Hmv7eQyHdw/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Hmv7eQyHdw/code.cpg.bin`
exported 1521 nodes, 6913 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Hmv7eQyHdw/export
‚úÖ CVE_2021_39686_3101_Linux_Kernel_CWE_362_Testset_0688b620_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zw0b9FXrsj/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zw0b9FXrsj/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zw0b9FXrsj/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zw0b9FXrsj/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zw0b9FXrsj/code.cpg.bin`
exported 1589 nodes, 7532 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zw0b9FXrsj/export
‚úÖ CVE_2019_16232_2045_Linux_Kernel_CWE_476_Testset_294e302a_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z73B15uAQQ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z73B15uAQQ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z73B15uAQQ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z73B15uAQQ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z73B15uAQQ/code.cpg.bin`
exported 1268 nodes, 5011 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z73B15uAQQ/export
‚úÖ CVE_2017_13166_1267_Linux_Kernel_CWE_787_Testset_dc172d32_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oCj87dmGit/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oCj87dmGit/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oCj87dmGit/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oCj87dmGit/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oCj87dmGit/code.cpg.bin`
exported 1121 nodes, 3743 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oCj87dmGit/export
‚úÖ CVE_2014_0203_463_Linux_Kernel_CWE_416_Testset_2523e8fc_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1qQseLP5lh/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1qQseLP5lh/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1qQseLP5lh/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1qQseLP5lh/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1qQseLP5lh/code.cpg.bin`
exported 1749 nodes, 8528 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1qQseLP5lh/export
‚úÖ CVE_2012_3552_90_Linux_Kernel_CWE_362_Testset_194ffed4_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ofApkka7XM/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ofApkka7XM/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ofApkka7XM/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ofApkka7XM/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ofApkka7XM/code.cpg.bin`
exported 1659 nodes, 7998 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ofApkka7XM/export
‚úÖ CVE_2022_42896_3739_Linux_Kernel_CWE_416_Testset_aad6c8d2_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.osS14AvGOY/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.osS14AvGOY/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.osS14AvGOY/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.osS14AvGOY/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.osS14AvGOY/code.cpg.bin`
exported 1430 nodes, 5908 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.osS14AvGOY/export
‚úÖ CVE_2022_22942_3417_Linux_Kernel_CWE_416_Testset_d5235d5e_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NxLug31hai/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NxLug31hai/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NxLug31hai/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NxLug31hai/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NxLug31hai/code.cpg.bin`
exported 1113 nodes, 3759 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NxLug31hai/export
‚úÖ CVE_2019_15098_1988_Linux_Kernel_CWE_476_Testset_a1791f69_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xNlW56UHwR/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xNlW56UHwR/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xNlW56UHwR/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xNlW56UHwR/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xNlW56UHwR/code.cpg.bin`
exported 1098 nodes, 3620 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xNlW56UHwR/export
‚úÖ CVE_2023_3863_4148_Linux_Kernel_CWE_416_Testset_0ed0eb1f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sMHLKwtiQQ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sMHLKwtiQQ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sMHLKwtiQQ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sMHLKwtiQQ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sMHLKwtiQQ/code.cpg.bin`
exported 1472 nodes, 6316 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sMHLKwtiQQ/export
‚úÖ CVE_2019_19063_2144_Linux_Kernel_CWE_401_Testset_5ed18888_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LhJJ6JkJtk/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LhJJ6JkJtk/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LhJJ6JkJtk/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LhJJ6JkJtk/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LhJJ6JkJtk/code.cpg.bin`
exported 1452 nodes, 5987 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LhJJ6JkJtk/export
‚úÖ CVE_2014_0181_441_Linux_Kernel_CWE_264_Testset_5d46c69a_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dHXZvH4zLZ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dHXZvH4zLZ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dHXZvH4zLZ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dHXZvH4zLZ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dHXZvH4zLZ/code.cpg.bin`
exported 1332 nodes, 5080 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dHXZvH4zLZ/export
‚úÖ CVE_2023_32250_4024_Linux_Kernel_CWE_362_Testset_ca2480eb_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ki2UKEF6Zk/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ki2UKEF6Zk/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ki2UKEF6Zk/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ki2UKEF6Zk/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ki2UKEF6Zk/code.cpg.bin`
exported 1062 nodes, 3408 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ki2UKEF6Zk/export
‚úÖ CVE_2017_15116_1292_Linux_Kernel_CWE_476_Testset_9532622c_p OK
   üìä [40/586] Rate: 11.3 files/min | Success: 39
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9KL1lRoKY1/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9KL1lRoKY1/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9KL1lRoKY1/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9KL1lRoKY1/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9KL1lRoKY1/code.cpg.bin`
exported 1077 nodes, 3460 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9KL1lRoKY1/export
‚úÖ CVE_2017_12146_1255_Linux_Kernel_CWE_362_Testset_c156efe9_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vj9mlQSxfv/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vj9mlQSxfv/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vj9mlQSxfv/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vj9mlQSxfv/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vj9mlQSxfv/code.cpg.bin`
exported 1057 nodes, 3419 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vj9mlQSxfv/export
‚úÖ CVE_2018_9465_1868_Linux_Kernel_CWE_416_Testset_9b64d4d4_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0k4IvR5duD/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0k4IvR5duD/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0k4IvR5duD/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0k4IvR5duD/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0k4IvR5duD/code.cpg.bin`
exported 1453 nodes, 6432 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0k4IvR5duD/export
‚úÖ CVE_2007_6761_4_Linux_Kernel_CWE_119_Testset_fa015cb2_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fmCHClc78h/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fmCHClc78h/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fmCHClc78h/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fmCHClc78h/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fmCHClc78h/code.cpg.bin`
exported 1723 nodes, 8335 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fmCHClc78h/export
‚úÖ CVE_2017_18017_1387_Linux_Kernel_CWE_416_Testset_72a6a33e_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DcPQrD8lIZ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DcPQrD8lIZ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DcPQrD8lIZ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DcPQrD8lIZ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DcPQrD8lIZ/code.cpg.bin`
exported 1511 nodes, 6884 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DcPQrD8lIZ/export
‚úÖ CVE_2019_19036_2121_Linux_Kernel_CWE_476_Testset_51e4579a_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ayBwSI3f8g/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ayBwSI3f8g/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ayBwSI3f8g/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ayBwSI3f8g/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ayBwSI3f8g/code.cpg.bin`
exported 1027 nodes, 3196 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ayBwSI3f8g/export
‚úÖ CVE_2019_19815_2253_Linux_Kernel_CWE_476_Testset_98824a5b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YQ8cJFQnU0/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YQ8cJFQnU0/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YQ8cJFQnU0/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YQ8cJFQnU0/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YQ8cJFQnU0/code.cpg.bin`
exported 1248 nodes, 4625 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YQ8cJFQnU0/export
‚úÖ CVE_2020_25212_2578_Linux_Kernel_CWE_787_Testset_ee3d9d5e_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PK8GS3taNa/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PK8GS3taNa/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PK8GS3taNa/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PK8GS3taNa/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PK8GS3taNa/code.cpg.bin`
exported 1410 nodes, 5852 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PK8GS3taNa/export
‚úÖ CVE_2014_0205_465_Linux_Kernel_CWE_119_Testset_c52e8f74_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.f60fEp4NHO/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.f60fEp4NHO/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.f60fEp4NHO/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.f60fEp4NHO/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.f60fEp4NHO/code.cpg.bin`
exported 1598 nodes, 7138 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.f60fEp4NHO/export
‚úÖ CVE_2019_19080_2163_Linux_Kernel_CWE_401_Testset_f47fc2fa_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K9LnIbIvJi/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K9LnIbIvJi/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K9LnIbIvJi/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K9LnIbIvJi/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K9LnIbIvJi/code.cpg.bin`
exported 1241 nodes, 4808 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.K9LnIbIvJi/export
‚úÖ CVE_2023_3111_3998_Linux_Kernel_CWE_416_Testset_7c017226_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uFgO5S7XJ3/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uFgO5S7XJ3/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uFgO5S7XJ3/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uFgO5S7XJ3/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uFgO5S7XJ3/code.cpg.bin`
exported 1063 nodes, 3411 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uFgO5S7XJ3/export
‚úÖ CVE_2017_16911_1345_Linux_Kernel_CWE_200_Testset_da8785c5_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bgqPw2xbtm/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bgqPw2xbtm/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bgqPw2xbtm/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bgqPw2xbtm/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bgqPw2xbtm/code.cpg.bin`
exported 2345 nodes, 13314 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bgqPw2xbtm/export
‚úÖ CVE_2021_4203_3146_Linux_Kernel_CWE_362_Testset_03deb496_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d3oq2C0kna/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d3oq2C0kna/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d3oq2C0kna/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d3oq2C0kna/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d3oq2C0kna/code.cpg.bin`
exported 1382 nodes, 5512 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d3oq2C0kna/export
‚úÖ CVE_2023_39194_4182_Linux_Kernel_CWE_125_Testset_f1ea59f1_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.B9OgCS9VA9/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.B9OgCS9VA9/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.B9OgCS9VA9/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.B9OgCS9VA9/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.B9OgCS9VA9/code.cpg.bin`
exported 1488 nodes, 6285 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.B9OgCS9VA9/export
‚úÖ CVE_2015_8569_833_Linux_Kernel_CWE_200_Testset_a3a24224_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5yzRwHeL6f/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5yzRwHeL6f/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5yzRwHeL6f/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5yzRwHeL6f/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5yzRwHeL6f/code.cpg.bin`
exported 1093 nodes, 3598 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5yzRwHeL6f/export
‚úÖ CVE_2021_4093_3131_Linux_Kernel_CWE_787_Testset_32247baf_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.akJy9ZG2jk/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.akJy9ZG2jk/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.akJy9ZG2jk/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.akJy9ZG2jk/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.akJy9ZG2jk/code.cpg.bin`
exported 1499 nodes, 6208 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.akJy9ZG2jk/export
‚úÖ CVE_2018_1093_1626_Linux_Kernel_CWE_125_Testset_4b31b229_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IIzSaq2GRW/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IIzSaq2GRW/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IIzSaq2GRW/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IIzSaq2GRW/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IIzSaq2GRW/code.cpg.bin`
exported 1491 nodes, 6637 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IIzSaq2GRW/export
‚úÖ CVE_2013_2888_245_Linux_Kernel_CWE_20_Testset_c53fd6ee_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IyuFdYpLky/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IyuFdYpLky/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IyuFdYpLky/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IyuFdYpLky/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IyuFdYpLky/code.cpg.bin`
exported 1163 nodes, 4206 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IyuFdYpLky/export
‚úÖ CVE_2022_23222_3460_Linux_Kernel_CWE_476_Testset_6dfcabcd_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yABHM8zopI/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yABHM8zopI/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yABHM8zopI/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yABHM8zopI/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yABHM8zopI/code.cpg.bin`
exported 2062 nodes, 11343 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yABHM8zopI/export
‚úÖ CVE_2022_4842_3788_Linux_Kernel_CWE_476_Testset_49aec8e9_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LtMqPPPhT6/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LtMqPPPhT6/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LtMqPPPhT6/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LtMqPPPhT6/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LtMqPPPhT6/code.cpg.bin`
exported 1776 nodes, 9448 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LtMqPPPhT6/export
‚úÖ CVE_2022_1048_3245_Linux_Kernel_CWE_416_Testset_f258371a_p OK
   üìä [60/586] Rate: 10.9 files/min | Success: 59
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sQsFUWCiSx/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sQsFUWCiSx/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sQsFUWCiSx/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sQsFUWCiSx/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sQsFUWCiSx/code.cpg.bin`
exported 1091 nodes, 3571 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sQsFUWCiSx/export
‚úÖ CVE_2022_20369_3349_Linux_Kernel_CWE_787_Testset_dc836f10_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wVBrAL9QVW/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wVBrAL9QVW/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wVBrAL9QVW/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wVBrAL9QVW/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wVBrAL9QVW/code.cpg.bin`
exported 1355 nodes, 5213 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wVBrAL9QVW/export
‚úÖ CVE_2014_0181_453_Linux_Kernel_CWE_264_Testset_84a88d06_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dK7pwwGzu3/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dK7pwwGzu3/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dK7pwwGzu3/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dK7pwwGzu3/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dK7pwwGzu3/code.cpg.bin`
exported 2297 nodes, 17691 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dK7pwwGzu3/export
‚úÖ CVE_2016_8630_1119_Linux_Kernel_CWE_476_Testset_9fe70ded_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MEnQnZRFdO/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MEnQnZRFdO/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MEnQnZRFdO/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MEnQnZRFdO/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MEnQnZRFdO/code.cpg.bin`
exported 1125 nodes, 3893 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MEnQnZRFdO/export
‚úÖ CVE_2023_0030_3806_Linux_Kernel_CWE_416_Testset_4d2fb79c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y5uaFEWYJL/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y5uaFEWYJL/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y5uaFEWYJL/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y5uaFEWYJL/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y5uaFEWYJL/code.cpg.bin`
exported 3174 nodes, 19319 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y5uaFEWYJL/export
‚úÖ CVE_2020_36558_2767_Linux_Kernel_CWE_362_Testset_fe01b5b7_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qXnui66WjZ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qXnui66WjZ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qXnui66WjZ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qXnui66WjZ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qXnui66WjZ/code.cpg.bin`
exported 1617 nodes, 8170 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qXnui66WjZ/export
‚úÖ CVE_2020_11608_2427_Linux_Kernel_CWE_476_Testset_24196b76_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZFEAYTHYCj/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZFEAYTHYCj/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZFEAYTHYCj/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZFEAYTHYCj/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZFEAYTHYCj/code.cpg.bin`
exported 1404 nodes, 6758 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZFEAYTHYCj/export
‚úÖ CVE_2020_14381_2519_Linux_Kernel_CWE_416_Testset_e5839f36_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DINLblClAJ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DINLblClAJ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DINLblClAJ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DINLblClAJ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DINLblClAJ/code.cpg.bin`
exported 1440 nodes, 6625 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DINLblClAJ/export
‚úÖ CVE_2021_28691_2916_Linux_Kernel_CWE_416_Testset_2aac4bc3_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rHTOq00Sdm/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rHTOq00Sdm/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rHTOq00Sdm/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rHTOq00Sdm/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rHTOq00Sdm/code.cpg.bin`
exported 3407 nodes, 24393 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rHTOq00Sdm/export
‚úÖ CVE_2017_18549_1437_Linux_Kernel_CWE_200_Testset_beb333d5_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.71VZmb5oZe/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.71VZmb5oZe/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.71VZmb5oZe/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.71VZmb5oZe/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.71VZmb5oZe/code.cpg.bin`
exported 1120 nodes, 3760 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.71VZmb5oZe/export
‚úÖ CVE_2018_20836_1782_Linux_Kernel_CWE_362_Testset_198e9554_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QNomQz9Xud/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QNomQz9Xud/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QNomQz9Xud/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QNomQz9Xud/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QNomQz9Xud/code.cpg.bin`
exported 1147 nodes, 3955 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QNomQz9Xud/export
‚úÖ CVE_2017_8067_1541_Linux_Kernel_CWE_787_Testset_ca6ea128_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QX7kSlMiX1/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QX7kSlMiX1/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QX7kSlMiX1/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QX7kSlMiX1/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QX7kSlMiX1/code.cpg.bin`
exported 1785 nodes, 9423 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QX7kSlMiX1/export
‚úÖ CVE_2019_19072_2153_Linux_Kernel_CWE_401_Testset_d60ed076_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fT8Iy72HJ8/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fT8Iy72HJ8/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fT8Iy72HJ8/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fT8Iy72HJ8/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fT8Iy72HJ8/code.cpg.bin`
exported 1096 nodes, 3691 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fT8Iy72HJ8/export
‚úÖ CVE_2017_13305_1276_Linux_Kernel_CWE_125_Testset_b062c0f9_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nd3PLJiIZJ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nd3PLJiIZJ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nd3PLJiIZJ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nd3PLJiIZJ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nd3PLJiIZJ/code.cpg.bin`
exported 3176 nodes, 23348 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nd3PLJiIZJ/export
‚úÖ CVE_2023_26544_3968_Linux_Kernel_CWE_416_Testset_2f3076bf_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LXDcuapXFB/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LXDcuapXFB/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LXDcuapXFB/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LXDcuapXFB/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LXDcuapXFB/code.cpg.bin`
exported 1096 nodes, 3664 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LXDcuapXFB/export
‚úÖ CVE_2020_10690_2399_Linux_Kernel_CWE_416_Testset_2a02b95c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VMF5p7aRNb/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VMF5p7aRNb/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VMF5p7aRNb/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VMF5p7aRNb/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VMF5p7aRNb/code.cpg.bin`
exported 1220 nodes, 4529 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VMF5p7aRNb/export
‚úÖ CVE_2020_25639_2588_Linux_Kernel_CWE_476_Testset_a3f81464_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YyG2TVYyOC/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YyG2TVYyOC/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YyG2TVYyOC/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YyG2TVYyOC/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YyG2TVYyOC/code.cpg.bin`
exported 2432 nodes, 14926 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YyG2TVYyOC/export
‚úÖ CVE_2020_14386_2524_Linux_Kernel_CWE_787_Testset_6d712e68_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.om5IiZYiE7/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.om5IiZYiE7/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.om5IiZYiE7/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.om5IiZYiE7/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.om5IiZYiE7/code.cpg.bin`
exported 1987 nodes, 11230 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.om5IiZYiE7/export
‚úÖ CVE_2023_6622_4307_Linux_Kernel_CWE_476_Testset_332404a7_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V1kgEGIBRY/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V1kgEGIBRY/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V1kgEGIBRY/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V1kgEGIBRY/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V1kgEGIBRY/code.cpg.bin`
exported 1215 nodes, 4395 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V1kgEGIBRY/export
‚úÖ CVE_2020_36387_2757_Linux_Kernel_CWE_416_Testset_a47ac8aa_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iMf7PJpTtR/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iMf7PJpTtR/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iMf7PJpTtR/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iMf7PJpTtR/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iMf7PJpTtR/code.cpg.bin`
exported 1147 nodes, 3871 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iMf7PJpTtR/export
‚úÖ CVE_2013_4299_293_Linux_Kernel_CWE_264_Testset_d66788a0_p OK
   üìä [80/586] Rate: 10.7 files/min | Success: 79
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wM1IjpuYDF/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wM1IjpuYDF/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wM1IjpuYDF/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wM1IjpuYDF/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wM1IjpuYDF/code.cpg.bin`
exported 1333 nodes, 5520 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wM1IjpuYDF/export
‚úÖ CVE_2022_20409_3351_Linux_Kernel_CWE_416_Testset_8adb6151_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZU3lpO48BD/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZU3lpO48BD/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZU3lpO48BD/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZU3lpO48BD/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZU3lpO48BD/code.cpg.bin`
exported 1043 nodes, 3289 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZU3lpO48BD/export
‚úÖ CVE_2020_12364_2468_Linux_Kernel_CWE_476_Testset_787b7839_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2k2619Vyvh/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2k2619Vyvh/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2k2619Vyvh/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2k2619Vyvh/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2k2619Vyvh/code.cpg.bin`
exported 2029 nodes, 11396 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2k2619Vyvh/export
‚úÖ CVE_2022_47942_3774_Linux_Kernel_CWE_787_Testset_d22d0704_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8JEZMivjFt/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8JEZMivjFt/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8JEZMivjFt/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8JEZMivjFt/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8JEZMivjFt/code.cpg.bin`
exported 1060 nodes, 3396 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8JEZMivjFt/export
‚úÖ CVE_2023_35823_4109_Linux_Kernel_CWE_416_Testset_a2435a0d_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WyxL9KAjka/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WyxL9KAjka/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WyxL9KAjka/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WyxL9KAjka/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WyxL9KAjka/code.cpg.bin`
exported 1386 nodes, 5375 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WyxL9KAjka/export
‚úÖ CVE_2023_4611_4235_Linux_Kernel_CWE_416_Testset_3505cb70_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.M9Fn6cPBMM/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.M9Fn6cPBMM/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.M9Fn6cPBMM/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.M9Fn6cPBMM/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.M9Fn6cPBMM/code.cpg.bin`
exported 1142 nodes, 4017 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.M9Fn6cPBMM/export
‚úÖ CVE_2021_4203_3149_Linux_Kernel_CWE_362_Testset_36e18dc2_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.h5INLPViDb/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.h5INLPViDb/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.h5INLPViDb/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.h5INLPViDb/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.h5INLPViDb/code.cpg.bin`
exported 1273 nodes, 4659 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.h5INLPViDb/export
‚úÖ CVE_2014_7825_589_Linux_Kernel_CWE_125_Testset_0679f7f5_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2Zhh7W2BxE/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2Zhh7W2BxE/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2Zhh7W2BxE/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2Zhh7W2BxE/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2Zhh7W2BxE/code.cpg.bin`
exported 1013 nodes, 3128 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2Zhh7W2BxE/export
‚úÖ CVE_2023_6610_4306_Linux_Kernel_CWE_125_Testset_4bcc7cd8_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5n2L5zpjeK/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5n2L5zpjeK/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5n2L5zpjeK/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5n2L5zpjeK/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5n2L5zpjeK/code.cpg.bin`
exported 1213 nodes, 4372 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5n2L5zpjeK/export
‚úÖ CVE_2022_38457_3681_Linux_Kernel_CWE_416_Testset_69140601_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jf1cRDyLhI/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jf1cRDyLhI/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jf1cRDyLhI/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jf1cRDyLhI/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jf1cRDyLhI/code.cpg.bin`
exported 1095 nodes, 3655 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jf1cRDyLhI/export
‚úÖ CVE_2023_0240_3817_Linux_Kernel_CWE_416_Testset_43790d85_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GWwX3VZ1M2/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GWwX3VZ1M2/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GWwX3VZ1M2/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GWwX3VZ1M2/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GWwX3VZ1M2/code.cpg.bin`
exported 1354 nodes, 5611 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GWwX3VZ1M2/export
‚úÖ CVE_2017_16911_1348_Linux_Kernel_CWE_200_Testset_a6c94deb_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8jatAwLb4z/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8jatAwLb4z/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8jatAwLb4z/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8jatAwLb4z/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8jatAwLb4z/code.cpg.bin`
exported 1190 nodes, 4381 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8jatAwLb4z/export
‚úÖ CVE_2022_3523_3617_Linux_Kernel_CWE_416_Testset_7501f90b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.p537h25Rmt/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.p537h25Rmt/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.p537h25Rmt/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.p537h25Rmt/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.p537h25Rmt/code.cpg.bin`
exported 1571 nodes, 6991 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.p537h25Rmt/export
‚úÖ CVE_2016_4998_1050_Linux_Kernel_CWE_119_Testset_40e77412_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dyAAESUks5/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dyAAESUks5/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dyAAESUks5/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dyAAESUks5/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dyAAESUks5/code.cpg.bin`
exported 1068 nodes, 3491 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dyAAESUks5/export
‚úÖ CVE_2022_24122_3471_Linux_Kernel_CWE_416_Testset_16f9f288_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z5JYspEpDY/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z5JYspEpDY/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z5JYspEpDY/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z5JYspEpDY/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z5JYspEpDY/code.cpg.bin`
exported 1268 nodes, 4654 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z5JYspEpDY/export
‚úÖ CVE_2020_36694_2775_Linux_Kernel_CWE_416_Testset_a4ae9fab_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.O4tMkqbyjB/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.O4tMkqbyjB/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.O4tMkqbyjB/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.O4tMkqbyjB/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.O4tMkqbyjB/code.cpg.bin`
exported 1184 nodes, 4266 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.O4tMkqbyjB/export
‚úÖ CVE_2017_17862_1382_Linux_Kernel_CWE_20_Testset_bd538c2a_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LCEWX525Vq/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LCEWX525Vq/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LCEWX525Vq/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LCEWX525Vq/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LCEWX525Vq/code.cpg.bin`
exported 1510 nodes, 6899 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LCEWX525Vq/export
‚úÖ CVE_2022_41222_3713_Linux_Kernel_CWE_416_Testset_5667d2c0_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FZ91kPJnOg/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FZ91kPJnOg/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FZ91kPJnOg/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FZ91kPJnOg/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FZ91kPJnOg/code.cpg.bin`
exported 1115 nodes, 3800 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FZ91kPJnOg/export
‚úÖ CVE_2021_3655_3033_Linux_Kernel_CWE_20_Testset_32ee73ff_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.s7FM0nwlZa/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.s7FM0nwlZa/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.s7FM0nwlZa/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.s7FM0nwlZa/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.s7FM0nwlZa/code.cpg.bin`
exported 1071 nodes, 3492 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.s7FM0nwlZa/export
‚úÖ CVE_2020_27835_2652_Linux_Kernel_CWE_416_Testset_30dbd65f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TGFWh4RfLy/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TGFWh4RfLy/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TGFWh4RfLy/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TGFWh4RfLy/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TGFWh4RfLy/code.cpg.bin`
exported 1112 nodes, 3702 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TGFWh4RfLy/export
‚úÖ CVE_2016_6786_1078_Linux_Kernel_CWE_264_Testset_c7fab331_p OK
   üìä [100/586] Rate: 10.9 files/min | Success: 99
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KX2xF0ZLo4/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KX2xF0ZLo4/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KX2xF0ZLo4/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KX2xF0ZLo4/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KX2xF0ZLo4/code.cpg.bin`
exported 1354 nodes, 5267 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KX2xF0ZLo4/export
‚úÖ CVE_2013_1772_171_Linux_Kernel_CWE_119_Testset_4abb267b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F7PYCF6vO5/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F7PYCF6vO5/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F7PYCF6vO5/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F7PYCF6vO5/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F7PYCF6vO5/code.cpg.bin`
exported 1452 nodes, 6412 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F7PYCF6vO5/export
‚úÖ CVE_2021_38208_3085_Linux_Kernel_CWE_476_Testset_8d4453bb_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U2y34akC9g/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U2y34akC9g/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U2y34akC9g/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U2y34akC9g/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U2y34akC9g/code.cpg.bin`
exported 1259 nodes, 4641 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U2y34akC9g/export
‚úÖ CVE_2023_42754_4207_Linux_Kernel_CWE_476_Testset_b213ba26_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rhCA8dZICw/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rhCA8dZICw/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rhCA8dZICw/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rhCA8dZICw/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rhCA8dZICw/code.cpg.bin`
exported 1206 nodes, 4332 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rhCA8dZICw/export
‚úÖ CVE_2019_15220_2004_Linux_Kernel_CWE_416_Testset_b7b20d4e_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oMvvg89sq5/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oMvvg89sq5/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oMvvg89sq5/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oMvvg89sq5/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oMvvg89sq5/code.cpg.bin`
exported 1341 nodes, 5272 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oMvvg89sq5/export
‚úÖ CVE_2020_29374_2670_Linux_Kernel_CWE_362_Testset_ec0e2218_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Pzf7OfCeIr/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Pzf7OfCeIr/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Pzf7OfCeIr/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Pzf7OfCeIr/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Pzf7OfCeIr/code.cpg.bin`
exported 1395 nodes, 6094 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Pzf7OfCeIr/export
‚úÖ CVE_2020_0030_2372_Linux_Kernel_CWE_416_Testset_79cc2b84_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DSbSPAIJaV/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DSbSPAIJaV/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DSbSPAIJaV/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DSbSPAIJaV/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DSbSPAIJaV/code.cpg.bin`
exported 1536 nodes, 7089 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DSbSPAIJaV/export
‚úÖ CVE_2017_16532_1319_Linux_Kernel_CWE_476_Testset_c16b6c80_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eJRnlxisbm/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eJRnlxisbm/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eJRnlxisbm/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eJRnlxisbm/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eJRnlxisbm/code.cpg.bin`
exported 1137 nodes, 3834 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eJRnlxisbm/export
‚úÖ CVE_2020_0427_2379_Linux_Kernel_CWE_125_Testset_f60a832c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vnmr0JVaHh/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vnmr0JVaHh/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vnmr0JVaHh/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vnmr0JVaHh/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vnmr0JVaHh/code.cpg.bin`
exported 1238 nodes, 4436 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vnmr0JVaHh/export
‚úÖ CVE_2015_8767_842_Linux_Kernel_CWE_362_Testset_0a4cd68b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xoGLCdBMNd/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xoGLCdBMNd/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xoGLCdBMNd/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xoGLCdBMNd/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xoGLCdBMNd/code.cpg.bin`
exported 1955 nodes, 9889 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xoGLCdBMNd/export
‚úÖ CVE_2012_6657_136_Linux_Kernel_CWE_264_Testset_793b4062_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cBKVFeYhhZ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cBKVFeYhhZ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cBKVFeYhhZ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cBKVFeYhhZ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cBKVFeYhhZ/code.cpg.bin`
exported 1221 nodes, 4441 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cBKVFeYhhZ/export
‚úÖ CVE_2013_7339_414_Linux_Kernel_CWE_476_Testset_eaf179ed_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eXSIYDjsCa/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eXSIYDjsCa/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eXSIYDjsCa/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eXSIYDjsCa/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eXSIYDjsCa/code.cpg.bin`
exported 1157 nodes, 4089 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eXSIYDjsCa/export
‚úÖ CVE_2022_3534_3629_Linux_Kernel_CWE_416_Testset_7cc7321b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y7zINawljK/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y7zINawljK/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y7zINawljK/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y7zINawljK/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y7zINawljK/code.cpg.bin`
exported 1288 nodes, 5019 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y7zINawljK/export
‚úÖ CVE_2018_20669_1777_Linux_Kernel_CWE_20_Testset_5069b2b8_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xmmCFS8yCt/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xmmCFS8yCt/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xmmCFS8yCt/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xmmCFS8yCt/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xmmCFS8yCt/code.cpg.bin`
exported 1255 nodes, 4616 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xmmCFS8yCt/export
‚úÖ CVE_2020_11609_2431_Linux_Kernel_CWE_476_Testset_da620d7c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1JDEYLBg4w/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1JDEYLBg4w/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1JDEYLBg4w/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1JDEYLBg4w/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1JDEYLBg4w/code.cpg.bin`
exported 1140 nodes, 3982 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1JDEYLBg4w/export
‚úÖ CVE_2018_14613_1682_Linux_Kernel_CWE_476_Testset_f97de88d_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xmg46n84QY/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xmg46n84QY/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xmg46n84QY/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xmg46n84QY/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xmg46n84QY/code.cpg.bin`
exported 2847 nodes, 19027 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xmg46n84QY/export
‚úÖ CVE_2013_6380_347_Linux_Kernel_CWE_20_Testset_bcfc10e4_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F4ohFg2r8d/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F4ohFg2r8d/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F4ohFg2r8d/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F4ohFg2r8d/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F4ohFg2r8d/code.cpg.bin`
exported 1359 nodes, 5449 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F4ohFg2r8d/export
‚úÖ CVE_2016_4997_1041_Linux_Kernel_CWE_264_Testset_ef9f17f2_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mbQ0Rsfhz3/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mbQ0Rsfhz3/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mbQ0Rsfhz3/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mbQ0Rsfhz3/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mbQ0Rsfhz3/code.cpg.bin`
exported 1378 nodes, 5756 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mbQ0Rsfhz3/export
‚úÖ CVE_2023_3389_4076_Linux_Kernel_CWE_416_Testset_97e14573_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jbmqjrqGgo/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jbmqjrqGgo/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jbmqjrqGgo/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jbmqjrqGgo/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jbmqjrqGgo/code.cpg.bin`
exported 1248 nodes, 4612 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jbmqjrqGgo/export
‚úÖ CVE_2022_3630_3665_Linux_Kernel_CWE_401_Testset_ea3bf950_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.N0hudqsjN3/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.N0hudqsjN3/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.N0hudqsjN3/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.N0hudqsjN3/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.N0hudqsjN3/code.cpg.bin`
exported 1340 nodes, 5193 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.N0hudqsjN3/export
‚úÖ CVE_2014_0181_454_Linux_Kernel_CWE_264_Testset_9caf6652_p OK
   üìä [120/586] Rate: 11.0 files/min | Success: 119
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JlJPcHueRl/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JlJPcHueRl/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JlJPcHueRl/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JlJPcHueRl/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JlJPcHueRl/code.cpg.bin`
exported 1139 nodes, 3863 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JlJPcHueRl/export
‚úÖ CVE_2019_19083_2176_Linux_Kernel_CWE_401_Testset_59cc5a75_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RhJnPEXLZD/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RhJnPEXLZD/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RhJnPEXLZD/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RhJnPEXLZD/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RhJnPEXLZD/code.cpg.bin`
exported 1494 nodes, 6528 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RhJnPEXLZD/export
‚úÖ CVE_2014_3181_511_Linux_Kernel_CWE_119_Testset_1ee4ded3_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mZDT4Ikt1C/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mZDT4Ikt1C/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mZDT4Ikt1C/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mZDT4Ikt1C/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mZDT4Ikt1C/code.cpg.bin`
exported 1512 nodes, 6967 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mZDT4Ikt1C/export
‚úÖ CVE_2019_12819_1954_Linux_Kernel_CWE_416_Testset_a4c47f0c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DIR1YmMpNq/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DIR1YmMpNq/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DIR1YmMpNq/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DIR1YmMpNq/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DIR1YmMpNq/code.cpg.bin`
exported 1569 nodes, 7239 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DIR1YmMpNq/export
‚úÖ CVE_2012_4508_108_Linux_Kernel_CWE_362_Testset_e6fbbfd1_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4aVdMBokRa/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4aVdMBokRa/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4aVdMBokRa/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4aVdMBokRa/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4aVdMBokRa/code.cpg.bin`
exported 1185 nodes, 4195 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4aVdMBokRa/export
‚úÖ CVE_2023_33951_4078_Linux_Kernel_CWE_362_Testset_997ff364_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gkigqpyfka/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gkigqpyfka/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gkigqpyfka/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gkigqpyfka/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gkigqpyfka/code.cpg.bin`
exported 1126 nodes, 3863 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gkigqpyfka/export
‚úÖ CVE_2012_3364_55_Linux_Kernel_CWE_119_Testset_e60878e3_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.08lLUj4roo/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.08lLUj4roo/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.08lLUj4roo/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.08lLUj4roo/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.08lLUj4roo/code.cpg.bin`
exported 1545 nodes, 7154 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.08lLUj4roo/export
‚úÖ CVE_2018_1068_1594_Linux_Kernel_CWE_787_Testset_5fa47baf_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WqYDk9NYrw/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WqYDk9NYrw/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WqYDk9NYrw/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WqYDk9NYrw/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WqYDk9NYrw/code.cpg.bin`
exported 1313 nodes, 5025 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WqYDk9NYrw/export
‚úÖ CVE_2023_1611_3874_Linux_Kernel_CWE_416_Testset_3110d88f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UmoU6GXWXS/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UmoU6GXWXS/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UmoU6GXWXS/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UmoU6GXWXS/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UmoU6GXWXS/code.cpg.bin`
exported 1151 nodes, 4012 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UmoU6GXWXS/export
‚úÖ CVE_2019_18660_2087_Linux_Kernel_CWE_200_Testset_5d64eca4_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dtIFKOdBqZ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dtIFKOdBqZ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dtIFKOdBqZ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dtIFKOdBqZ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dtIFKOdBqZ/code.cpg.bin`
exported 1000 nodes, 3087 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dtIFKOdBqZ/export
‚úÖ CVE_2018_3665_1805_Linux_Kernel_CWE_200_Testset_593b0327_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EOFkQa8hgF/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EOFkQa8hgF/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EOFkQa8hgF/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EOFkQa8hgF/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EOFkQa8hgF/code.cpg.bin`
exported 1101 nodes, 3666 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EOFkQa8hgF/export
‚úÖ CVE_2022_2991_3540_Linux_Kernel_CWE_787_Testset_3b91ff68_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.f02VwQkicn/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.f02VwQkicn/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.f02VwQkicn/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.f02VwQkicn/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.f02VwQkicn/code.cpg.bin`
exported 1301 nodes, 4984 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.f02VwQkicn/export
‚úÖ CVE_2013_6382_349_Linux_Kernel_CWE_119_Testset_588cc4a1_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HowHJNedQE/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HowHJNedQE/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HowHJNedQE/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HowHJNedQE/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HowHJNedQE/code.cpg.bin`
exported 1934 nodes, 10077 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HowHJNedQE/export
‚úÖ CVE_2022_21499_3409_Linux_Kernel_CWE_787_Testset_55091c02_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gfZsJEFpxs/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gfZsJEFpxs/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gfZsJEFpxs/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gfZsJEFpxs/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gfZsJEFpxs/code.cpg.bin`
exported 1149 nodes, 4086 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gfZsJEFpxs/export
‚úÖ CVE_2019_19528_2203_Linux_Kernel_CWE_416_Testset_0df36a5a_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FMVcetr1qJ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FMVcetr1qJ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FMVcetr1qJ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FMVcetr1qJ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FMVcetr1qJ/code.cpg.bin`
exported 1177 nodes, 4150 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FMVcetr1qJ/export
‚úÖ CVE_2023_33951_4083_Linux_Kernel_CWE_362_Testset_fcfefdd7_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TaD4WdQj1N/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TaD4WdQj1N/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TaD4WdQj1N/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TaD4WdQj1N/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TaD4WdQj1N/code.cpg.bin`
exported 1225 nodes, 4477 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TaD4WdQj1N/export
‚úÖ CVE_2017_5547_1460_Linux_Kernel_CWE_119_Testset_13dda2fc_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d2VtQ9Gl9f/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d2VtQ9Gl9f/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d2VtQ9Gl9f/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d2VtQ9Gl9f/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d2VtQ9Gl9f/code.cpg.bin`
exported 1566 nodes, 7211 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d2VtQ9Gl9f/export
‚úÖ CVE_2020_11608_2428_Linux_Kernel_CWE_476_Testset_d09dcb0f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mR1IxCZ3Fs/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mR1IxCZ3Fs/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mR1IxCZ3Fs/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mR1IxCZ3Fs/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mR1IxCZ3Fs/code.cpg.bin`
exported 1270 nodes, 4674 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mR1IxCZ3Fs/export
‚úÖ CVE_2020_0429_2381_Linux_Kernel_CWE_787_Testset_c37cae02_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RZ5siFgs7d/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RZ5siFgs7d/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RZ5siFgs7d/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RZ5siFgs7d/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RZ5siFgs7d/code.cpg.bin`
exported 1050 nodes, 3339 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RZ5siFgs7d/export
‚úÖ CVE_2022_1976_3322_Linux_Kernel_CWE_416_Testset_b9bf54bc_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AuUk1iPc9x/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AuUk1iPc9x/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AuUk1iPc9x/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AuUk1iPc9x/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AuUk1iPc9x/code.cpg.bin`
exported 1083 nodes, 3534 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AuUk1iPc9x/export
‚úÖ CVE_2022_20566_3389_Linux_Kernel_CWE_416_Testset_a46ce7fc_p OK
   üìä [140/586] Rate: 11.0 files/min | Success: 139
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4OEzLq4lpx/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4OEzLq4lpx/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4OEzLq4lpx/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4OEzLq4lpx/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4OEzLq4lpx/code.cpg.bin`
exported 1238 nodes, 4414 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4OEzLq4lpx/export
‚úÖ CVE_2014_0181_447_Linux_Kernel_CWE_264_Testset_24a1548c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vitmcaRlmv/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vitmcaRlmv/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vitmcaRlmv/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vitmcaRlmv/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vitmcaRlmv/code.cpg.bin`
exported 1234 nodes, 4577 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vitmcaRlmv/export
‚úÖ CVE_2021_22555_2885_Linux_Kernel_CWE_787_Testset_7ce2dadc_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V8QscWDwxW/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V8QscWDwxW/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V8QscWDwxW/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V8QscWDwxW/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V8QscWDwxW/code.cpg.bin`
exported 1518 nodes, 7036 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V8QscWDwxW/export
‚úÖ CVE_2017_1000251_1192_Linux_Kernel_CWE_787_Testset_7310e288_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ubpnp0WaJY/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ubpnp0WaJY/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ubpnp0WaJY/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ubpnp0WaJY/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ubpnp0WaJY/code.cpg.bin`
exported 1377 nodes, 5412 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ubpnp0WaJY/export
‚úÖ CVE_2018_13093_1667_Linux_Kernel_CWE_476_Testset_9377d5e7_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.I2sP56obea/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.I2sP56obea/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.I2sP56obea/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.I2sP56obea/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.I2sP56obea/code.cpg.bin`
exported 1152 nodes, 3931 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.I2sP56obea/export
‚úÖ CVE_2018_7995_1857_Linux_Kernel_CWE_362_Testset_5e187ec0_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vFHucDESb8/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vFHucDESb8/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vFHucDESb8/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vFHucDESb8/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vFHucDESb8/code.cpg.bin`
exported 1171 nodes, 4098 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vFHucDESb8/export
‚úÖ CVE_2017_2584_1444_Linux_Kernel_CWE_416_Testset_61224e25_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.092BdHplWu/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.092BdHplWu/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.092BdHplWu/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.092BdHplWu/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.092BdHplWu/code.cpg.bin`
exported 1097 nodes, 3722 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.092BdHplWu/export
‚úÖ CVE_2014_4652_564_Linux_Kernel_CWE_362_Testset_da467400_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pFKqRKa2kX/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pFKqRKa2kX/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pFKqRKa2kX/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pFKqRKa2kX/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pFKqRKa2kX/code.cpg.bin`
exported 1277 nodes, 4755 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pFKqRKa2kX/export
‚úÖ CVE_2013_7266_373_Linux_Kernel_CWE_20_Testset_3eace586_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.upKdwVkT7j/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.upKdwVkT7j/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.upKdwVkT7j/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.upKdwVkT7j/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.upKdwVkT7j/code.cpg.bin`
exported 1092 nodes, 3632 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.upKdwVkT7j/export
‚úÖ CVE_2023_35823_4111_Linux_Kernel_CWE_362_Testset_9c7f72e9_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MtLes4VFS8/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MtLes4VFS8/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MtLes4VFS8/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MtLes4VFS8/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MtLes4VFS8/code.cpg.bin`
exported 1324 nodes, 5034 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MtLes4VFS8/export
‚úÖ CVE_2023_4732_4244_Linux_Kernel_CWE_362_Testset_a9b30ceb_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ACOCdMOryp/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ACOCdMOryp/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ACOCdMOryp/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ACOCdMOryp/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ACOCdMOryp/code.cpg.bin`
exported 4010 nodes, 35017 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ACOCdMOryp/export
‚úÖ CVE_2019_2181_2291_Linux_Kernel_CWE_787_Testset_38254e2b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.s7ItsFDkYJ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.s7ItsFDkYJ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.s7ItsFDkYJ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.s7ItsFDkYJ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.s7ItsFDkYJ/code.cpg.bin`
exported 1463 nodes, 6508 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.s7ItsFDkYJ/export
‚úÖ CVE_2019_10125_1890_Linux_Kernel_CWE_416_Testset_01c3f3c8_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qS1jzGxcfs/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qS1jzGxcfs/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qS1jzGxcfs/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qS1jzGxcfs/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qS1jzGxcfs/code.cpg.bin`
exported 1207 nodes, 4236 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qS1jzGxcfs/export
‚úÖ CVE_2016_5243_1053_Linux_Kernel_CWE_200_Testset_b7f42c50_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7vbbgTUQiT/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7vbbgTUQiT/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7vbbgTUQiT/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7vbbgTUQiT/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7vbbgTUQiT/code.cpg.bin`
exported 1588 nodes, 6823 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7vbbgTUQiT/export
‚úÖ CVE_2013_7281_409_Linux_Kernel_CWE_200_Testset_0eb8484b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DMCaKhpGK0/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DMCaKhpGK0/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DMCaKhpGK0/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DMCaKhpGK0/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DMCaKhpGK0/code.cpg.bin`
exported 1193 nodes, 4218 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DMCaKhpGK0/export
‚úÖ CVE_2022_20409_3355_Linux_Kernel_CWE_416_Testset_dd35a289_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MgnTkXWJY0/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MgnTkXWJY0/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MgnTkXWJY0/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MgnTkXWJY0/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MgnTkXWJY0/code.cpg.bin`
exported 1304 nodes, 4944 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MgnTkXWJY0/export
‚úÖ CVE_2012_3552_78_Linux_Kernel_CWE_362_Testset_3b88cc38_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SVid2PqYsh/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SVid2PqYsh/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SVid2PqYsh/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SVid2PqYsh/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SVid2PqYsh/code.cpg.bin`
exported 1516 nodes, 6529 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SVid2PqYsh/export
‚úÖ CVE_2023_45898_4229_Linux_Kernel_CWE_416_Testset_700e97d8_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aHCVSe4prw/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aHCVSe4prw/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aHCVSe4prw/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aHCVSe4prw/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aHCVSe4prw/code.cpg.bin`
exported 1300 nodes, 4910 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aHCVSe4prw/export
‚úÖ CVE_2014_0181_442_Linux_Kernel_CWE_264_Testset_6a48e023_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NgEzq2GPEs/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NgEzq2GPEs/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NgEzq2GPEs/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NgEzq2GPEs/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NgEzq2GPEs/code.cpg.bin`
exported 1201 nodes, 4207 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NgEzq2GPEs/export
‚úÖ CVE_2023_3389_4071_Linux_Kernel_CWE_416_Testset_1f4cbcc9_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sG5g9qQI7L/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sG5g9qQI7L/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sG5g9qQI7L/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sG5g9qQI7L/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sG5g9qQI7L/code.cpg.bin`
exported 1734 nodes, 10169 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sG5g9qQI7L/export
‚úÖ CVE_2016_5400_1055_Linux_Kernel_CWE_119_Testset_ce5b3fb5_p OK
   üìä [160/586] Rate: 10.9 files/min | Success: 159
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qe58iVdAMd/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qe58iVdAMd/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qe58iVdAMd/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qe58iVdAMd/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qe58iVdAMd/code.cpg.bin`
exported 1304 nodes, 5488 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qe58iVdAMd/export
‚úÖ CVE_2023_1074_3841_Linux_Kernel_CWE_401_Testset_cca02ddb_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XqsP0rFDq6/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XqsP0rFDq6/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XqsP0rFDq6/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XqsP0rFDq6/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XqsP0rFDq6/code.cpg.bin`
exported 1465 nodes, 6181 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XqsP0rFDq6/export
‚úÖ CVE_2023_3567_4107_Linux_Kernel_CWE_416_Testset_771c3526_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mqJ7IQx0tM/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mqJ7IQx0tM/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mqJ7IQx0tM/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mqJ7IQx0tM/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mqJ7IQx0tM/code.cpg.bin`
exported 1273 nodes, 4659 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mqJ7IQx0tM/export
‚úÖ CVE_2014_7826_593_Linux_Kernel_CWE_476_Testset_0679f7f5_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WO2WpXNUCP/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WO2WpXNUCP/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WO2WpXNUCP/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WO2WpXNUCP/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WO2WpXNUCP/code.cpg.bin`
exported 1312 nodes, 5246 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WO2WpXNUCP/export
‚úÖ CVE_2021_33656_2983_Linux_Kernel_CWE_787_Testset_a13d59af_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2NetxKNU9K/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2NetxKNU9K/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2NetxKNU9K/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2NetxKNU9K/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2NetxKNU9K/code.cpg.bin`
exported 1491 nodes, 6345 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2NetxKNU9K/export
‚úÖ CVE_2023_21255_3917_Linux_Kernel_CWE_416_Testset_e8e70f10_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qrSlg8wk28/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qrSlg8wk28/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qrSlg8wk28/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qrSlg8wk28/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qrSlg8wk28/code.cpg.bin`
exported 1373 nodes, 5946 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qrSlg8wk28/export
‚úÖ CVE_2020_28097_2655_Linux_Kernel_CWE_125_Testset_cb71381f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zrOAORTcQ9/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zrOAORTcQ9/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zrOAORTcQ9/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zrOAORTcQ9/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zrOAORTcQ9/code.cpg.bin`
exported 1090 nodes, 3548 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zrOAORTcQ9/export
‚úÖ CVE_2018_10882_1615_Linux_Kernel_CWE_787_Testset_d17896fe_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.grzlLkhbGr/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.grzlLkhbGr/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.grzlLkhbGr/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.grzlLkhbGr/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.grzlLkhbGr/code.cpg.bin`
exported 1256 nodes, 4821 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.grzlLkhbGr/export
‚úÖ CVE_2018_12207_1648_Linux_Kernel_CWE_20_Testset_d5337659_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.njnhqZXuv1/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.njnhqZXuv1/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.njnhqZXuv1/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.njnhqZXuv1/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.njnhqZXuv1/code.cpg.bin`
exported 1158 nodes, 4063 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.njnhqZXuv1/export
‚úÖ CVE_2013_1772_172_Linux_Kernel_CWE_119_Testset_20f52faf_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7DMxkFnb7n/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7DMxkFnb7n/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7DMxkFnb7n/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7DMxkFnb7n/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7DMxkFnb7n/code.cpg.bin`
exported 1125 nodes, 3824 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7DMxkFnb7n/export
‚úÖ CVE_2022_2318_3429_Linux_Kernel_CWE_416_Testset_7f4609fc_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0twqh9tMNu/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0twqh9tMNu/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0twqh9tMNu/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0twqh9tMNu/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0twqh9tMNu/code.cpg.bin`
exported 1322 nodes, 5214 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0twqh9tMNu/export
‚úÖ CVE_2014_1874_478_Linux_Kernel_CWE_20_Testset_d881b22a_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uxNoze3fNX/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uxNoze3fNX/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uxNoze3fNX/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uxNoze3fNX/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uxNoze3fNX/code.cpg.bin`
exported 1271 nodes, 4756 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uxNoze3fNX/export
‚úÖ CVE_2022_38457_3684_Linux_Kernel_CWE_416_Testset_57241537_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.boXqkUFoGK/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.boXqkUFoGK/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.boXqkUFoGK/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.boXqkUFoGK/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.boXqkUFoGK/code.cpg.bin`
exported 2747 nodes, 17370 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.boXqkUFoGK/export
‚úÖ CVE_2016_9083_1137_Linux_Kernel_CWE_119_Testset_b8b5a770_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k5fkeGDaGD/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k5fkeGDaGD/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k5fkeGDaGD/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k5fkeGDaGD/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k5fkeGDaGD/code.cpg.bin`
exported 1251 nodes, 4605 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k5fkeGDaGD/export
‚úÖ CVE_2023_33951_4082_Linux_Kernel_CWE_362_Testset_aa302df4_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oNdL3fNpnm/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oNdL3fNpnm/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oNdL3fNpnm/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oNdL3fNpnm/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oNdL3fNpnm/code.cpg.bin`
exported 1511 nodes, 6453 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oNdL3fNpnm/export
‚úÖ CVE_2016_10200_899_Linux_Kernel_CWE_362_Testset_9436fd43_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.M18Q9pCCkC/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.M18Q9pCCkC/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.M18Q9pCCkC/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.M18Q9pCCkC/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.M18Q9pCCkC/code.cpg.bin`
exported 1487 nodes, 6607 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.M18Q9pCCkC/export
‚úÖ CVE_2019_3701_2310_Linux_Kernel_CWE_787_Testset_69c2f5cf_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ckt1DcLDuS/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ckt1DcLDuS/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ckt1DcLDuS/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ckt1DcLDuS/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ckt1DcLDuS/code.cpg.bin`
exported 1721 nodes, 8275 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ckt1DcLDuS/export
‚úÖ CVE_2022_1184_3251_Linux_Kernel_CWE_416_Testset_f716bfb4_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EJc6NfEm2k/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EJc6NfEm2k/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EJc6NfEm2k/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EJc6NfEm2k/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EJc6NfEm2k/code.cpg.bin`
exported 1443 nodes, 6334 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EJc6NfEm2k/export
‚úÖ CVE_2022_3107_3552_Linux_Kernel_CWE_476_Testset_a8387bac_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U4p2vlBtDB/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U4p2vlBtDB/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U4p2vlBtDB/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U4p2vlBtDB/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U4p2vlBtDB/code.cpg.bin`
exported 1577 nodes, 7175 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U4p2vlBtDB/export
‚úÖ CVE_2021_39634_3092_Linux_Kernel_CWE_416_Testset_9dfa2a81_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uExFYJbv29/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uExFYJbv29/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uExFYJbv29/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uExFYJbv29/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uExFYJbv29/code.cpg.bin`
exported 1311 nodes, 5035 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uExFYJbv29/export
‚úÖ CVE_2021_3736_3047_Linux_Kernel_CWE_401_Testset_c7246cbb_p OK
   üìä [180/586] Rate: 10.8 files/min | Success: 179
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DNb8L2jH9E/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DNb8L2jH9E/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DNb8L2jH9E/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DNb8L2jH9E/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DNb8L2jH9E/code.cpg.bin`
exported 1323 nodes, 5001 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DNb8L2jH9E/export
‚úÖ CVE_2023_1582_3870_Linux_Kernel_CWE_362_Testset_1c76ee08_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RrkDY4YXr0/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RrkDY4YXr0/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RrkDY4YXr0/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RrkDY4YXr0/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RrkDY4YXr0/code.cpg.bin`
exported 1233 nodes, 4572 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RrkDY4YXr0/export
‚úÖ CVE_2019_18810_2102_Linux_Kernel_CWE_401_Testset_0cea3d4a_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PH59q09f5Y/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PH59q09f5Y/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PH59q09f5Y/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PH59q09f5Y/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PH59q09f5Y/code.cpg.bin`
exported 1316 nodes, 5079 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PH59q09f5Y/export
‚úÖ CVE_2023_33951_4084_Linux_Kernel_CWE_362_Testset_e36b0c21_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bkWWNJWWDc/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bkWWNJWWDc/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bkWWNJWWDc/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bkWWNJWWDc/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bkWWNJWWDc/code.cpg.bin`
exported 1224 nodes, 4574 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bkWWNJWWDc/export
‚úÖ CVE_2016_8632_1121_Linux_Kernel_CWE_264_Testset_c41cf8ed_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xrl43UmCrq/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xrl43UmCrq/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xrl43UmCrq/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xrl43UmCrq/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xrl43UmCrq/code.cpg.bin`
exported 1375 nodes, 5616 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xrl43UmCrq/export
‚úÖ CVE_2019_18812_2104_Linux_Kernel_CWE_401_Testset_22529eb0_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vCrfoKwfXs/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vCrfoKwfXs/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vCrfoKwfXs/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vCrfoKwfXs/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vCrfoKwfXs/code.cpg.bin`
exported 1233 nodes, 4502 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vCrfoKwfXs/export
‚úÖ CVE_2019_2213_2295_Linux_Kernel_CWE_416_Testset_3f033b37_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jI0F9dj9Rd/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jI0F9dj9Rd/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jI0F9dj9Rd/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jI0F9dj9Rd/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jI0F9dj9Rd/code.cpg.bin`
exported 1203 nodes, 4273 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jI0F9dj9Rd/export
‚úÖ CVE_2022_47946_3785_Linux_Kernel_CWE_416_Testset_60d6436b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l7HiMF6uWd/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l7HiMF6uWd/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l7HiMF6uWd/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l7HiMF6uWd/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l7HiMF6uWd/code.cpg.bin`
exported 1817 nodes, 9270 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l7HiMF6uWd/export
‚úÖ CVE_2015_8839_857_Linux_Kernel_CWE_362_Testset_5f453442_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7rvbKTNwv0/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7rvbKTNwv0/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7rvbKTNwv0/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7rvbKTNwv0/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7rvbKTNwv0/code.cpg.bin`
exported 1098 nodes, 3696 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7rvbKTNwv0/export
‚úÖ CVE_2018_20509_1763_Linux_Kernel_CWE_200_Testset_59181c86_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wjkNtTldK5/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wjkNtTldK5/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wjkNtTldK5/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wjkNtTldK5/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wjkNtTldK5/code.cpg.bin`
exported 1120 nodes, 3746 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wjkNtTldK5/export
‚úÖ CVE_2022_43750_3741_Linux_Kernel_CWE_787_Testset_0466d740_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EB0jzShjxM/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EB0jzShjxM/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EB0jzShjxM/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EB0jzShjxM/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EB0jzShjxM/code.cpg.bin`
exported 1199 nodes, 4401 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EB0jzShjxM/export
‚úÖ CVE_2017_6874_1488_Linux_Kernel_CWE_362_Testset_44fc8b96_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iwEkY83yzb/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iwEkY83yzb/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iwEkY83yzb/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iwEkY83yzb/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iwEkY83yzb/code.cpg.bin`
exported 1186 nodes, 4219 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iwEkY83yzb/export
‚úÖ CVE_2020_10711_2403_Linux_Kernel_CWE_476_Testset_daf359de_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AARg72Q2aS/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AARg72Q2aS/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AARg72Q2aS/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AARg72Q2aS/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AARg72Q2aS/code.cpg.bin`
exported 1053 nodes, 3372 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AARg72Q2aS/export
‚úÖ CVE_2017_17741_1368_Linux_Kernel_CWE_125_Testset_bfc2b4e2_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g37LtdfPGL/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g37LtdfPGL/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g37LtdfPGL/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g37LtdfPGL/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g37LtdfPGL/code.cpg.bin`
exported 1439 nodes, 6245 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g37LtdfPGL/export
‚úÖ CVE_2022_4378_3743_Linux_Kernel_CWE_787_Testset_b021713e_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UwHZcIoxUD/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UwHZcIoxUD/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UwHZcIoxUD/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UwHZcIoxUD/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UwHZcIoxUD/code.cpg.bin`
exported 1927 nodes, 10165 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UwHZcIoxUD/export
‚úÖ CVE_2023_5633_4287_Linux_Kernel_CWE_416_Testset_368f688a_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S6ByEmnnwp/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S6ByEmnnwp/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S6ByEmnnwp/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S6ByEmnnwp/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S6ByEmnnwp/code.cpg.bin`
exported 1628 nodes, 7850 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.S6ByEmnnwp/export
‚úÖ CVE_2021_3501_3015_Linux_Kernel_CWE_787_Testset_aeb0e0ef_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D0DZUY3Ah7/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D0DZUY3Ah7/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D0DZUY3Ah7/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D0DZUY3Ah7/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D0DZUY3Ah7/code.cpg.bin`
exported 1290 nodes, 4970 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D0DZUY3Ah7/export
‚úÖ CVE_2022_20566_3387_Linux_Kernel_CWE_416_Testset_0966bf35_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dwfxoy2eeW/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dwfxoy2eeW/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dwfxoy2eeW/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dwfxoy2eeW/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dwfxoy2eeW/code.cpg.bin`
exported 1069 nodes, 3434 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dwfxoy2eeW/export
‚úÖ CVE_2015_2672_741_Linux_Kernel_CWE_20_Testset_2493f7d7_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yssDYcbN0s/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yssDYcbN0s/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yssDYcbN0s/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yssDYcbN0s/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yssDYcbN0s/code.cpg.bin`
exported 1364 nodes, 5359 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yssDYcbN0s/export
‚úÖ CVE_2017_18216_1402_Linux_Kernel_CWE_476_Testset_69326d8b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wb6XTI2AUw/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wb6XTI2AUw/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wb6XTI2AUw/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wb6XTI2AUw/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wb6XTI2AUw/code.cpg.bin`
exported 1088 nodes, 3570 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wb6XTI2AUw/export
‚úÖ CVE_2015_4170_764_Linux_Kernel_CWE_362_Testset_a971e52e_p OK
   üìä [200/586] Rate: 10.8 files/min | Success: 199
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zmFtiIpZ0V/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zmFtiIpZ0V/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zmFtiIpZ0V/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zmFtiIpZ0V/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zmFtiIpZ0V/code.cpg.bin`
exported 1246 nodes, 4693 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zmFtiIpZ0V/export
‚úÖ CVE_2020_25669_2596_Linux_Kernel_CWE_416_Testset_647ff4ce_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.adeABorRpe/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.adeABorRpe/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.adeABorRpe/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.adeABorRpe/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.adeABorRpe/code.cpg.bin`
exported 4825 nodes, 48405 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.adeABorRpe/export
‚úÖ CVE_2019_16233_2046_Linux_Kernel_CWE_476_Testset_a33ceea9_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QM1ut15Anu/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QM1ut15Anu/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QM1ut15Anu/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QM1ut15Anu/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QM1ut15Anu/code.cpg.bin`
exported 1181 nodes, 4254 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QM1ut15Anu/export
‚úÖ CVE_2013_2234_225_Linux_Kernel_CWE_119_Testset_5873ec76_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6kVDCeaPFk/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6kVDCeaPFk/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6kVDCeaPFk/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6kVDCeaPFk/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6kVDCeaPFk/code.cpg.bin`
exported 1527 nodes, 7380 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6kVDCeaPFk/export
‚úÖ CVE_2022_47938_3767_Linux_Kernel_CWE_125_Testset_560a4baf_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.noXACfYFK5/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.noXACfYFK5/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.noXACfYFK5/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.noXACfYFK5/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.noXACfYFK5/code.cpg.bin`
exported 1466 nodes, 6469 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.noXACfYFK5/export
‚úÖ CVE_2018_13093_1668_Linux_Kernel_CWE_476_Testset_e8b0f067_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KccnVdUvpf/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KccnVdUvpf/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KccnVdUvpf/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KccnVdUvpf/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KccnVdUvpf/code.cpg.bin`
exported 1281 nodes, 4806 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KccnVdUvpf/export
‚úÖ CVE_2016_3841_1005_Linux_Kernel_CWE_416_Testset_e5d27eb7_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OTdpLj12sf/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OTdpLj12sf/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OTdpLj12sf/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OTdpLj12sf/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OTdpLj12sf/code.cpg.bin`
exported 1143 nodes, 3916 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OTdpLj12sf/export
‚úÖ CVE_2018_20669_1779_Linux_Kernel_CWE_20_Testset_8d012959_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Cs36nPFj52/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Cs36nPFj52/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Cs36nPFj52/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Cs36nPFj52/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Cs36nPFj52/code.cpg.bin`
exported 1610 nodes, 7667 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Cs36nPFj52/export
‚úÖ CVE_2020_8835_2808_Linux_Kernel_CWE_125_Testset_bbf8dc00_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o9LPJ00kb2/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o9LPJ00kb2/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o9LPJ00kb2/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o9LPJ00kb2/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o9LPJ00kb2/code.cpg.bin`
exported 1472 nodes, 6151 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o9LPJ00kb2/export
‚úÖ CVE_2018_10675_1593_Linux_Kernel_CWE_416_Testset_ca6084c0_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q0M2QZiV6B/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q0M2QZiV6B/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q0M2QZiV6B/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q0M2QZiV6B/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q0M2QZiV6B/code.cpg.bin`
exported 1114 nodes, 3730 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.q0M2QZiV6B/export
‚úÖ CVE_2022_47942_3772_Linux_Kernel_CWE_787_Testset_1b2fd91a_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yDTp76HUOT/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yDTp76HUOT/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yDTp76HUOT/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yDTp76HUOT/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yDTp76HUOT/code.cpg.bin`
exported 1425 nodes, 5779 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yDTp76HUOT/export
‚úÖ CVE_2023_31248_4000_Linux_Kernel_CWE_416_Testset_7798a163_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6Gqhlh7oFz/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6Gqhlh7oFz/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6Gqhlh7oFz/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6Gqhlh7oFz/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6Gqhlh7oFz/code.cpg.bin`
exported 1359 nodes, 5420 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6Gqhlh7oFz/export
‚úÖ CVE_2017_11600_1252_Linux_Kernel_CWE_125_Testset_8198a35f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TWpPFiGUFk/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TWpPFiGUFk/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TWpPFiGUFk/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TWpPFiGUFk/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TWpPFiGUFk/code.cpg.bin`
exported 1181 nodes, 4163 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TWpPFiGUFk/export
‚úÖ CVE_2019_19048_2129_Linux_Kernel_CWE_401_Testset_498a33a9_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bamznfNnZi/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bamznfNnZi/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bamznfNnZi/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bamznfNnZi/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bamznfNnZi/code.cpg.bin`
exported 1243 nodes, 4695 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bamznfNnZi/export
‚úÖ CVE_2012_2745_53_Linux_Kernel_CWE_119_Testset_9db824f1_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KZJVCt2Pe2/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KZJVCt2Pe2/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KZJVCt2Pe2/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KZJVCt2Pe2/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KZJVCt2Pe2/code.cpg.bin`
exported 1048 nodes, 3305 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KZJVCt2Pe2/export
‚úÖ CVE_2018_14619_1691_Linux_Kernel_CWE_20_Testset_595506ca_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6NcjPgn8nG/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6NcjPgn8nG/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6NcjPgn8nG/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6NcjPgn8nG/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6NcjPgn8nG/code.cpg.bin`
exported 1137 nodes, 3872 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6NcjPgn8nG/export
‚úÖ CVE_2019_10207_1898_Linux_Kernel_CWE_476_Testset_864afcd7_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VurZMXfhYF/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VurZMXfhYF/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VurZMXfhYF/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VurZMXfhYF/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VurZMXfhYF/code.cpg.bin`
exported 1436 nodes, 6318 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VurZMXfhYF/export
‚úÖ CVE_2023_3863_4155_Linux_Kernel_CWE_416_Testset_c37139e9_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mbfr99sYn7/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mbfr99sYn7/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mbfr99sYn7/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mbfr99sYn7/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mbfr99sYn7/code.cpg.bin`
exported 1139 nodes, 3851 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mbfr99sYn7/export
‚úÖ CVE_2017_16538_1325_Linux_Kernel_CWE_20_Testset_90fe41ee_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6vUgDHMUoT/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6vUgDHMUoT/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6vUgDHMUoT/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6vUgDHMUoT/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6vUgDHMUoT/code.cpg.bin`
exported 1107 nodes, 3756 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6vUgDHMUoT/export
‚úÖ CVE_2014_3184_515_Linux_Kernel_CWE_119_Testset_fb079a18_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4pQV1mnrCW/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4pQV1mnrCW/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4pQV1mnrCW/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4pQV1mnrCW/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4pQV1mnrCW/code.cpg.bin`
exported 1293 nodes, 4958 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4pQV1mnrCW/export
‚úÖ CVE_2023_2162_3924_Linux_Kernel_CWE_416_Testset_9f8f3c3b_p OK
   üìä [220/586] Rate: 10.8 files/min | Success: 219
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hhs27PGHcn/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hhs27PGHcn/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hhs27PGHcn/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hhs27PGHcn/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hhs27PGHcn/code.cpg.bin`
exported 1534 nodes, 6880 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hhs27PGHcn/export
‚úÖ CVE_2022_2938_3517_Linux_Kernel_CWE_416_Testset_9d4d08d2_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.X8gh4xGn51/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.X8gh4xGn51/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.X8gh4xGn51/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.X8gh4xGn51/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.X8gh4xGn51/code.cpg.bin`
exported 1364 nodes, 5497 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.X8gh4xGn51/export
‚úÖ CVE_2020_27067_2612_Linux_Kernel_CWE_362_Testset_3371c4a9_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Rnba4XeJYq/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Rnba4XeJYq/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Rnba4XeJYq/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Rnba4XeJYq/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Rnba4XeJYq/code.cpg.bin`
exported 2273 nodes, 13085 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Rnba4XeJYq/export
‚úÖ CVE_2018_14613_1683_Linux_Kernel_CWE_476_Testset_67fd81b3_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HAqn8P9R4F/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HAqn8P9R4F/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HAqn8P9R4F/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HAqn8P9R4F/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HAqn8P9R4F/code.cpg.bin`
exported 1285 nodes, 4835 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HAqn8P9R4F/export
‚úÖ CVE_2018_1000200_1578_Linux_Kernel_CWE_476_Testset_5d8aae4c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MtdQTmjO8j/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MtdQTmjO8j/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MtdQTmjO8j/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MtdQTmjO8j/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MtdQTmjO8j/code.cpg.bin`
exported 1209 nodes, 4391 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MtdQTmjO8j/export
‚úÖ CVE_2018_16871_1716_Linux_Kernel_CWE_476_Testset_a0b7204e_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MPGQzsypKl/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MPGQzsypKl/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MPGQzsypKl/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MPGQzsypKl/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MPGQzsypKl/code.cpg.bin`
exported 1058 nodes, 3416 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MPGQzsypKl/export
‚úÖ CVE_2017_16527_1313_Linux_Kernel_CWE_416_Testset_ee24e3f6_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l9C7e1H6GS/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l9C7e1H6GS/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l9C7e1H6GS/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l9C7e1H6GS/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l9C7e1H6GS/code.cpg.bin`
exported 1073 nodes, 3474 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l9C7e1H6GS/export
‚úÖ CVE_2016_6786_1089_Linux_Kernel_CWE_264_Testset_7ad1cbf6_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KIorW45fie/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KIorW45fie/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KIorW45fie/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KIorW45fie/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KIorW45fie/code.cpg.bin`
exported 1274 nodes, 4771 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KIorW45fie/export
‚úÖ CVE_2023_4732_4243_Linux_Kernel_CWE_362_Testset_5cb18474_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qllIVhcZqP/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qllIVhcZqP/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qllIVhcZqP/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qllIVhcZqP/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qllIVhcZqP/code.cpg.bin`
exported 1308 nodes, 4884 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qllIVhcZqP/export
‚úÖ CVE_2014_0181_452_Linux_Kernel_CWE_264_Testset_94c2690e_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CQkGTks18R/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CQkGTks18R/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CQkGTks18R/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CQkGTks18R/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CQkGTks18R/code.cpg.bin`
exported 1303 nodes, 5039 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CQkGTks18R/export
‚úÖ CVE_2015_8956_868_Linux_Kernel_CWE_476_Testset_05e81be0_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qDa3FTw4Gk/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qDa3FTw4Gk/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qDa3FTw4Gk/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qDa3FTw4Gk/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qDa3FTw4Gk/code.cpg.bin`
exported 1343 nodes, 5415 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qDa3FTw4Gk/export
‚úÖ CVE_2021_3348_2980_Linux_Kernel_CWE_362_Testset_046d8c19_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iOTkknMlBN/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iOTkknMlBN/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iOTkknMlBN/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iOTkknMlBN/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iOTkknMlBN/code.cpg.bin`
exported 1353 nodes, 5393 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iOTkknMlBN/export
‚úÖ CVE_2022_2380_3462_Linux_Kernel_CWE_787_Testset_17992c48_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PJ9QLh9gv7/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PJ9QLh9gv7/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PJ9QLh9gv7/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PJ9QLh9gv7/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PJ9QLh9gv7/code.cpg.bin`
exported 1874 nodes, 9305 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PJ9QLh9gv7/export
‚úÖ CVE_2018_10323_1588_Linux_Kernel_CWE_476_Testset_94d36861_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vwhbc2nWdy/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vwhbc2nWdy/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vwhbc2nWdy/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vwhbc2nWdy/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vwhbc2nWdy/code.cpg.bin`
exported 1732 nodes, 8070 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vwhbc2nWdy/export
‚úÖ CVE_2021_45095_3174_Linux_Kernel_CWE_200_Testset_0ce34f94_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i6hAh8Cemf/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i6hAh8Cemf/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i6hAh8Cemf/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i6hAh8Cemf/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i6hAh8Cemf/code.cpg.bin`
exported 1111 nodes, 3714 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.i6hAh8Cemf/export
‚úÖ CVE_2022_2318_3437_Linux_Kernel_CWE_416_Testset_a14c2431_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rDBmuM1qrz/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rDBmuM1qrz/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rDBmuM1qrz/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rDBmuM1qrz/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rDBmuM1qrz/code.cpg.bin`
exported 1171 nodes, 4097 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rDBmuM1qrz/export
‚úÖ CVE_2022_3633_3667_Linux_Kernel_CWE_401_Testset_7d662301_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fCTu3j8LQp/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fCTu3j8LQp/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fCTu3j8LQp/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fCTu3j8LQp/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fCTu3j8LQp/code.cpg.bin`
exported 1099 nodes, 3592 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fCTu3j8LQp/export
‚úÖ CVE_2023_1855_3880_Linux_Kernel_CWE_416_Testset_a32c23ef_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.phaYhpYDQR/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.phaYhpYDQR/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.phaYhpYDQR/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.phaYhpYDQR/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.phaYhpYDQR/code.cpg.bin`
exported 1124 nodes, 3793 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.phaYhpYDQR/export
‚úÖ CVE_2013_2930_260_Linux_Kernel_CWE_264_Testset_17fa93ab_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.76kc8duxHl/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.76kc8duxHl/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.76kc8duxHl/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.76kc8duxHl/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.76kc8duxHl/code.cpg.bin`
exported 1488 nodes, 6266 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.76kc8duxHl/export
‚úÖ CVE_2018_14646_1701_Linux_Kernel_CWE_476_Testset_a21d644e_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LZvPBEOxpI/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LZvPBEOxpI/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LZvPBEOxpI/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LZvPBEOxpI/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LZvPBEOxpI/code.cpg.bin`
exported 1446 nodes, 6163 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LZvPBEOxpI/export
‚úÖ CVE_2017_7979_1534_Linux_Kernel_CWE_20_Testset_e8d186e0_p OK
   üìä [240/586] Rate: 10.8 files/min | Success: 239
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jxXVKg3UjC/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jxXVKg3UjC/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jxXVKg3UjC/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jxXVKg3UjC/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jxXVKg3UjC/code.cpg.bin`
exported 1323 nodes, 5160 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jxXVKg3UjC/export
‚úÖ CVE_2016_3134_962_Linux_Kernel_CWE_119_Testset_154eba68_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GbVpMYdtd3/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GbVpMYdtd3/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GbVpMYdtd3/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GbVpMYdtd3/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GbVpMYdtd3/code.cpg.bin`
exported 1208 nodes, 4549 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GbVpMYdtd3/export
‚úÖ CVE_2021_3491_3013_Linux_Kernel_CWE_787_Testset_a5fb70ce_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a98hAvJPEL/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a98hAvJPEL/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a98hAvJPEL/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a98hAvJPEL/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a98hAvJPEL/code.cpg.bin`
exported 1168 nodes, 4218 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.a98hAvJPEL/export
‚úÖ CVE_2020_27784_2631_Linux_Kernel_CWE_416_Testset_b3d9bcce_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KJuBGnA9Ln/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KJuBGnA9Ln/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KJuBGnA9Ln/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KJuBGnA9Ln/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KJuBGnA9Ln/code.cpg.bin`
exported 1381 nodes, 5959 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KJuBGnA9Ln/export
‚úÖ CVE_2016_6786_1081_Linux_Kernel_CWE_264_Testset_3a55d947_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MYaslN64vk/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MYaslN64vk/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MYaslN64vk/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MYaslN64vk/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MYaslN64vk/code.cpg.bin`
exported 1150 nodes, 3919 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MYaslN64vk/export
‚úÖ CVE_2015_8963_871_Linux_Kernel_CWE_362_Testset_80be17aa_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6QJ5j25kEQ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6QJ5j25kEQ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6QJ5j25kEQ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6QJ5j25kEQ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6QJ5j25kEQ/code.cpg.bin`
exported 1285 nodes, 5222 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6QJ5j25kEQ/export
‚úÖ CVE_2016_8405_1118_Linux_Kernel_CWE_200_Testset_23c26744_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9vvofYvG0C/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9vvofYvG0C/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9vvofYvG0C/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9vvofYvG0C/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9vvofYvG0C/code.cpg.bin`
exported 1263 nodes, 5080 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9vvofYvG0C/export
‚úÖ CVE_2016_8405_1117_Linux_Kernel_CWE_200_Testset_f5ea88bb_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JofIbgY9p6/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JofIbgY9p6/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JofIbgY9p6/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JofIbgY9p6/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JofIbgY9p6/code.cpg.bin`
exported 1393 nodes, 5877 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JofIbgY9p6/export
‚úÖ CVE_2017_7645_1527_Linux_Kernel_CWE_20_Testset_34ba6ff5_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ihLOAnQKbr/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ihLOAnQKbr/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ihLOAnQKbr/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ihLOAnQKbr/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ihLOAnQKbr/code.cpg.bin`
exported 1244 nodes, 4729 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ihLOAnQKbr/export
‚úÖ CVE_2020_36313_2718_Linux_Kernel_CWE_416_Testset_693d8e28_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fduW80zgKd/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fduW80zgKd/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fduW80zgKd/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fduW80zgKd/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fduW80zgKd/code.cpg.bin`
exported 1306 nodes, 5156 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fduW80zgKd/export
‚úÖ CVE_2022_1011_3230_Linux_Kernel_CWE_416_Testset_5ae9d49a_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F5zXWBciOj/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F5zXWBciOj/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F5zXWBciOj/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F5zXWBciOj/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F5zXWBciOj/code.cpg.bin`
exported 1069 nodes, 3419 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.F5zXWBciOj/export
‚úÖ CVE_2023_3863_4146_Linux_Kernel_CWE_416_Testset_ebf744eb_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4loB2Z1D1u/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4loB2Z1D1u/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4loB2Z1D1u/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4loB2Z1D1u/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4loB2Z1D1u/code.cpg.bin`
exported 1043 nodes, 3304 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4loB2Z1D1u/export
‚úÖ CVE_2012_3552_80_Linux_Kernel_CWE_362_Testset_211a5710_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.73pOFPZdYP/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.73pOFPZdYP/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.73pOFPZdYP/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.73pOFPZdYP/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.73pOFPZdYP/code.cpg.bin`
exported 1359 nodes, 5449 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.73pOFPZdYP/export
‚úÖ CVE_2016_4998_1049_Linux_Kernel_CWE_119_Testset_e778ea74_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NFWNa82UVJ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NFWNa82UVJ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NFWNa82UVJ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NFWNa82UVJ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NFWNa82UVJ/code.cpg.bin`
exported 1356 nodes, 5737 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NFWNa82UVJ/export
‚úÖ CVE_2019_18680_2090_Linux_Kernel_CWE_476_Testset_b8187934_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6RDj8nKucV/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6RDj8nKucV/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6RDj8nKucV/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6RDj8nKucV/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6RDj8nKucV/code.cpg.bin`
exported 1265 nodes, 4593 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6RDj8nKucV/export
‚úÖ CVE_2022_2905_3510_Linux_Kernel_CWE_125_Testset_d911b95c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.62UEl0Axmw/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.62UEl0Axmw/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.62UEl0Axmw/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.62UEl0Axmw/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.62UEl0Axmw/code.cpg.bin`
exported 2055 nodes, 11395 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.62UEl0Axmw/export
‚úÖ CVE_2023_32247_4015_Linux_Kernel_CWE_401_Testset_3bd293da_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iIgZmnhCjH/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iIgZmnhCjH/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iIgZmnhCjH/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iIgZmnhCjH/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iIgZmnhCjH/code.cpg.bin`
exported 1080 nodes, 3482 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iIgZmnhCjH/export
‚úÖ CVE_2020_27675_2626_Linux_Kernel_CWE_362_Testset_861bb14f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Q7Gv0NrFwg/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Q7Gv0NrFwg/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Q7Gv0NrFwg/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Q7Gv0NrFwg/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Q7Gv0NrFwg/code.cpg.bin`
exported 1274 nodes, 4831 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Q7Gv0NrFwg/export
‚úÖ CVE_2015_9016_882_Linux_Kernel_CWE_362_Testset_5e442f48_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.t2AmczOMyD/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.t2AmczOMyD/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.t2AmczOMyD/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.t2AmczOMyD/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.t2AmczOMyD/code.cpg.bin`
exported 1420 nodes, 5941 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.t2AmczOMyD/export
‚úÖ CVE_2014_9419_680_Linux_Kernel_CWE_200_Testset_3d01246f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uV7fwzF8Wz/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uV7fwzF8Wz/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uV7fwzF8Wz/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uV7fwzF8Wz/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uV7fwzF8Wz/code.cpg.bin`
exported 1450 nodes, 5934 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uV7fwzF8Wz/export
‚úÖ CVE_2013_0871_164_Linux_Kernel_CWE_362_Testset_3cadf998_p OK
   üìä [260/586] Rate: 10.9 files/min | Success: 259
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.37OErMNLk8/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.37OErMNLk8/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.37OErMNLk8/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.37OErMNLk8/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.37OErMNLk8/code.cpg.bin`
exported 1253 nodes, 4779 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.37OErMNLk8/export
‚úÖ CVE_2018_1000004_1573_Linux_Kernel_CWE_362_Testset_cca18360_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jwUvpEewvI/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jwUvpEewvI/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jwUvpEewvI/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jwUvpEewvI/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jwUvpEewvI/code.cpg.bin`
exported 1610 nodes, 7667 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jwUvpEewvI/export
‚úÖ CVE_2020_8835_2809_Linux_Kernel_CWE_787_Testset_81548ac6_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T1pw1hME8A/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T1pw1hME8A/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T1pw1hME8A/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T1pw1hME8A/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T1pw1hME8A/code.cpg.bin`
exported 1249 nodes, 4645 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T1pw1hME8A/export
‚úÖ CVE_2021_4203_3147_Linux_Kernel_CWE_362_Testset_59688406_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jVugIXSG04/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jVugIXSG04/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jVugIXSG04/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jVugIXSG04/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jVugIXSG04/code.cpg.bin`
exported 1444 nodes, 6118 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jVugIXSG04/export
‚úÖ CVE_2019_19813_2245_Linux_Kernel_CWE_416_Testset_13a50a60_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jpROzmNkkG/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jpROzmNkkG/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jpROzmNkkG/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jpROzmNkkG/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jpROzmNkkG/code.cpg.bin`
exported 1150 nodes, 3919 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jpROzmNkkG/export
‚úÖ CVE_2015_8963_871_Linux_Kernel_CWE_416_Testset_80be17aa_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dNloXZRpE0/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dNloXZRpE0/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dNloXZRpE0/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dNloXZRpE0/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dNloXZRpE0/code.cpg.bin`
exported 1494 nodes, 6907 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dNloXZRpE0/export
‚úÖ CVE_2013_2891_248_Linux_Kernel_CWE_119_Testset_ec4bc06a_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.20IogAeFcI/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.20IogAeFcI/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.20IogAeFcI/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.20IogAeFcI/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.20IogAeFcI/code.cpg.bin`
exported 1122 nodes, 3845 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.20IogAeFcI/export
‚úÖ CVE_2020_27825_2638_Linux_Kernel_CWE_362_Testset_730386ea_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.E64LrlStlh/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.E64LrlStlh/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.E64LrlStlh/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.E64LrlStlh/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.E64LrlStlh/code.cpg.bin`
exported 1943 nodes, 11097 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.E64LrlStlh/export
‚úÖ CVE_2017_17558_1365_Linux_Kernel_CWE_787_Testset_fd864740_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XwraNGotbS/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XwraNGotbS/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XwraNGotbS/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XwraNGotbS/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XwraNGotbS/code.cpg.bin`
exported 1094 nodes, 3602 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XwraNGotbS/export
‚úÖ CVE_2019_19332_2191_Linux_Kernel_CWE_787_Testset_024a1339_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BQ8JrhOFVF/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BQ8JrhOFVF/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BQ8JrhOFVF/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BQ8JrhOFVF/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BQ8JrhOFVF/code.cpg.bin`
exported 1834 nodes, 9222 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BQ8JrhOFVF/export
‚úÖ CVE_2018_7191_1843_Linux_Kernel_CWE_476_Testset_24d8163f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YQX3wByZkQ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YQX3wByZkQ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YQX3wByZkQ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YQX3wByZkQ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YQX3wByZkQ/code.cpg.bin`
exported 1293 nodes, 5059 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YQX3wByZkQ/export
‚úÖ CVE_2022_3523_3605_Linux_Kernel_CWE_416_Testset_fef93d5e_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z9f7f6kRao/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z9f7f6kRao/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z9f7f6kRao/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z9f7f6kRao/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z9f7f6kRao/code.cpg.bin`
exported 1261 nodes, 4764 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z9f7f6kRao/export
‚úÖ CVE_2022_2590_3480_Linux_Kernel_CWE_362_Testset_c0526aa5_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DxGaG9Pnew/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DxGaG9Pnew/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DxGaG9Pnew/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DxGaG9Pnew/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DxGaG9Pnew/code.cpg.bin`
exported 1000 nodes, 3087 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DxGaG9Pnew/export
‚úÖ CVE_2019_18885_2108_Linux_Kernel_CWE_476_Testset_8ab55ab7_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4EQtDabKGk/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4EQtDabKGk/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4EQtDabKGk/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4EQtDabKGk/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4EQtDabKGk/code.cpg.bin`
exported 1193 nodes, 4380 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4EQtDabKGk/export
‚úÖ CVE_2021_3612_3024_Linux_Kernel_CWE_787_Testset_0ea0d157_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r3ZkrGxGID/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r3ZkrGxGID/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r3ZkrGxGID/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r3ZkrGxGID/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r3ZkrGxGID/code.cpg.bin`
exported 1127 nodes, 3761 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.r3ZkrGxGID/export
‚úÖ CVE_2019_19768_2228_Linux_Kernel_CWE_416_Testset_ac69dd03_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.otsWc1KM0C/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.otsWc1KM0C/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.otsWc1KM0C/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.otsWc1KM0C/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.otsWc1KM0C/code.cpg.bin`
exported 1189 nodes, 4195 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.otsWc1KM0C/export
‚úÖ CVE_2014_0181_436_Linux_Kernel_CWE_264_Testset_f527d0e9_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4t3E2TnhZk/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4t3E2TnhZk/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4t3E2TnhZk/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4t3E2TnhZk/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4t3E2TnhZk/code.cpg.bin`
exported 1125 nodes, 3732 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4t3E2TnhZk/export
‚úÖ CVE_2016_2143_925_Linux_Kernel_CWE_20_Testset_7b322ed4_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jkaapFg1n8/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jkaapFg1n8/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jkaapFg1n8/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jkaapFg1n8/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jkaapFg1n8/code.cpg.bin`
exported 1255 nodes, 4723 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jkaapFg1n8/export
‚úÖ CVE_2023_3610_4130_Linux_Kernel_CWE_416_Testset_c21663eb_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FkiiJS5yFQ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FkiiJS5yFQ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FkiiJS5yFQ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FkiiJS5yFQ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FkiiJS5yFQ/code.cpg.bin`
exported 1066 nodes, 3455 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FkiiJS5yFQ/export
‚úÖ CVE_2022_38457_3688_Linux_Kernel_CWE_416_Testset_2cd31d2d_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xbVgi22gn3/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xbVgi22gn3/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xbVgi22gn3/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xbVgi22gn3/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xbVgi22gn3/code.cpg.bin`
exported 1564 nodes, 7360 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xbVgi22gn3/export
‚úÖ CVE_2018_14612_1681_Linux_Kernel_CWE_476_Testset_bd862dfe_p OK
   üìä [280/586] Rate: 11.0 files/min | Success: 279
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.C9bCdOP7aD/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.C9bCdOP7aD/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.C9bCdOP7aD/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.C9bCdOP7aD/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.C9bCdOP7aD/code.cpg.bin`
exported 1828 nodes, 8953 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.C9bCdOP7aD/export
‚úÖ CVE_2014_0101_429_Linux_Kernel_CWE_476_Testset_d9f932d7_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g4yKgQrc8y/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g4yKgQrc8y/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g4yKgQrc8y/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g4yKgQrc8y/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g4yKgQrc8y/code.cpg.bin`
exported 1330 nodes, 5255 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.g4yKgQrc8y/export
‚úÖ CVE_2019_19927_2265_Linux_Kernel_CWE_125_Testset_4cf424bc_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3UQVOFR6eR/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3UQVOFR6eR/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3UQVOFR6eR/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3UQVOFR6eR/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3UQVOFR6eR/code.cpg.bin`
exported 1342 nodes, 5271 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3UQVOFR6eR/export
‚úÖ CVE_2023_3812_4136_Linux_Kernel_CWE_787_Testset_ec4d259e_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ur7yYSgFs2/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ur7yYSgFs2/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ur7yYSgFs2/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ur7yYSgFs2/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ur7yYSgFs2/code.cpg.bin`
exported 1235 nodes, 4514 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ur7yYSgFs2/export
‚úÖ CVE_2018_20854_1784_Linux_Kernel_CWE_125_Testset_069535ec_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.srzA2BDwWb/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.srzA2BDwWb/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.srzA2BDwWb/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.srzA2BDwWb/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.srzA2BDwWb/code.cpg.bin`
exported 1182 nodes, 4331 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.srzA2BDwWb/export
‚úÖ CVE_2023_4611_4236_Linux_Kernel_CWE_416_Testset_2da11108_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VzSiprVqLj/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VzSiprVqLj/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VzSiprVqLj/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VzSiprVqLj/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VzSiprVqLj/code.cpg.bin`
exported 1537 nodes, 7222 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VzSiprVqLj/export
‚úÖ CVE_2019_0149_1880_Linux_Kernel_CWE_20_Testset_2a14e16f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.h1kqT2S8Z7/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.h1kqT2S8Z7/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.h1kqT2S8Z7/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.h1kqT2S8Z7/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.h1kqT2S8Z7/code.cpg.bin`
exported 2828 nodes, 18946 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.h1kqT2S8Z7/export
‚úÖ CVE_2013_4387_302_Linux_Kernel_CWE_119_Testset_5e33b914_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R1lI13uzNK/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R1lI13uzNK/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R1lI13uzNK/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R1lI13uzNK/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R1lI13uzNK/code.cpg.bin`
exported 1350 nodes, 5431 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.R1lI13uzNK/export
‚úÖ CVE_2022_20132_3334_Linux_Kernel_CWE_125_Testset_4caa8258_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2pDZ3Hi6k0/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2pDZ3Hi6k0/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2pDZ3Hi6k0/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2pDZ3Hi6k0/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2pDZ3Hi6k0/code.cpg.bin`
exported 1122 nodes, 3744 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2pDZ3Hi6k0/export
‚úÖ CVE_2021_20261_2864_Linux_Kernel_CWE_362_Testset_7461d763_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dYcj0avI6G/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dYcj0avI6G/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dYcj0avI6G/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dYcj0avI6G/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dYcj0avI6G/code.cpg.bin`
exported 1498 nodes, 6748 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dYcj0avI6G/export
‚úÖ CVE_2021_22555_2882_Linux_Kernel_CWE_787_Testset_aa6bbed8_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fzSU28u9Cq/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fzSU28u9Cq/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fzSU28u9Cq/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fzSU28u9Cq/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fzSU28u9Cq/code.cpg.bin`
exported 1136 nodes, 3822 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fzSU28u9Cq/export
‚úÖ CVE_2016_3134_970_Linux_Kernel_CWE_119_Testset_5c73431f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Cp1VgVHV4E/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Cp1VgVHV4E/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Cp1VgVHV4E/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Cp1VgVHV4E/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Cp1VgVHV4E/code.cpg.bin`
exported 1048 nodes, 3312 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Cp1VgVHV4E/export
‚úÖ CVE_2017_7374_1501_Linux_Kernel_CWE_476_Testset_69e2d43b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.G8FzM5tQK7/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.G8FzM5tQK7/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.G8FzM5tQK7/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.G8FzM5tQK7/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.G8FzM5tQK7/code.cpg.bin`
exported 1373 nodes, 5812 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.G8FzM5tQK7/export
‚úÖ CVE_2020_36386_2753_Linux_Kernel_CWE_125_Testset_89ac1180_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1H5xv9qxMU/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1H5xv9qxMU/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1H5xv9qxMU/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1H5xv9qxMU/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1H5xv9qxMU/code.cpg.bin`
exported 1239 nodes, 4534 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1H5xv9qxMU/export
‚úÖ CVE_2023_21255_3916_Linux_Kernel_CWE_787_Testset_2588f12e_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U5JhlgcU93/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U5JhlgcU93/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U5JhlgcU93/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U5JhlgcU93/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U5JhlgcU93/code.cpg.bin`
exported 1491 nodes, 6808 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U5JhlgcU93/export
‚úÖ CVE_2022_1973_3305_Linux_Kernel_CWE_416_Testset_0a024244_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oJizjWwdlk/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oJizjWwdlk/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oJizjWwdlk/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oJizjWwdlk/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oJizjWwdlk/code.cpg.bin`
exported 1315 nodes, 5037 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oJizjWwdlk/export
‚úÖ CVE_2023_3090_3990_Linux_Kernel_CWE_787_Testset_75038add_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4GZILWDjr6/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4GZILWDjr6/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4GZILWDjr6/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4GZILWDjr6/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4GZILWDjr6/code.cpg.bin`
exported 2083 nodes, 10988 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4GZILWDjr6/export
‚úÖ CVE_2013_6368_343_Linux_Kernel_CWE_20_Testset_74bfaef1_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xo0kxf3Dbp/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xo0kxf3Dbp/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xo0kxf3Dbp/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xo0kxf3Dbp/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xo0kxf3Dbp/code.cpg.bin`
exported 1205 nodes, 4237 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xo0kxf3Dbp/export
‚úÖ CVE_2022_48502_3796_Linux_Kernel_CWE_125_Testset_c8433617_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yxk3J3sydG/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yxk3J3sydG/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yxk3J3sydG/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yxk3J3sydG/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yxk3J3sydG/code.cpg.bin`
exported 1226 nodes, 4457 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yxk3J3sydG/export
‚úÖ CVE_2014_9710_689_Linux_Kernel_CWE_362_Testset_5ce3e236_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kFlmITWnjC/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kFlmITWnjC/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kFlmITWnjC/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kFlmITWnjC/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kFlmITWnjC/code.cpg.bin`
exported 1772 nodes, 8109 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kFlmITWnjC/export
‚úÖ CVE_2013_7281_411_Linux_Kernel_CWE_200_Testset_6ecf815f_p OK
   üìä [300/586] Rate: 11.2 files/min | Success: 299
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.igWq5p1EiP/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.igWq5p1EiP/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.igWq5p1EiP/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.igWq5p1EiP/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.igWq5p1EiP/code.cpg.bin`
exported 1117 nodes, 3719 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.igWq5p1EiP/export
‚úÖ CVE_2022_3424_3598_Linux_Kernel_CWE_416_Testset_0eca6b8f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T9WkLs0IAE/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T9WkLs0IAE/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T9WkLs0IAE/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T9WkLs0IAE/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T9WkLs0IAE/code.cpg.bin`
exported 1536 nodes, 6829 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T9WkLs0IAE/export
‚úÖ CVE_2013_7266_394_Linux_Kernel_CWE_20_Testset_272cffde_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JWLn5EjpS0/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JWLn5EjpS0/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JWLn5EjpS0/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JWLn5EjpS0/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JWLn5EjpS0/code.cpg.bin`
exported 1322 nodes, 5189 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JWLn5EjpS0/export
‚úÖ CVE_2014_2523_481_Linux_Kernel_CWE_20_Testset_9dabc4c0_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.E29GCHS9DJ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.E29GCHS9DJ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.E29GCHS9DJ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.E29GCHS9DJ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.E29GCHS9DJ/code.cpg.bin`
exported 1261 nodes, 4694 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.E29GCHS9DJ/export
‚úÖ CVE_2022_4095_3706_Linux_Kernel_CWE_416_Testset_742932d4_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XFVm5iAVWC/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XFVm5iAVWC/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XFVm5iAVWC/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XFVm5iAVWC/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XFVm5iAVWC/code.cpg.bin`
exported 1364 nodes, 5446 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XFVm5iAVWC/export
‚úÖ CVE_2014_8369_622_Linux_Kernel_CWE_119_Testset_d1b8b297_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qSQBkBgVyn/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qSQBkBgVyn/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qSQBkBgVyn/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qSQBkBgVyn/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qSQBkBgVyn/code.cpg.bin`
exported 1621 nodes, 7515 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qSQBkBgVyn/export
‚úÖ CVE_2017_18218_1404_Linux_Kernel_CWE_416_Testset_156ef23c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7eqh4SWZeP/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7eqh4SWZeP/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7eqh4SWZeP/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7eqh4SWZeP/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7eqh4SWZeP/code.cpg.bin`
exported 1282 nodes, 4972 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7eqh4SWZeP/export
‚úÖ CVE_2019_19768_2231_Linux_Kernel_CWE_416_Testset_32dd19aa_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VwplsXiCC4/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VwplsXiCC4/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VwplsXiCC4/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VwplsXiCC4/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VwplsXiCC4/code.cpg.bin`
exported 1241 nodes, 4539 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VwplsXiCC4/export
‚úÖ CVE_2021_20261_2865_Linux_Kernel_CWE_362_Testset_afb4bf4a_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yF5LfVDYgc/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yF5LfVDYgc/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yF5LfVDYgc/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yF5LfVDYgc/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yF5LfVDYgc/code.cpg.bin`
exported 1234 nodes, 4577 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yF5LfVDYgc/export
‚úÖ CVE_2021_22555_2884_Linux_Kernel_CWE_787_Testset_f381f726_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k4gdBt9gTK/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k4gdBt9gTK/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k4gdBt9gTK/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k4gdBt9gTK/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k4gdBt9gTK/code.cpg.bin`
exported 1160 nodes, 4119 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k4gdBt9gTK/export
‚úÖ CVE_2017_8062_1537_Linux_Kernel_CWE_119_Testset_99b73a8d_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D4F0o84BNW/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D4F0o84BNW/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D4F0o84BNW/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D4F0o84BNW/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D4F0o84BNW/code.cpg.bin`
exported 1227 nodes, 4645 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.D4F0o84BNW/export
‚úÖ CVE_2023_4208_4200_Linux_Kernel_CWE_416_Testset_2b153479_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bdEXMje3o9/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bdEXMje3o9/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bdEXMje3o9/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bdEXMje3o9/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bdEXMje3o9/code.cpg.bin`
exported 1451 nodes, 6015 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bdEXMje3o9/export
‚úÖ CVE_2013_7266_372_Linux_Kernel_CWE_20_Testset_3f08649d_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PYbIarEVfR/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PYbIarEVfR/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PYbIarEVfR/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PYbIarEVfR/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PYbIarEVfR/code.cpg.bin`
exported 1103 nodes, 3610 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PYbIarEVfR/export
‚úÖ CVE_2019_12817_1950_Linux_Kernel_CWE_787_Testset_614f355b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vMVddz9a9z/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vMVddz9a9z/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vMVddz9a9z/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vMVddz9a9z/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vMVddz9a9z/code.cpg.bin`
exported 1081 nodes, 3503 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vMVddz9a9z/export
‚úÖ CVE_2023_3863_4150_Linux_Kernel_CWE_416_Testset_b0284962_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MfbKkY6lol/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MfbKkY6lol/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MfbKkY6lol/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MfbKkY6lol/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MfbKkY6lol/code.cpg.bin`
exported 1575 nodes, 7136 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MfbKkY6lol/export
‚úÖ CVE_2022_48502_3799_Linux_Kernel_CWE_125_Testset_0bd774ee_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PUrhjufcds/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PUrhjufcds/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PUrhjufcds/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PUrhjufcds/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PUrhjufcds/code.cpg.bin`
exported 1445 nodes, 5841 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PUrhjufcds/export
‚úÖ CVE_2018_1093_1625_Linux_Kernel_CWE_125_Testset_9b9c962c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lVH5nkGLcM/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lVH5nkGLcM/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lVH5nkGLcM/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lVH5nkGLcM/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lVH5nkGLcM/code.cpg.bin`
exported 1291 nodes, 4907 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lVH5nkGLcM/export
‚úÖ CVE_2020_36557_2764_Linux_Kernel_CWE_416_Testset_cad2e39c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YoyNF9oTph/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YoyNF9oTph/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YoyNF9oTph/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YoyNF9oTph/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YoyNF9oTph/code.cpg.bin`
exported 1810 nodes, 9603 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YoyNF9oTph/export
‚úÖ CVE_2019_19064_2145_Linux_Kernel_CWE_401_Testset_f956de5b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9clGOKk1FG/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9clGOKk1FG/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9clGOKk1FG/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9clGOKk1FG/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9clGOKk1FG/code.cpg.bin`
exported 1792 nodes, 8981 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9clGOKk1FG/export
‚úÖ CVE_2012_3552_93_Linux_Kernel_CWE_362_Testset_2837e674_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1CVF4vizNp/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1CVF4vizNp/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1CVF4vizNp/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1CVF4vizNp/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1CVF4vizNp/code.cpg.bin`
exported 1300 nodes, 4938 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1CVF4vizNp/export
‚úÖ CVE_2023_2006_3894_Linux_Kernel_CWE_362_Testset_347ee41e_p OK
   üìä [320/586] Rate: 11.2 files/min | Success: 319
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DlM47n6Fhq/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DlM47n6Fhq/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DlM47n6Fhq/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DlM47n6Fhq/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DlM47n6Fhq/code.cpg.bin`
exported 1559 nodes, 7636 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DlM47n6Fhq/export
‚úÖ CVE_2019_19044_2125_Linux_Kernel_CWE_401_Testset_602ac201_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MsD5RN9Wio/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MsD5RN9Wio/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MsD5RN9Wio/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MsD5RN9Wio/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MsD5RN9Wio/code.cpg.bin`
exported 1522 nodes, 7439 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MsD5RN9Wio/export
‚úÖ CVE_2018_10883_1618_Linux_Kernel_CWE_787_Testset_579357c7_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AWMlQfvvpa/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AWMlQfvvpa/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AWMlQfvvpa/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AWMlQfvvpa/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AWMlQfvvpa/code.cpg.bin`
exported 2429 nodes, 15235 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AWMlQfvvpa/export
‚úÖ CVE_2019_19067_2148_Linux_Kernel_CWE_401_Testset_3771b614_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YDeHV4DlDx/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YDeHV4DlDx/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YDeHV4DlDx/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YDeHV4DlDx/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YDeHV4DlDx/code.cpg.bin`
exported 1393 nodes, 5663 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YDeHV4DlDx/export
‚úÖ CVE_2020_12114_2442_Linux_Kernel_CWE_362_Testset_8a8aed2d_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4gz8zlutg3/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4gz8zlutg3/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4gz8zlutg3/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4gz8zlutg3/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4gz8zlutg3/code.cpg.bin`
exported 1416 nodes, 5931 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4gz8zlutg3/export
‚úÖ CVE_2013_4513_323_Linux_Kernel_CWE_119_Testset_5b625877_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9UbSh1d1I4/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9UbSh1d1I4/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9UbSh1d1I4/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9UbSh1d1I4/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9UbSh1d1I4/code.cpg.bin`
exported 1188 nodes, 4222 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9UbSh1d1I4/export
‚úÖ CVE_2022_1419_3260_Linux_Kernel_CWE_416_Testset_7cbde52c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0VVyd3homh/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0VVyd3homh/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0VVyd3homh/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0VVyd3homh/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0VVyd3homh/code.cpg.bin`
exported 1283 nodes, 4980 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0VVyd3homh/export
‚úÖ CVE_2023_3610_4127_Linux_Kernel_CWE_416_Testset_01e92ecb_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.H3ZFNs5GGt/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.H3ZFNs5GGt/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.H3ZFNs5GGt/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.H3ZFNs5GGt/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.H3ZFNs5GGt/code.cpg.bin`
exported 1922 nodes, 10939 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.H3ZFNs5GGt/export
‚úÖ CVE_2022_47520_3765_Linux_Kernel_CWE_125_Testset_9f954cea_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XMcme2Dypn/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XMcme2Dypn/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XMcme2Dypn/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XMcme2Dypn/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XMcme2Dypn/code.cpg.bin`
exported 1411 nodes, 6217 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XMcme2Dypn/export
‚úÖ CVE_2017_1000380_1237_Linux_Kernel_CWE_200_Testset_5e446c68_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QVmY8wD4ok/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QVmY8wD4ok/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QVmY8wD4ok/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QVmY8wD4ok/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QVmY8wD4ok/code.cpg.bin`
exported 1098 nodes, 3551 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QVmY8wD4ok/export
‚úÖ CVE_2021_3736_3046_Linux_Kernel_CWE_401_Testset_a1591d91_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eFtv9kw6WY/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eFtv9kw6WY/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eFtv9kw6WY/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eFtv9kw6WY/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eFtv9kw6WY/code.cpg.bin`
exported 1648 nodes, 7845 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eFtv9kw6WY/export
‚úÖ CVE_2021_3715_3042_Linux_Kernel_CWE_416_Testset_b3560084_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tmxGUDDN5x/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tmxGUDDN5x/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tmxGUDDN5x/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tmxGUDDN5x/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tmxGUDDN5x/code.cpg.bin`
exported 1244 nodes, 4574 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tmxGUDDN5x/export
‚úÖ CVE_2020_29660_2704_Linux_Kernel_CWE_416_Testset_f1d2b02c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5mZSanlfA2/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5mZSanlfA2/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5mZSanlfA2/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5mZSanlfA2/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5mZSanlfA2/code.cpg.bin`
exported 1146 nodes, 3928 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5mZSanlfA2/export
‚úÖ CVE_2015_8963_873_Linux_Kernel_CWE_362_Testset_b412f573_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JiXUYj4dRN/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JiXUYj4dRN/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JiXUYj4dRN/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JiXUYj4dRN/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JiXUYj4dRN/code.cpg.bin`
exported 1488 nodes, 6471 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JiXUYj4dRN/export
‚úÖ CVE_2013_4591_335_Linux_Kernel_CWE_119_Testset_98629e98_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8fgC2jYc4M/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8fgC2jYc4M/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8fgC2jYc4M/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8fgC2jYc4M/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8fgC2jYc4M/code.cpg.bin`
exported 1115 nodes, 3719 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8fgC2jYc4M/export
‚úÖ CVE_2010_3432_22_Linux_Kernel_CWE_20_Testset_c2e836db_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rXB2UU7yQ5/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rXB2UU7yQ5/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rXB2UU7yQ5/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rXB2UU7yQ5/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rXB2UU7yQ5/code.cpg.bin`
exported 1315 nodes, 5159 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rXB2UU7yQ5/export
‚úÖ CVE_2013_1772_170_Linux_Kernel_CWE_119_Testset_0858cf6d_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vd6WCaevju/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vd6WCaevju/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vd6WCaevju/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vd6WCaevju/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vd6WCaevju/code.cpg.bin`
exported 1169 nodes, 4051 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vd6WCaevju/export
‚úÖ CVE_2015_9016_884_Linux_Kernel_CWE_264_Testset_24ce902a_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TH8Xbf2vyt/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TH8Xbf2vyt/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TH8Xbf2vyt/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TH8Xbf2vyt/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TH8Xbf2vyt/code.cpg.bin`
exported 1186 nodes, 4219 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TH8Xbf2vyt/export
‚úÖ CVE_2020_10711_2404_Linux_Kernel_CWE_476_Testset_b37560fe_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qwtOANwpCF/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qwtOANwpCF/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qwtOANwpCF/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qwtOANwpCF/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qwtOANwpCF/code.cpg.bin`
exported 2929 nodes, 17924 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qwtOANwpCF/export
‚úÖ CVE_2017_12762_1263_Linux_Kernel_CWE_119_Testset_6df4f47f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4CGgcDMGRP/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4CGgcDMGRP/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4CGgcDMGRP/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4CGgcDMGRP/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4CGgcDMGRP/code.cpg.bin`
exported 1083 nodes, 3541 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4CGgcDMGRP/export
‚úÖ CVE_2022_1976_3329_Linux_Kernel_CWE_416_Testset_5f6ad0e7_p OK
   üìä [340/586] Rate: 11.3 files/min | Success: 339
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3PnuTlj1Pa/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3PnuTlj1Pa/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3PnuTlj1Pa/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3PnuTlj1Pa/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3PnuTlj1Pa/code.cpg.bin`
exported 1027 nodes, 3199 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3PnuTlj1Pa/export
‚úÖ CVE_2018_17182_1726_Linux_Kernel_CWE_416_Testset_993c8a96_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BqYFHnw82w/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BqYFHnw82w/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BqYFHnw82w/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BqYFHnw82w/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BqYFHnw82w/code.cpg.bin`
exported 1753 nodes, 8982 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BqYFHnw82w/export
‚úÖ CVE_2019_12455_1946_Linux_Kernel_CWE_476_Testset_e2ffba41_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ra4NeqHRaQ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ra4NeqHRaQ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ra4NeqHRaQ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ra4NeqHRaQ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ra4NeqHRaQ/code.cpg.bin`
exported 1127 nodes, 3796 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ra4NeqHRaQ/export
‚úÖ CVE_2019_19815_2252_Linux_Kernel_CWE_476_Testset_1757bdaf_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Org3dxKVAj/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Org3dxKVAj/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Org3dxKVAj/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Org3dxKVAj/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Org3dxKVAj/code.cpg.bin`
exported 1432 nodes, 5736 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Org3dxKVAj/export
‚úÖ CVE_2014_0181_443_Linux_Kernel_CWE_264_Testset_97eebd23_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YfikOOVp5k/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YfikOOVp5k/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YfikOOVp5k/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YfikOOVp5k/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YfikOOVp5k/code.cpg.bin`
exported 1203 nodes, 4368 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.YfikOOVp5k/export
‚úÖ CVE_2015_3288_755_Linux_Kernel_CWE_20_Testset_f05c6c98_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0vlPjOPM66/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0vlPjOPM66/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0vlPjOPM66/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0vlPjOPM66/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0vlPjOPM66/code.cpg.bin`
exported 1387 nodes, 5755 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0vlPjOPM66/export
‚úÖ CVE_2018_10876_1608_Linux_Kernel_CWE_416_Testset_aa0a58d2_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AsoVs3urH2/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AsoVs3urH2/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AsoVs3urH2/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AsoVs3urH2/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AsoVs3urH2/code.cpg.bin`
exported 1701 nodes, 10394 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AsoVs3urH2/export
‚úÖ CVE_2016_2782_955_Linux_Kernel_CWE_476_Testset_7d7472e9_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GpJHby329u/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GpJHby329u/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GpJHby329u/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GpJHby329u/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GpJHby329u/code.cpg.bin`
exported 1962 nodes, 10325 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GpJHby329u/export
‚úÖ CVE_2012_6704_142_Linux_Kernel_CWE_119_Testset_5674cf36_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4Jb9dOV6pn/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4Jb9dOV6pn/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4Jb9dOV6pn/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4Jb9dOV6pn/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4Jb9dOV6pn/code.cpg.bin`
exported 1082 nodes, 3514 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4Jb9dOV6pn/export
‚úÖ CVE_2018_5814_1835_Linux_Kernel_CWE_362_Testset_902bc5db_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wnf8ED6hQK/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wnf8ED6hQK/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wnf8ED6hQK/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wnf8ED6hQK/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wnf8ED6hQK/code.cpg.bin`
exported 1000 nodes, 3087 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wnf8ED6hQK/export
‚úÖ CVE_2019_18808_2100_Linux_Kernel_CWE_401_Testset_5bcfb24d_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IhiyoKFscD/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IhiyoKFscD/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IhiyoKFscD/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IhiyoKFscD/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IhiyoKFscD/code.cpg.bin`
exported 1442 nodes, 6249 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IhiyoKFscD/export
‚úÖ CVE_2023_35827_4114_Linux_Kernel_CWE_416_Testset_25492a65_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6B91XWRsiM/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6B91XWRsiM/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6B91XWRsiM/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6B91XWRsiM/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6B91XWRsiM/code.cpg.bin`
exported 1148 nodes, 3965 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6B91XWRsiM/export
‚úÖ CVE_2019_19768_2233_Linux_Kernel_CWE_416_Testset_1660e3ca_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.p7EiM59vk7/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.p7EiM59vk7/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.p7EiM59vk7/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.p7EiM59vk7/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.p7EiM59vk7/code.cpg.bin`
exported 1821 nodes, 9299 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.p7EiM59vk7/export
‚úÖ CVE_2014_0181_456_Linux_Kernel_CWE_264_Testset_378dc6fc_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.95eEbTm5zx/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.95eEbTm5zx/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.95eEbTm5zx/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.95eEbTm5zx/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.95eEbTm5zx/code.cpg.bin`
exported 1018 nodes, 3157 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.95eEbTm5zx/export
‚úÖ CVE_2020_27067_2611_Linux_Kernel_CWE_362_Testset_11d50fe4_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z3IGetpuHo/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z3IGetpuHo/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z3IGetpuHo/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z3IGetpuHo/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z3IGetpuHo/code.cpg.bin`
exported 1492 nodes, 6457 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Z3IGetpuHo/export
‚úÖ CVE_2016_4997_1039_Linux_Kernel_CWE_264_Testset_07577930_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aJuh7qWc7d/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aJuh7qWc7d/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aJuh7qWc7d/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aJuh7qWc7d/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aJuh7qWc7d/code.cpg.bin`
exported 1115 nodes, 3745 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aJuh7qWc7d/export
‚úÖ CVE_2019_19523_2198_Linux_Kernel_CWE_416_Testset_30c9c3e7_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gduShPQD1D/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gduShPQD1D/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gduShPQD1D/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gduShPQD1D/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gduShPQD1D/code.cpg.bin`
exported 1078 nodes, 3487 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gduShPQD1D/export
‚úÖ CVE_2014_2673_492_Linux_Kernel_CWE_20_Testset_2fe82bb9_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gUAkkZdJUb/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gUAkkZdJUb/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gUAkkZdJUb/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gUAkkZdJUb/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gUAkkZdJUb/code.cpg.bin`
exported 1157 nodes, 4041 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gUAkkZdJUb/export
‚úÖ CVE_2021_43057_3160_Linux_Kernel_CWE_416_Testset_f4bd155c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aO4UTQ4iSS/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aO4UTQ4iSS/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aO4UTQ4iSS/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aO4UTQ4iSS/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aO4UTQ4iSS/code.cpg.bin`
exported 1237 nodes, 4697 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aO4UTQ4iSS/export
‚úÖ CVE_2013_7266_381_Linux_Kernel_CWE_20_Testset_658605a9_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VFb6O9JOnh/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VFb6O9JOnh/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VFb6O9JOnh/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VFb6O9JOnh/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VFb6O9JOnh/code.cpg.bin`
exported 1449 nodes, 6288 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.VFb6O9JOnh/export
‚úÖ CVE_2017_18200_1395_Linux_Kernel_CWE_20_Testset_b9e4aed6_p OK
   üìä [360/586] Rate: 11.4 files/min | Success: 359
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WtJ5Dw1nYh/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WtJ5Dw1nYh/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WtJ5Dw1nYh/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WtJ5Dw1nYh/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WtJ5Dw1nYh/code.cpg.bin`
exported 1272 nodes, 4957 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WtJ5Dw1nYh/export
‚úÖ CVE_2022_1976_3324_Linux_Kernel_CWE_416_Testset_91be0e53_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rHiDDXyDNe/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rHiDDXyDNe/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rHiDDXyDNe/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rHiDDXyDNe/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rHiDDXyDNe/code.cpg.bin`
exported 1493 nodes, 6917 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rHiDDXyDNe/export
‚úÖ CVE_2020_27835_2651_Linux_Kernel_CWE_416_Testset_b20c35c0_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xrI2O7FIWm/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xrI2O7FIWm/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xrI2O7FIWm/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xrI2O7FIWm/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xrI2O7FIWm/code.cpg.bin`
exported 1103 nodes, 3693 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xrI2O7FIWm/export
‚úÖ CVE_2019_10125_1891_Linux_Kernel_CWE_416_Testset_effeb2e5_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yMrJNO8sLg/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yMrJNO8sLg/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yMrJNO8sLg/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yMrJNO8sLg/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yMrJNO8sLg/code.cpg.bin`
exported 1092 nodes, 3588 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yMrJNO8sLg/export
‚úÖ CVE_2022_3169_3562_Linux_Kernel_CWE_20_Testset_c8e4e707_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dsNSQEFvGy/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dsNSQEFvGy/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dsNSQEFvGy/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dsNSQEFvGy/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dsNSQEFvGy/code.cpg.bin`
exported 1143 nodes, 3951 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dsNSQEFvGy/export
‚úÖ CVE_2022_20409_3354_Linux_Kernel_CWE_416_Testset_6cfbb381_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PJuF6XzJQl/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PJuF6XzJQl/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PJuF6XzJQl/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PJuF6XzJQl/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PJuF6XzJQl/code.cpg.bin`
exported 1132 nodes, 3893 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PJuF6XzJQl/export
‚úÖ CVE_2015_8961_869_Linux_Kernel_CWE_416_Testset_d1de697c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.InY4PXlYw7/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.InY4PXlYw7/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.InY4PXlYw7/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.InY4PXlYw7/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.InY4PXlYw7/code.cpg.bin`
exported 1073 nodes, 3481 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.InY4PXlYw7/export
‚úÖ CVE_2013_1772_177_Linux_Kernel_CWE_119_Testset_8125f97a_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l5oZ6ApwEz/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l5oZ6ApwEz/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l5oZ6ApwEz/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l5oZ6ApwEz/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l5oZ6ApwEz/code.cpg.bin`
exported 1442 nodes, 6249 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l5oZ6ApwEz/export
‚úÖ CVE_2023_35827_4114_Linux_Kernel_CWE_362_Testset_25492a65_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LA6AV7BI9m/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LA6AV7BI9m/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LA6AV7BI9m/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LA6AV7BI9m/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LA6AV7BI9m/code.cpg.bin`
exported 1446 nodes, 6051 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LA6AV7BI9m/export
‚úÖ CVE_2014_2706_496_Linux_Kernel_CWE_362_Testset_2478c8af_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.93iyFmLq4c/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.93iyFmLq4c/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.93iyFmLq4c/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.93iyFmLq4c/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.93iyFmLq4c/code.cpg.bin`
exported 1606 nodes, 7024 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.93iyFmLq4c/export
‚úÖ CVE_2021_38206_3083_Linux_Kernel_CWE_476_Testset_c2a141a9_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ytiYQ4oxKT/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ytiYQ4oxKT/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ytiYQ4oxKT/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ytiYQ4oxKT/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ytiYQ4oxKT/code.cpg.bin`
exported 1152 nodes, 4009 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ytiYQ4oxKT/export
‚úÖ CVE_2023_4132_4192_Linux_Kernel_CWE_416_Testset_7816e830_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Jl7VKk5R68/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Jl7VKk5R68/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Jl7VKk5R68/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Jl7VKk5R68/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Jl7VKk5R68/code.cpg.bin`
exported 1162 nodes, 4229 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Jl7VKk5R68/export
‚úÖ CVE_2016_3841_995_Linux_Kernel_CWE_264_Testset_238fdf5d_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SpeswsjEuU/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SpeswsjEuU/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SpeswsjEuU/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SpeswsjEuU/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SpeswsjEuU/code.cpg.bin`
exported 1268 nodes, 4753 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SpeswsjEuU/export
‚úÖ CVE_2016_9644_1154_Linux_Kernel_CWE_264_Testset_e4c20cf6_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1dyKK2I3tT/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1dyKK2I3tT/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1dyKK2I3tT/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1dyKK2I3tT/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1dyKK2I3tT/code.cpg.bin`
exported 1747 nodes, 9725 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1dyKK2I3tT/export
‚úÖ CVE_2022_45888_3753_Linux_Kernel_CWE_416_Testset_34c168ed_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QML2XkjBAr/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QML2XkjBAr/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QML2XkjBAr/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QML2XkjBAr/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QML2XkjBAr/code.cpg.bin`
exported 1299 nodes, 5206 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QML2XkjBAr/export
‚úÖ CVE_2018_9465_1870_Linux_Kernel_CWE_416_Testset_4c31402a_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tA0zuCd4EX/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tA0zuCd4EX/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tA0zuCd4EX/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tA0zuCd4EX/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tA0zuCd4EX/code.cpg.bin`
exported 1321 nodes, 5122 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tA0zuCd4EX/export
‚úÖ CVE_2021_42327_3156_Linux_Kernel_CWE_787_Testset_a5840209_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WXOPc98Gsh/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WXOPc98Gsh/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WXOPc98Gsh/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WXOPc98Gsh/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WXOPc98Gsh/code.cpg.bin`
exported 1371 nodes, 5486 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.WXOPc98Gsh/export
‚úÖ CVE_2023_45898_4227_Linux_Kernel_CWE_416_Testset_25334570_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4NEUw2DTK5/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4NEUw2DTK5/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4NEUw2DTK5/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4NEUw2DTK5/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4NEUw2DTK5/code.cpg.bin`
exported 1395 nodes, 5798 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4NEUw2DTK5/export
‚úÖ CVE_2023_4921_4254_Linux_Kernel_CWE_416_Testset_1a345f53_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MeoQHbMUjS/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MeoQHbMUjS/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MeoQHbMUjS/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MeoQHbMUjS/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MeoQHbMUjS/code.cpg.bin`
exported 1337 nodes, 5487 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MeoQHbMUjS/export
‚úÖ CVE_2023_26605_3971_Linux_Kernel_CWE_416_Testset_dec7cb3d_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8MlvM4d2MB/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8MlvM4d2MB/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8MlvM4d2MB/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8MlvM4d2MB/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8MlvM4d2MB/code.cpg.bin`
exported 1162 nodes, 4030 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8MlvM4d2MB/export
‚úÖ CVE_2019_18809_2101_Linux_Kernel_CWE_401_Testset_ecb025c6_p OK
   üìä [380/586] Rate: 11.3 files/min | Success: 379
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lnVRZg744r/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lnVRZg744r/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lnVRZg744r/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lnVRZg744r/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lnVRZg744r/code.cpg.bin`
exported 1152 nodes, 4004 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lnVRZg744r/export
‚úÖ CVE_2022_1198_3253_Linux_Kernel_CWE_416_Testset_3434f955_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jhNiO79Ntd/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jhNiO79Ntd/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jhNiO79Ntd/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jhNiO79Ntd/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jhNiO79Ntd/code.cpg.bin`
exported 1225 nodes, 4512 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jhNiO79Ntd/export
‚úÖ CVE_2017_18344_1431_Linux_Kernel_CWE_125_Testset_00a355e5_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BnJ7IwqyU0/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BnJ7IwqyU0/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BnJ7IwqyU0/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BnJ7IwqyU0/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BnJ7IwqyU0/code.cpg.bin`
exported 1255 nodes, 4684 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BnJ7IwqyU0/export
‚úÖ CVE_2022_48502_3801_Linux_Kernel_CWE_125_Testset_9a9dd0bf_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vc7XsGOSK5/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vc7XsGOSK5/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vc7XsGOSK5/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vc7XsGOSK5/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vc7XsGOSK5/code.cpg.bin`
exported 1063 nodes, 3406 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vc7XsGOSK5/export
‚úÖ CVE_2016_7910_1109_Linux_Kernel_CWE_416_Testset_6f0e1320_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OM8wkaVimx/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OM8wkaVimx/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OM8wkaVimx/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OM8wkaVimx/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OM8wkaVimx/code.cpg.bin`
exported 1319 nodes, 5615 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OM8wkaVimx/export
‚úÖ CVE_2013_0349_161_Linux_Kernel_CWE_200_Testset_24312e33_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xgCZmlM6B6/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xgCZmlM6B6/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xgCZmlM6B6/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xgCZmlM6B6/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xgCZmlM6B6/code.cpg.bin`
exported 1455 nodes, 6203 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xgCZmlM6B6/export
‚úÖ CVE_2014_2739_497_Linux_Kernel_CWE_20_Testset_c87ffddf_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bcwWmrGfmd/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bcwWmrGfmd/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bcwWmrGfmd/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bcwWmrGfmd/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bcwWmrGfmd/code.cpg.bin`
exported 1313 nodes, 5135 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bcwWmrGfmd/export
‚úÖ CVE_2013_4587_332_Linux_Kernel_CWE_20_Testset_f7eaf5cf_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b3mcCIWd5Z/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b3mcCIWd5Z/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b3mcCIWd5Z/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b3mcCIWd5Z/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b3mcCIWd5Z/code.cpg.bin`
exported 1105 nodes, 3640 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b3mcCIWd5Z/export
‚úÖ CVE_2022_1976_3328_Linux_Kernel_CWE_416_Testset_782ded07_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2KBfZbwK5y/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2KBfZbwK5y/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2KBfZbwK5y/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2KBfZbwK5y/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2KBfZbwK5y/code.cpg.bin`
exported 1250 nodes, 4577 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2KBfZbwK5y/export
‚úÖ CVE_2017_18509_1435_Linux_Kernel_CWE_20_Testset_fe0eec25_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IJBChX1Q4B/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IJBChX1Q4B/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IJBChX1Q4B/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IJBChX1Q4B/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IJBChX1Q4B/code.cpg.bin`
exported 1170 nodes, 4055 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.IJBChX1Q4B/export
‚úÖ CVE_2013_2232_223_Linux_Kernel_CWE_20_Testset_327e07a4_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ww5dP6wBgh/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ww5dP6wBgh/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ww5dP6wBgh/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ww5dP6wBgh/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ww5dP6wBgh/code.cpg.bin`
exported 1106 nodes, 3714 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ww5dP6wBgh/export
‚úÖ CVE_2020_0429_2382_Linux_Kernel_CWE_416_Testset_f8526fe6_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fS8ggwzNjU/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fS8ggwzNjU/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fS8ggwzNjU/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fS8ggwzNjU/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fS8ggwzNjU/code.cpg.bin`
exported 1055 nodes, 3324 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fS8ggwzNjU/export
‚úÖ CVE_2023_32233_4007_Linux_Kernel_CWE_416_Testset_5cdee47e_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.O0CvOCjBKy/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.O0CvOCjBKy/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.O0CvOCjBKy/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.O0CvOCjBKy/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.O0CvOCjBKy/code.cpg.bin`
exported 1007 nodes, 3112 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.O0CvOCjBKy/export
‚úÖ CVE_2013_1943_207_Linux_Kernel_CWE_20_Testset_84425441_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2JvaREGvsq/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2JvaREGvsq/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2JvaREGvsq/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2JvaREGvsq/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2JvaREGvsq/code.cpg.bin`
exported 1389 nodes, 5952 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2JvaREGvsq/export
‚úÖ CVE_2017_7487_1507_Linux_Kernel_CWE_416_Testset_35c063ce_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z7bhnCsQ7z/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z7bhnCsQ7z/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z7bhnCsQ7z/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z7bhnCsQ7z/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z7bhnCsQ7z/code.cpg.bin`
exported 1392 nodes, 5558 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.z7bhnCsQ7z/export
‚úÖ CVE_2016_9755_1162_Linux_Kernel_CWE_787_Testset_a5cc172d_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T4vAhjnzly/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T4vAhjnzly/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T4vAhjnzly/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T4vAhjnzly/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T4vAhjnzly/code.cpg.bin`
exported 1356 nodes, 5514 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T4vAhjnzly/export
‚úÖ CVE_2015_3214_753_Linux_Kernel_CWE_119_Testset_4430f63c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hTq7A1pAbm/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hTq7A1pAbm/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hTq7A1pAbm/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hTq7A1pAbm/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hTq7A1pAbm/code.cpg.bin`
exported 1165 nodes, 4022 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hTq7A1pAbm/export
‚úÖ CVE_2018_19407_1744_Linux_Kernel_CWE_476_Testset_e1003552_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DyXG5Sa4eq/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DyXG5Sa4eq/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DyXG5Sa4eq/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DyXG5Sa4eq/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DyXG5Sa4eq/code.cpg.bin`
exported 1117 nodes, 3771 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DyXG5Sa4eq/export
‚úÖ CVE_2022_1976_3323_Linux_Kernel_CWE_416_Testset_aa007c0f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lImGcVeUHg/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lImGcVeUHg/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lImGcVeUHg/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lImGcVeUHg/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lImGcVeUHg/code.cpg.bin`
exported 1380 nodes, 5723 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lImGcVeUHg/export
‚úÖ CVE_2022_1011_3231_Linux_Kernel_CWE_416_Testset_2294a997_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b4BMEBWqLm/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b4BMEBWqLm/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b4BMEBWqLm/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b4BMEBWqLm/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b4BMEBWqLm/code.cpg.bin`
exported 1844 nodes, 9493 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.b4BMEBWqLm/export
‚úÖ CVE_2016_3841_1004_Linux_Kernel_CWE_264_Testset_f3f58720_p OK
   üìä [400/586] Rate: 11.2 files/min | Success: 399
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AW0IHOyjra/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AW0IHOyjra/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AW0IHOyjra/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AW0IHOyjra/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AW0IHOyjra/code.cpg.bin`
exported 1184 nodes, 4179 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AW0IHOyjra/export
‚úÖ CVE_2014_0100_428_Linux_Kernel_CWE_362_Testset_b29aa279_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.70FyxVT6vN/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.70FyxVT6vN/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.70FyxVT6vN/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.70FyxVT6vN/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.70FyxVT6vN/code.cpg.bin`
exported 1103 nodes, 3607 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.70FyxVT6vN/export
‚úÖ CVE_2020_0305_2377_Linux_Kernel_CWE_416_Testset_7d5d5eef_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MSjXnyjIVj/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MSjXnyjIVj/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MSjXnyjIVj/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MSjXnyjIVj/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MSjXnyjIVj/code.cpg.bin`
exported 1127 nodes, 3741 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MSjXnyjIVj/export
‚úÖ CVE_2020_36557_2765_Linux_Kernel_CWE_362_Testset_f257cd71_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9SBf9hRkBH/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9SBf9hRkBH/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9SBf9hRkBH/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9SBf9hRkBH/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9SBf9hRkBH/code.cpg.bin`
exported 1164 nodes, 3949 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9SBf9hRkBH/export
‚úÖ CVE_2019_13233_1957_Linux_Kernel_CWE_362_Testset_64370603_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.etbmf4Qjad/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.etbmf4Qjad/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.etbmf4Qjad/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.etbmf4Qjad/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.etbmf4Qjad/code.cpg.bin`
exported 1201 nodes, 4400 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.etbmf4Qjad/export
‚úÖ CVE_2018_5814_1837_Linux_Kernel_CWE_362_Testset_3adb0e5d_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6UKxWy1LQT/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6UKxWy1LQT/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6UKxWy1LQT/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6UKxWy1LQT/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6UKxWy1LQT/code.cpg.bin`
exported 1577 nodes, 7967 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6UKxWy1LQT/export
‚úÖ CVE_2021_27365_2902_Linux_Kernel_CWE_787_Testset_393c7385_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vOZzuY4mLZ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vOZzuY4mLZ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vOZzuY4mLZ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vOZzuY4mLZ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vOZzuY4mLZ/code.cpg.bin`
exported 1069 nodes, 3432 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vOZzuY4mLZ/export
‚úÖ CVE_2020_27675_2622_Linux_Kernel_CWE_416_Testset_a0a976eb_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MoTOqcDjwi/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MoTOqcDjwi/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MoTOqcDjwi/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MoTOqcDjwi/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MoTOqcDjwi/code.cpg.bin`
exported 1634 nodes, 7977 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MoTOqcDjwi/export
‚úÖ CVE_2017_13695_1278_Linux_Kernel_CWE_200_Testset_bb2bb3d2_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.O5VN3ZuUr4/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.O5VN3ZuUr4/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.O5VN3ZuUr4/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.O5VN3ZuUr4/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.O5VN3ZuUr4/code.cpg.bin`
exported 1348 nodes, 5614 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.O5VN3ZuUr4/export
‚úÖ CVE_2023_5717_4288_Linux_Kernel_CWE_787_Testset_a58b6a64_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xao386lDkn/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xao386lDkn/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xao386lDkn/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xao386lDkn/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xao386lDkn/code.cpg.bin`
exported 1643 nodes, 7784 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xao386lDkn/export
‚úÖ CVE_2018_20510_1769_Linux_Kernel_CWE_200_Testset_30e18a1d_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9QlnVZzhIN/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9QlnVZzhIN/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9QlnVZzhIN/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9QlnVZzhIN/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9QlnVZzhIN/code.cpg.bin`
exported 1182 nodes, 4114 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9QlnVZzhIN/export
‚úÖ CVE_2019_13233_1958_Linux_Kernel_CWE_416_Testset_6fca8dcb_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CaA0bseQSR/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CaA0bseQSR/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CaA0bseQSR/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CaA0bseQSR/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CaA0bseQSR/code.cpg.bin`
exported 1588 nodes, 6823 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CaA0bseQSR/export
‚úÖ CVE_2013_7263_361_Linux_Kernel_CWE_20_Testset_0eb8484b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U1iz8xijOe/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U1iz8xijOe/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U1iz8xijOe/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U1iz8xijOe/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U1iz8xijOe/code.cpg.bin`
exported 1124 nodes, 3817 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.U1iz8xijOe/export
‚úÖ CVE_2013_6368_342_Linux_Kernel_CWE_20_Testset_20bb1f03_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eM5rzriPpK/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eM5rzriPpK/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eM5rzriPpK/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eM5rzriPpK/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eM5rzriPpK/code.cpg.bin`
exported 1378 nodes, 5858 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eM5rzriPpK/export
‚úÖ CVE_2021_37576_3058_Linux_Kernel_CWE_787_Testset_d26e889a_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RxLaW9vmDV/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RxLaW9vmDV/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RxLaW9vmDV/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RxLaW9vmDV/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RxLaW9vmDV/code.cpg.bin`
exported 1144 nodes, 3863 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RxLaW9vmDV/export
‚úÖ CVE_2016_10154_897_Linux_Kernel_CWE_119_Testset_bf9e7cfd_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bnWC9Y9Cu4/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bnWC9Y9Cu4/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bnWC9Y9Cu4/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bnWC9Y9Cu4/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bnWC9Y9Cu4/code.cpg.bin`
exported 1157 nodes, 4000 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bnWC9Y9Cu4/export
‚úÖ CVE_2013_1928_204_Linux_Kernel_CWE_200_Testset_e3e56278_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LwfzSDLMe8/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LwfzSDLMe8/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LwfzSDLMe8/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LwfzSDLMe8/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LwfzSDLMe8/code.cpg.bin`
exported 1203 nodes, 4321 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LwfzSDLMe8/export
‚úÖ CVE_2019_15922_2031_Linux_Kernel_CWE_476_Testset_1184772f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yQxKpcuDQe/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yQxKpcuDQe/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yQxKpcuDQe/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yQxKpcuDQe/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yQxKpcuDQe/code.cpg.bin`
exported 1681 nodes, 8260 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yQxKpcuDQe/export
‚úÖ CVE_2014_0077_427_Linux_Kernel_CWE_787_Testset_7115e615_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cS6gzPOmG2/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cS6gzPOmG2/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cS6gzPOmG2/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cS6gzPOmG2/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cS6gzPOmG2/code.cpg.bin`
exported 1163 nodes, 4182 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cS6gzPOmG2/export
‚úÖ CVE_2017_15274_1302_Linux_Kernel_CWE_476_Testset_2115671b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DHkVSO6sby/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DHkVSO6sby/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DHkVSO6sby/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DHkVSO6sby/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DHkVSO6sby/code.cpg.bin`
exported 1222 nodes, 4544 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DHkVSO6sby/export
‚úÖ CVE_2015_5697_777_Linux_Kernel_CWE_200_Testset_7c8b14e0_p OK
   üìä [420/586] Rate: 11.2 files/min | Success: 419
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UFnb8Ue8Pj/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UFnb8Ue8Pj/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UFnb8Ue8Pj/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UFnb8Ue8Pj/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UFnb8Ue8Pj/code.cpg.bin`
exported 2160 nodes, 10977 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UFnb8Ue8Pj/export
‚úÖ CVE_2023_3610_4124_Linux_Kernel_CWE_416_Testset_7ca0c9d3_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d3nxX5H32q/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d3nxX5H32q/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d3nxX5H32q/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d3nxX5H32q/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d3nxX5H32q/code.cpg.bin`
exported 1130 nodes, 3841 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.d3nxX5H32q/export
‚úÖ CVE_2017_8240_1552_Linux_Kernel_CWE_125_Testset_992d0763_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lmDgU5tS5v/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lmDgU5tS5v/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lmDgU5tS5v/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lmDgU5tS5v/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lmDgU5tS5v/code.cpg.bin`
exported 1186 nodes, 4187 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lmDgU5tS5v/export
‚úÖ CVE_2019_18814_2106_Linux_Kernel_CWE_416_Testset_cdca6700_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cjdiUWo1yb/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cjdiUWo1yb/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cjdiUWo1yb/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cjdiUWo1yb/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cjdiUWo1yb/code.cpg.bin`
exported 1197 nodes, 4363 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cjdiUWo1yb/export
‚úÖ CVE_2023_1193_3853_Linux_Kernel_CWE_416_Testset_db70454c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T1wAL8pckn/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T1wAL8pckn/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T1wAL8pckn/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T1wAL8pckn/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T1wAL8pckn/code.cpg.bin`
exported 1120 nodes, 3751 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.T1wAL8pckn/export
‚úÖ CVE_2020_36387_2754_Linux_Kernel_CWE_416_Testset_888d530b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CEvBrIaGsb/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CEvBrIaGsb/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CEvBrIaGsb/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CEvBrIaGsb/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CEvBrIaGsb/code.cpg.bin`
exported 1317 nodes, 5018 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CEvBrIaGsb/export
‚úÖ CVE_2013_3232_272_Linux_Kernel_CWE_200_Testset_5ee4b8a3_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uJrON9rYtb/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uJrON9rYtb/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uJrON9rYtb/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uJrON9rYtb/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uJrON9rYtb/code.cpg.bin`
exported 1158 nodes, 4011 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uJrON9rYtb/export
‚úÖ CVE_2019_15090_1984_Linux_Kernel_CWE_125_Testset_fdcaa549_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0i2X71uE6q/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0i2X71uE6q/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0i2X71uE6q/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0i2X71uE6q/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0i2X71uE6q/code.cpg.bin`
exported 1987 nodes, 11679 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0i2X71uE6q/export
‚úÖ CVE_2019_3459_2307_Linux_Kernel_CWE_125_Testset_e1fae0ee_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kfq9QQ12LS/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kfq9QQ12LS/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kfq9QQ12LS/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kfq9QQ12LS/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kfq9QQ12LS/code.cpg.bin`
exported 1164 nodes, 3949 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kfq9QQ12LS/export
‚úÖ CVE_2019_13233_1957_Linux_Kernel_CWE_416_Testset_64370603_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XMCNSTbDsl/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XMCNSTbDsl/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XMCNSTbDsl/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XMCNSTbDsl/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XMCNSTbDsl/code.cpg.bin`
exported 1127 nodes, 3741 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XMCNSTbDsl/export
‚úÖ CVE_2020_36557_2765_Linux_Kernel_CWE_416_Testset_f257cd71_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PDgt2hOPG9/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PDgt2hOPG9/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PDgt2hOPG9/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PDgt2hOPG9/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PDgt2hOPG9/code.cpg.bin`
exported 1110 nodes, 3663 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PDgt2hOPG9/export
‚úÖ CVE_2022_47946_3786_Linux_Kernel_CWE_416_Testset_16eb593b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PHG7djqJQY/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PHG7djqJQY/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PHG7djqJQY/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PHG7djqJQY/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PHG7djqJQY/code.cpg.bin`
exported 2016 nodes, 10722 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PHG7djqJQY/export
‚úÖ CVE_2023_3220_4005_Linux_Kernel_CWE_476_Testset_70cbcbc8_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9kkUhRiCEo/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9kkUhRiCEo/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9kkUhRiCEo/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9kkUhRiCEo/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9kkUhRiCEo/code.cpg.bin`
exported 1257 nodes, 4598 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9kkUhRiCEo/export
‚úÖ CVE_2022_2153_3413_Linux_Kernel_CWE_476_Testset_5315467e_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RRtrBsx4NA/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RRtrBsx4NA/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RRtrBsx4NA/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RRtrBsx4NA/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RRtrBsx4NA/code.cpg.bin`
exported 1497 nodes, 6180 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RRtrBsx4NA/export
‚úÖ CVE_2013_3235_275_Linux_Kernel_CWE_200_Testset_f81ff38f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3LUpotka8a/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3LUpotka8a/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3LUpotka8a/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3LUpotka8a/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3LUpotka8a/code.cpg.bin`
exported 1069 nodes, 3432 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3LUpotka8a/export
‚úÖ CVE_2020_27675_2622_Linux_Kernel_CWE_362_Testset_a0a976eb_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.egwkZCp59j/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.egwkZCp59j/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.egwkZCp59j/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.egwkZCp59j/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.egwkZCp59j/code.cpg.bin`
exported 1321 nodes, 5215 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.egwkZCp59j/export
‚úÖ CVE_2023_5633_4275_Linux_Kernel_CWE_416_Testset_4b8e2c96_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.akx4hDWm1n/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.akx4hDWm1n/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.akx4hDWm1n/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.akx4hDWm1n/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.akx4hDWm1n/code.cpg.bin`
exported 1229 nodes, 4555 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.akx4hDWm1n/export
‚úÖ CVE_2022_32250_3569_Linux_Kernel_CWE_416_Testset_d3883b37_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hOR427XM9U/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hOR427XM9U/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hOR427XM9U/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hOR427XM9U/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hOR427XM9U/code.cpg.bin`
exported 1249 nodes, 4681 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hOR427XM9U/export
‚úÖ CVE_2022_23222_3449_Linux_Kernel_CWE_476_Testset_718a9878_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sSyISFVPOl/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sSyISFVPOl/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sSyISFVPOl/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sSyISFVPOl/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sSyISFVPOl/code.cpg.bin`
exported 1422 nodes, 6283 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.sSyISFVPOl/export
‚úÖ CVE_2021_29265_2947_Linux_Kernel_CWE_362_Testset_2c2768ba_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ygqF7H8v95/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ygqF7H8v95/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ygqF7H8v95/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ygqF7H8v95/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ygqF7H8v95/code.cpg.bin`
exported 1081 nodes, 3584 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ygqF7H8v95/export
‚úÖ CVE_2019_15098_1987_Linux_Kernel_CWE_476_Testset_80398359_p OK
   üìä [440/586] Rate: 11.2 files/min | Success: 439
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tzDWv58X1F/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tzDWv58X1F/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tzDWv58X1F/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tzDWv58X1F/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tzDWv58X1F/code.cpg.bin`
exported 1086 nodes, 3526 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tzDWv58X1F/export
‚úÖ CVE_2022_1462_3261_Linux_Kernel_CWE_362_Testset_f8361848_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c06Ec2FmVz/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c06Ec2FmVz/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c06Ec2FmVz/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c06Ec2FmVz/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c06Ec2FmVz/code.cpg.bin`
exported 1077 nodes, 3442 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.c06Ec2FmVz/export
‚úÖ CVE_2020_14416_2541_Linux_Kernel_CWE_416_Testset_dbf8d7b3_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zVBE8NQADa/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zVBE8NQADa/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zVBE8NQADa/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zVBE8NQADa/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zVBE8NQADa/code.cpg.bin`
exported 1618 nodes, 7736 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.zVBE8NQADa/export
‚úÖ CVE_2015_3331_757_Linux_Kernel_CWE_119_Testset_7d22f9be_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x6AcRlihYN/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x6AcRlihYN/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x6AcRlihYN/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x6AcRlihYN/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x6AcRlihYN/code.cpg.bin`
exported 1152 nodes, 3984 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.x6AcRlihYN/export
‚úÖ CVE_2021_0941_2839_Linux_Kernel_CWE_416_Testset_707e6ed5_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FTnHjIAG5S/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FTnHjIAG5S/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FTnHjIAG5S/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FTnHjIAG5S/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FTnHjIAG5S/code.cpg.bin`
exported 1237 nodes, 4590 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FTnHjIAG5S/export
‚úÖ CVE_2020_27835_2650_Linux_Kernel_CWE_416_Testset_81443f29_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fhyodyi9eV/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fhyodyi9eV/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fhyodyi9eV/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fhyodyi9eV/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fhyodyi9eV/code.cpg.bin`
exported 1190 nodes, 4277 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fhyodyi9eV/export
‚úÖ CVE_2013_1798_190_Linux_Kernel_CWE_20_Testset_48cbc58c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pJBm2qgZhC/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pJBm2qgZhC/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pJBm2qgZhC/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pJBm2qgZhC/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pJBm2qgZhC/code.cpg.bin`
exported 1281 nodes, 4939 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pJBm2qgZhC/export
‚úÖ CVE_2015_4176_765_Linux_Kernel_CWE_200_Testset_1cdc6caf_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uLmmfejXAb/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uLmmfejXAb/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uLmmfejXAb/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uLmmfejXAb/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uLmmfejXAb/code.cpg.bin`
exported 1205 nodes, 4399 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uLmmfejXAb/export
‚úÖ CVE_2013_2888_244_Linux_Kernel_CWE_20_Testset_62878275_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9YGvWgfYtf/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9YGvWgfYtf/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9YGvWgfYtf/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9YGvWgfYtf/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9YGvWgfYtf/code.cpg.bin`
exported 1177 nodes, 4273 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9YGvWgfYtf/export
‚úÖ CVE_2016_6516_1077_Linux_Kernel_CWE_119_Testset_b29468e3_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qL1igWBPdF/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qL1igWBPdF/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qL1igWBPdF/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qL1igWBPdF/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qL1igWBPdF/code.cpg.bin`
exported 1124 nodes, 3819 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qL1igWBPdF/export
‚úÖ CVE_2020_27825_2637_Linux_Kernel_CWE_362_Testset_f28c9e1d_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6IYDzO7ojr/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6IYDzO7ojr/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6IYDzO7ojr/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6IYDzO7ojr/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6IYDzO7ojr/code.cpg.bin`
exported 1486 nodes, 6226 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6IYDzO7ojr/export
‚úÖ CVE_2013_7281_410_Linux_Kernel_CWE_200_Testset_fc913239_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kW03PzNlnp/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kW03PzNlnp/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kW03PzNlnp/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kW03PzNlnp/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kW03PzNlnp/code.cpg.bin`
exported 1078 nodes, 3492 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kW03PzNlnp/export
‚úÖ CVE_2015_8709_836_Linux_Kernel_CWE_264_Testset_873f529b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Dt5AzoaxuY/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Dt5AzoaxuY/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Dt5AzoaxuY/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Dt5AzoaxuY/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Dt5AzoaxuY/code.cpg.bin`
exported 1527 nodes, 6747 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Dt5AzoaxuY/export
‚úÖ CVE_2023_25012_3959_Linux_Kernel_CWE_416_Testset_96f5de78_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hxWdono6ax/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hxWdono6ax/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hxWdono6ax/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hxWdono6ax/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hxWdono6ax/code.cpg.bin`
exported 1330 nodes, 5003 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hxWdono6ax/export
‚úÖ CVE_2014_0181_438_Linux_Kernel_CWE_264_Testset_88e324ec_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.maSgePYjoR/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.maSgePYjoR/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.maSgePYjoR/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.maSgePYjoR/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.maSgePYjoR/code.cpg.bin`
exported 1516 nodes, 6703 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.maSgePYjoR/export
‚úÖ CVE_2019_18885_2113_Linux_Kernel_CWE_476_Testset_a356150c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wzh3lk4cnU/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wzh3lk4cnU/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wzh3lk4cnU/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wzh3lk4cnU/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wzh3lk4cnU/code.cpg.bin`
exported 1170 nodes, 4118 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wzh3lk4cnU/export
‚úÖ CVE_2020_27835_2645_Linux_Kernel_CWE_416_Testset_14646a15_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9G4NE3kgDJ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9G4NE3kgDJ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9G4NE3kgDJ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9G4NE3kgDJ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9G4NE3kgDJ/code.cpg.bin`
exported 1335 nodes, 5235 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9G4NE3kgDJ/export
‚úÖ CVE_2019_19462_2197_Linux_Kernel_CWE_476_Testset_7efcc51c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vpBUfGhoLw/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vpBUfGhoLw/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vpBUfGhoLw/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vpBUfGhoLw/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vpBUfGhoLw/code.cpg.bin`
exported 1562 nodes, 7013 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.vpBUfGhoLw/export
‚úÖ CVE_2017_1000251_1189_Linux_Kernel_CWE_787_Testset_bd3ae88f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6UD2CJMgDI/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6UD2CJMgDI/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6UD2CJMgDI/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6UD2CJMgDI/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6UD2CJMgDI/code.cpg.bin`
exported 1043 nodes, 3280 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6UD2CJMgDI/export
‚úÖ CVE_2023_35823_4110_Linux_Kernel_CWE_362_Testset_b82cee8f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cxREalQ5b9/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cxREalQ5b9/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cxREalQ5b9/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cxREalQ5b9/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cxREalQ5b9/code.cpg.bin`
exported 1511 nodes, 6778 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cxREalQ5b9/export
‚úÖ CVE_2016_10905_908_Linux_Kernel_CWE_416_Testset_9aa6db63_p OK
   üìä [460/586] Rate: 11.2 files/min | Success: 459
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ni9Gym2BYR/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ni9Gym2BYR/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ni9Gym2BYR/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ni9Gym2BYR/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ni9Gym2BYR/code.cpg.bin`
exported 1699 nodes, 9437 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ni9Gym2BYR/export
‚úÖ CVE_2019_19046_2127_Linux_Kernel_CWE_401_Testset_b68cfb15_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LXYJRqrYKX/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LXYJRqrYKX/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LXYJRqrYKX/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LXYJRqrYKX/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LXYJRqrYKX/code.cpg.bin`
exported 1535 nodes, 6609 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LXYJRqrYKX/export
‚úÖ CVE_2023_3269_4053_Linux_Kernel_CWE_416_Testset_8c5e84cc_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DFbCfTwg6n/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DFbCfTwg6n/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DFbCfTwg6n/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DFbCfTwg6n/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DFbCfTwg6n/code.cpg.bin`
exported 1227 nodes, 4597 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DFbCfTwg6n/export
‚úÖ CVE_2020_27835_2642_Linux_Kernel_CWE_416_Testset_5eca977e_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MJfe6ScPGI/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MJfe6ScPGI/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MJfe6ScPGI/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MJfe6ScPGI/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MJfe6ScPGI/code.cpg.bin`
exported 1080 nodes, 3503 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MJfe6ScPGI/export
‚úÖ CVE_2020_10742_2409_Linux_Kernel_CWE_787_Testset_2cee9e0d_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SbTCGGnDef/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SbTCGGnDef/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SbTCGGnDef/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SbTCGGnDef/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SbTCGGnDef/code.cpg.bin`
exported 1332 nodes, 5236 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SbTCGGnDef/export
‚úÖ CVE_2013_7263_360_Linux_Kernel_CWE_20_Testset_24c1def9_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LkxowzvxJb/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LkxowzvxJb/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LkxowzvxJb/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LkxowzvxJb/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LkxowzvxJb/code.cpg.bin`
exported 1164 nodes, 4177 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.LkxowzvxJb/export
‚úÖ CVE_2023_6111_4297_Linux_Kernel_CWE_416_Testset_98a6d86c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZfqF4PMyW2/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZfqF4PMyW2/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZfqF4PMyW2/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZfqF4PMyW2/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZfqF4PMyW2/code.cpg.bin`
exported 1571 nodes, 6991 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZfqF4PMyW2/export
‚úÖ CVE_2016_4998_1048_Linux_Kernel_CWE_119_Testset_f9a8b0b6_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mufViUHI8s/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mufViUHI8s/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mufViUHI8s/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mufViUHI8s/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mufViUHI8s/code.cpg.bin`
exported 1215 nodes, 4396 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mufViUHI8s/export
‚úÖ CVE_2020_10769_2422_Linux_Kernel_CWE_125_Testset_1d778619_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cgTpLqMEVF/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cgTpLqMEVF/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cgTpLqMEVF/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cgTpLqMEVF/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cgTpLqMEVF/code.cpg.bin`
exported 1164 nodes, 4095 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cgTpLqMEVF/export
‚úÖ CVE_2023_5717_4292_Linux_Kernel_CWE_787_Testset_d5aed263_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6zYkU7duFo/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6zYkU7duFo/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6zYkU7duFo/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6zYkU7duFo/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6zYkU7duFo/code.cpg.bin`
exported 1293 nodes, 4925 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6zYkU7duFo/export
‚úÖ CVE_2022_45888_3754_Linux_Kernel_CWE_362_Testset_54a579f2_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BUbDtC33Xt/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BUbDtC33Xt/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BUbDtC33Xt/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BUbDtC33Xt/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BUbDtC33Xt/code.cpg.bin`
exported 1529 nodes, 6911 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BUbDtC33Xt/export
‚úÖ CVE_2022_48502_3793_Linux_Kernel_CWE_125_Testset_f613ab20_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rYMh08mPDL/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rYMh08mPDL/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rYMh08mPDL/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rYMh08mPDL/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rYMh08mPDL/code.cpg.bin`
exported 1286 nodes, 5005 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.rYMh08mPDL/export
‚úÖ CVE_2013_0160_146_Linux_Kernel_CWE_200_Testset_77a3783f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1xcUwyFgKU/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1xcUwyFgKU/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1xcUwyFgKU/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1xcUwyFgKU/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1xcUwyFgKU/code.cpg.bin`
exported 1502 nodes, 6711 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1xcUwyFgKU/export
‚úÖ CVE_2019_19807_2244_Linux_Kernel_CWE_416_Testset_c82e091e_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gGVrp0ObKs/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gGVrp0ObKs/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gGVrp0ObKs/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gGVrp0ObKs/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gGVrp0ObKs/code.cpg.bin`
exported 1000 nodes, 3087 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.gGVrp0ObKs/export
‚úÖ CVE_2019_6133_2341_Linux_Kernel_CWE_362_Testset_9242eef6_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4gnwrHFVLM/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4gnwrHFVLM/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4gnwrHFVLM/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4gnwrHFVLM/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4gnwrHFVLM/code.cpg.bin`
exported 1094 nodes, 3579 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4gnwrHFVLM/export
‚úÖ CVE_2020_27675_2621_Linux_Kernel_CWE_476_Testset_314a1ef5_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1rsUbYjVDk/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1rsUbYjVDk/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1rsUbYjVDk/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1rsUbYjVDk/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1rsUbYjVDk/code.cpg.bin`
exported 1442 nodes, 5946 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1rsUbYjVDk/export
‚úÖ CVE_2013_0871_162_Linux_Kernel_CWE_362_Testset_c5405f79_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6OdxZynhLY/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6OdxZynhLY/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6OdxZynhLY/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6OdxZynhLY/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6OdxZynhLY/code.cpg.bin`
exported 1654 nodes, 7947 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.6OdxZynhLY/export
‚úÖ CVE_2022_33742_3587_Linux_Kernel_CWE_200_Testset_3c0a8e1f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oGlWCwdjS2/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oGlWCwdjS2/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oGlWCwdjS2/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oGlWCwdjS2/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oGlWCwdjS2/code.cpg.bin`
exported 1193 nodes, 4218 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.oGlWCwdjS2/export
‚úÖ CVE_2022_1786_3282_Linux_Kernel_CWE_416_Testset_dd35a289_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PxPfVq0BAN/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PxPfVq0BAN/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PxPfVq0BAN/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PxPfVq0BAN/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PxPfVq0BAN/code.cpg.bin`
exported 1118 nodes, 3720 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.PxPfVq0BAN/export
‚úÖ CVE_2021_20292_2871_Linux_Kernel_CWE_416_Testset_3144cd55_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BeNZO5Un1x/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BeNZO5Un1x/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BeNZO5Un1x/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BeNZO5Un1x/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BeNZO5Un1x/code.cpg.bin`
exported 1029 nodes, 3226 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.BeNZO5Un1x/export
‚úÖ CVE_2018_12232_1650_Linux_Kernel_CWE_362_Testset_234ae365_p OK
   üìä [480/586] Rate: 11.2 files/min | Success: 479
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0nV771l4KZ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0nV771l4KZ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0nV771l4KZ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0nV771l4KZ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0nV771l4KZ/code.cpg.bin`
exported 1088 nodes, 3575 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0nV771l4KZ/export
‚úÖ CVE_2018_15594_1710_Linux_Kernel_CWE_200_Testset_bc61f0c7_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7WbdgeVo86/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7WbdgeVo86/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7WbdgeVo86/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7WbdgeVo86/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7WbdgeVo86/code.cpg.bin`
exported 1168 nodes, 4173 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7WbdgeVo86/export
‚úÖ CVE_2020_14390_2526_Linux_Kernel_CWE_787_Testset_e955bd67_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cPPYsNJA4Q/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cPPYsNJA4Q/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cPPYsNJA4Q/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cPPYsNJA4Q/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cPPYsNJA4Q/code.cpg.bin`
exported 1460 nodes, 6388 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cPPYsNJA4Q/export
‚úÖ CVE_2020_36385_2752_Linux_Kernel_CWE_416_Testset_dd05f7e3_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NSWxtlyTZn/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NSWxtlyTZn/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NSWxtlyTZn/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NSWxtlyTZn/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NSWxtlyTZn/code.cpg.bin`
exported 1068 nodes, 3455 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NSWxtlyTZn/export
‚úÖ CVE_2022_21499_3410_Linux_Kernel_CWE_787_Testset_2b3fcfa8_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UC0Jc8IUbS/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UC0Jc8IUbS/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UC0Jc8IUbS/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UC0Jc8IUbS/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UC0Jc8IUbS/code.cpg.bin`
exported 1125 nodes, 3778 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UC0Jc8IUbS/export
‚úÖ CVE_2019_19768_2235_Linux_Kernel_CWE_416_Testset_46fa3f8c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ila6JhmcXG/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ila6JhmcXG/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ila6JhmcXG/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ila6JhmcXG/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ila6JhmcXG/code.cpg.bin`
exported 1215 nodes, 4269 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Ila6JhmcXG/export
‚úÖ CVE_2019_15223_2012_Linux_Kernel_CWE_476_Testset_e8cc1e21_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Nwaya1UyCj/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Nwaya1UyCj/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Nwaya1UyCj/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Nwaya1UyCj/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Nwaya1UyCj/code.cpg.bin`
exported 1668 nodes, 8884 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Nwaya1UyCj/export
‚úÖ CVE_2019_3459_2309_Linux_Kernel_CWE_125_Testset_ee6215bb_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dwUREgpZ3g/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dwUREgpZ3g/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dwUREgpZ3g/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dwUREgpZ3g/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dwUREgpZ3g/code.cpg.bin`
exported 1173 nodes, 4058 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dwUREgpZ3g/export
‚úÖ CVE_2020_36557_2766_Linux_Kernel_CWE_362_Testset_d962cde7_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.faAmFdA49I/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.faAmFdA49I/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.faAmFdA49I/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.faAmFdA49I/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.faAmFdA49I/code.cpg.bin`
exported 1226 nodes, 4515 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.faAmFdA49I/export
‚úÖ CVE_2020_0427_2380_Linux_Kernel_CWE_416_Testset_a63e9c20_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tVvhj6IwFf/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tVvhj6IwFf/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tVvhj6IwFf/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tVvhj6IwFf/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tVvhj6IwFf/code.cpg.bin`
exported 1187 nodes, 4247 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tVvhj6IwFf/export
‚úÖ CVE_2023_3863_4151_Linux_Kernel_CWE_416_Testset_87fa3763_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wW5z9WHx3K/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wW5z9WHx3K/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wW5z9WHx3K/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wW5z9WHx3K/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wW5z9WHx3K/code.cpg.bin`
exported 1099 nodes, 3612 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.wW5z9WHx3K/export
‚úÖ CVE_2013_1943_209_Linux_Kernel_CWE_20_Testset_d95b9562_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EQTfz7WJzc/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EQTfz7WJzc/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EQTfz7WJzc/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EQTfz7WJzc/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EQTfz7WJzc/code.cpg.bin`
exported 1226 nodes, 4515 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.EQTfz7WJzc/export
‚úÖ CVE_2020_0427_2380_Linux_Kernel_CWE_125_Testset_a63e9c20_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fG5XZBhD86/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fG5XZBhD86/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fG5XZBhD86/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fG5XZBhD86/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fG5XZBhD86/code.cpg.bin`
exported 1346 nodes, 5628 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fG5XZBhD86/export
‚úÖ CVE_2023_3389_4068_Linux_Kernel_CWE_416_Testset_c6fc966b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xSAXTMxlRj/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xSAXTMxlRj/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xSAXTMxlRj/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xSAXTMxlRj/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xSAXTMxlRj/code.cpg.bin`
exported 1310 nodes, 5038 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xSAXTMxlRj/export
‚úÖ CVE_2022_3624_3659_Linux_Kernel_CWE_401_Testset_81491212_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZjBaQVX8qp/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZjBaQVX8qp/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZjBaQVX8qp/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZjBaQVX8qp/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZjBaQVX8qp/code.cpg.bin`
exported 1312 nodes, 4986 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZjBaQVX8qp/export
‚úÖ CVE_2022_2590_3481_Linux_Kernel_CWE_362_Testset_e09c5253_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AJr63hxXMQ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AJr63hxXMQ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AJr63hxXMQ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AJr63hxXMQ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AJr63hxXMQ/code.cpg.bin`
exported 1254 nodes, 4692 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.AJr63hxXMQ/export
‚úÖ CVE_2021_45868_3184_Linux_Kernel_CWE_416_Testset_f3b0320f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eT9CT26n0Y/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eT9CT26n0Y/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eT9CT26n0Y/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eT9CT26n0Y/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eT9CT26n0Y/code.cpg.bin`
exported 1735 nodes, 9399 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eT9CT26n0Y/export
‚úÖ CVE_2019_18885_2107_Linux_Kernel_CWE_476_Testset_27d80031_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NXor7TJ7bd/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NXor7TJ7bd/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NXor7TJ7bd/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NXor7TJ7bd/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NXor7TJ7bd/code.cpg.bin`
exported 1054 nodes, 3344 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.NXor7TJ7bd/export
‚úÖ CVE_2019_19524_2199_Linux_Kernel_CWE_416_Testset_76b589a7_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CQnLizGRj3/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CQnLizGRj3/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CQnLizGRj3/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CQnLizGRj3/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CQnLizGRj3/code.cpg.bin`
exported 1027 nodes, 3209 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CQnLizGRj3/export
‚úÖ CVE_2023_32252_4026_Linux_Kernel_CWE_476_Testset_0eddf425_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DxHBglCRJ7/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DxHBglCRJ7/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DxHBglCRJ7/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DxHBglCRJ7/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DxHBglCRJ7/code.cpg.bin`
exported 2625 nodes, 19028 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.DxHBglCRJ7/export
‚úÖ CVE_2022_23222_3447_Linux_Kernel_CWE_476_Testset_45214770_p OK
   üìä [500/586] Rate: 11.2 files/min | Success: 499
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2BmmJecQV8/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2BmmJecQV8/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2BmmJecQV8/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2BmmJecQV8/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2BmmJecQV8/code.cpg.bin`
exported 1158 nodes, 4032 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2BmmJecQV8/export
‚úÖ CVE_2019_15923_2032_Linux_Kernel_CWE_476_Testset_50183e83_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.phw8LZAXIf/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.phw8LZAXIf/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.phw8LZAXIf/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.phw8LZAXIf/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.phw8LZAXIf/code.cpg.bin`
exported 1055 nodes, 3324 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.phw8LZAXIf/export
‚úÖ CVE_2023_32233_4008_Linux_Kernel_CWE_416_Testset_d66459ce_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3DjjuMa9uv/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3DjjuMa9uv/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3DjjuMa9uv/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3DjjuMa9uv/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3DjjuMa9uv/code.cpg.bin`
exported 1565 nodes, 7082 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3DjjuMa9uv/export
‚úÖ CVE_2019_20806_2283_Linux_Kernel_CWE_476_Testset_334d5da7_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Alsfcn7Vsf/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Alsfcn7Vsf/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Alsfcn7Vsf/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Alsfcn7Vsf/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Alsfcn7Vsf/code.cpg.bin`
exported 1331 nodes, 5147 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Alsfcn7Vsf/export
‚úÖ CVE_2022_1652_3268_Linux_Kernel_CWE_416_Testset_7fa3b602_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iwyOqnAAiU/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iwyOqnAAiU/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iwyOqnAAiU/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iwyOqnAAiU/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iwyOqnAAiU/code.cpg.bin`
exported 1285 nodes, 4791 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.iwyOqnAAiU/export
‚úÖ CVE_2020_35519_2711_Linux_Kernel_CWE_125_Testset_b60f1a2c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4YteDY3T5t/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4YteDY3T5t/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4YteDY3T5t/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4YteDY3T5t/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4YteDY3T5t/code.cpg.bin`
exported 1047 nodes, 3318 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.4YteDY3T5t/export
‚úÖ CVE_2018_20836_1783_Linux_Kernel_CWE_416_Testset_0d3abf57_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TLHWCKrhZH/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TLHWCKrhZH/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TLHWCKrhZH/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TLHWCKrhZH/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TLHWCKrhZH/code.cpg.bin`
exported 2529 nodes, 15699 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TLHWCKrhZH/export
‚úÖ CVE_2016_3841_1008_Linux_Kernel_CWE_264_Testset_6cde2702_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HR8TIpvUOm/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HR8TIpvUOm/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HR8TIpvUOm/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HR8TIpvUOm/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HR8TIpvUOm/code.cpg.bin`
exported 1495 nodes, 6789 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.HR8TIpvUOm/export
‚úÖ CVE_2017_8066_1540_Linux_Kernel_CWE_119_Testset_a8ccef26_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mUJ3FseFuQ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mUJ3FseFuQ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mUJ3FseFuQ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mUJ3FseFuQ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mUJ3FseFuQ/code.cpg.bin`
exported 1034 nodes, 3234 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.mUJ3FseFuQ/export
‚úÖ CVE_2015_9016_885_Linux_Kernel_CWE_362_Testset_802d5333_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7kA519YoUD/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7kA519YoUD/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7kA519YoUD/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7kA519YoUD/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7kA519YoUD/code.cpg.bin`
exported 1138 nodes, 3958 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7kA519YoUD/export
‚úÖ CVE_2022_3977_3700_Linux_Kernel_CWE_416_Testset_9dceef7e_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nfQwhiR04R/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nfQwhiR04R/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nfQwhiR04R/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nfQwhiR04R/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nfQwhiR04R/code.cpg.bin`
exported 1265 nodes, 4626 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nfQwhiR04R/export
‚úÖ CVE_2016_2069_919_Linux_Kernel_CWE_362_Testset_4ec0d71c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uWdPuMRhtl/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uWdPuMRhtl/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uWdPuMRhtl/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uWdPuMRhtl/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uWdPuMRhtl/code.cpg.bin`
exported 1234 nodes, 4552 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.uWdPuMRhtl/export
‚úÖ CVE_2021_38201_3075_Linux_Kernel_CWE_119_Testset_4a5e3929_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KLcsHCknXR/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KLcsHCknXR/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KLcsHCknXR/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KLcsHCknXR/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KLcsHCknXR/code.cpg.bin`
exported 1205 nodes, 4427 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KLcsHCknXR/export
‚úÖ CVE_2014_1738_476_Linux_Kernel_CWE_200_Testset_6ee04329_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XUoRx46CUk/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XUoRx46CUk/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XUoRx46CUk/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XUoRx46CUk/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XUoRx46CUk/code.cpg.bin`
exported 1224 nodes, 4531 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XUoRx46CUk/export
‚úÖ CVE_2019_15117_1991_Linux_Kernel_CWE_119_Testset_d917a328_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aqxfnxNatO/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aqxfnxNatO/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aqxfnxNatO/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aqxfnxNatO/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aqxfnxNatO/code.cpg.bin`
exported 1371 nodes, 5332 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.aqxfnxNatO/export
‚úÖ CVE_2019_19319_2188_Linux_Kernel_CWE_787_Testset_01112bff_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7mufD12VS7/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7mufD12VS7/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7mufD12VS7/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7mufD12VS7/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7mufD12VS7/code.cpg.bin`
exported 1173 nodes, 4058 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.7mufD12VS7/export
‚úÖ CVE_2020_36557_2766_Linux_Kernel_CWE_416_Testset_d962cde7_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.W8Q2aAa87t/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.W8Q2aAa87t/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.W8Q2aAa87t/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.W8Q2aAa87t/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.W8Q2aAa87t/code.cpg.bin`
exported 1153 nodes, 4155 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.W8Q2aAa87t/export
‚úÖ CVE_2019_19531_2206_Linux_Kernel_CWE_416_Testset_61e3255d_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8Ri3qJS4Vh/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8Ri3qJS4Vh/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8Ri3qJS4Vh/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8Ri3qJS4Vh/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8Ri3qJS4Vh/code.cpg.bin`
exported 1443 nodes, 6645 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8Ri3qJS4Vh/export
‚úÖ CVE_2020_28915_2660_Linux_Kernel_CWE_125_Testset_9fedeecb_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bdDuPmwAaL/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bdDuPmwAaL/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bdDuPmwAaL/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bdDuPmwAaL/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bdDuPmwAaL/code.cpg.bin`
exported 1323 nodes, 5179 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.bdDuPmwAaL/export
‚úÖ CVE_2015_8844_861_Linux_Kernel_CWE_20_Testset_338884a5_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kVQt3xIUaM/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kVQt3xIUaM/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kVQt3xIUaM/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kVQt3xIUaM/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kVQt3xIUaM/code.cpg.bin`
exported 1963 nodes, 11164 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kVQt3xIUaM/export
‚úÖ CVE_2014_0181_455_Linux_Kernel_CWE_264_Testset_90f4313f_p OK
   üìä [520/586] Rate: 11.2 files/min | Success: 519
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.94znFp2wOp/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.94znFp2wOp/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.94znFp2wOp/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.94znFp2wOp/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.94znFp2wOp/code.cpg.bin`
exported 1171 nodes, 4028 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.94znFp2wOp/export
‚úÖ CVE_2022_33742_3590_Linux_Kernel_CWE_200_Testset_e377ad6a_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lXK00pwmau/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lXK00pwmau/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lXK00pwmau/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lXK00pwmau/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lXK00pwmau/code.cpg.bin`
exported 1072 nodes, 3480 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lXK00pwmau/export
‚úÖ CVE_2007_6761_6_Linux_Kernel_CWE_119_Testset_48530390_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5Nd1cCzLGY/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5Nd1cCzLGY/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5Nd1cCzLGY/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5Nd1cCzLGY/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5Nd1cCzLGY/code.cpg.bin`
exported 1253 nodes, 4911 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.5Nd1cCzLGY/export
‚úÖ CVE_2023_5717_4290_Linux_Kernel_CWE_787_Testset_a601f92d_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xwIxUiRaBv/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xwIxUiRaBv/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xwIxUiRaBv/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xwIxUiRaBv/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xwIxUiRaBv/code.cpg.bin`
exported 1870 nodes, 9804 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.xwIxUiRaBv/export
‚úÖ CVE_2021_0920_2830_Linux_Kernel_CWE_362_Testset_91972ca1_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2DW5y5S5E4/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2DW5y5S5E4/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2DW5y5S5E4/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2DW5y5S5E4/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2DW5y5S5E4/code.cpg.bin`
exported 1136 nodes, 3822 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.2DW5y5S5E4/export
‚úÖ CVE_2016_3134_963_Linux_Kernel_CWE_119_Testset_e7691c36_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ogs2pmpE8V/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ogs2pmpE8V/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ogs2pmpE8V/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ogs2pmpE8V/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ogs2pmpE8V/code.cpg.bin`
exported 1162 nodes, 3954 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ogs2pmpE8V/export
‚úÖ CVE_2019_19815_2250_Linux_Kernel_CWE_476_Testset_21478f11_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CRejnkPGDt/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CRejnkPGDt/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CRejnkPGDt/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CRejnkPGDt/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CRejnkPGDt/code.cpg.bin`
exported 1184 nodes, 4074 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.CRejnkPGDt/export
‚úÖ CVE_2019_13233_1959_Linux_Kernel_CWE_416_Testset_92efcf8f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MTMCY0ydU4/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MTMCY0ydU4/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MTMCY0ydU4/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MTMCY0ydU4/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MTMCY0ydU4/code.cpg.bin`
exported 1328 nodes, 5400 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.MTMCY0ydU4/export
‚úÖ CVE_2018_9465_1869_Linux_Kernel_CWE_416_Testset_78fccd6b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wh2ewOMjlH/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wh2ewOMjlH/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wh2ewOMjlH/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wh2ewOMjlH/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wh2ewOMjlH/code.cpg.bin`
exported 2344 nodes, 14960 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Wh2ewOMjlH/export
‚úÖ CVE_2019_2101_2290_Linux_Kernel_CWE_125_Testset_30a2e029_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dAGHBmoYY4/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dAGHBmoYY4/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dAGHBmoYY4/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dAGHBmoYY4/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dAGHBmoYY4/code.cpg.bin`
exported 1311 nodes, 4891 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dAGHBmoYY4/export
‚úÖ CVE_2021_3506_3016_Linux_Kernel_CWE_125_Testset_4919869c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Be6x77ny4Y/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Be6x77ny4Y/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Be6x77ny4Y/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Be6x77ny4Y/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Be6x77ny4Y/code.cpg.bin`
exported 1287 nodes, 5036 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Be6x77ny4Y/export
‚úÖ CVE_2019_12818_1951_Linux_Kernel_CWE_476_Testset_90887a33_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Fo1NSFxrPg/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Fo1NSFxrPg/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Fo1NSFxrPg/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Fo1NSFxrPg/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Fo1NSFxrPg/code.cpg.bin`
exported 1390 nodes, 5846 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Fo1NSFxrPg/export
‚úÖ CVE_2014_0181_437_Linux_Kernel_CWE_264_Testset_d1920747_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9NRWagjh31/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9NRWagjh31/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9NRWagjh31/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9NRWagjh31/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9NRWagjh31/code.cpg.bin`
exported 1029 nodes, 3215 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.9NRWagjh31/export
‚úÖ CVE_2013_0309_156_Linux_Kernel_CWE_119_Testset_305e0f68_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cq4HlgmHIo/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cq4HlgmHIo/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cq4HlgmHIo/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cq4HlgmHIo/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cq4HlgmHIo/code.cpg.bin`
exported 1552 nodes, 7133 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cq4HlgmHIo/export
‚úÖ CVE_2012_3552_77_Linux_Kernel_CWE_362_Testset_0d61f862_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tYXLZsJZ9Q/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tYXLZsJZ9Q/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tYXLZsJZ9Q/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tYXLZsJZ9Q/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tYXLZsJZ9Q/code.cpg.bin`
exported 1184 nodes, 4074 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.tYXLZsJZ9Q/export
‚úÖ CVE_2019_13233_1959_Linux_Kernel_CWE_362_Testset_92efcf8f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.INuf5HKyz7/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.INuf5HKyz7/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.INuf5HKyz7/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.INuf5HKyz7/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.INuf5HKyz7/code.cpg.bin`
exported 1382 nodes, 5806 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.INuf5HKyz7/export
‚úÖ CVE_2021_44733_3171_Linux_Kernel_CWE_362_Testset_2ac33929_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V59jz6lo1f/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V59jz6lo1f/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V59jz6lo1f/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V59jz6lo1f/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V59jz6lo1f/code.cpg.bin`
exported 1398 nodes, 5891 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.V59jz6lo1f/export
‚úÖ CVE_2023_32252_4031_Linux_Kernel_CWE_476_Testset_f6f461d2_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pmyBabiIal/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pmyBabiIal/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pmyBabiIal/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pmyBabiIal/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pmyBabiIal/code.cpg.bin`
exported 1058 nodes, 3350 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.pmyBabiIal/export
‚úÖ CVE_2017_16528_1314_Linux_Kernel_CWE_416_Testset_9e38f409_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.44sV2zZVm7/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.44sV2zZVm7/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.44sV2zZVm7/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.44sV2zZVm7/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.44sV2zZVm7/code.cpg.bin`
exported 1116 nodes, 3723 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.44sV2zZVm7/export
‚úÖ CVE_2022_47946_3778_Linux_Kernel_CWE_416_Testset_48e84292_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.e7uUffNNdM/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.e7uUffNNdM/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.e7uUffNNdM/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.e7uUffNNdM/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.e7uUffNNdM/code.cpg.bin`
exported 1115 nodes, 3680 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.e7uUffNNdM/export
‚úÖ CVE_2020_36694_2777_Linux_Kernel_CWE_416_Testset_767300c8_p OK
   üìä [540/586] Rate: 11.4 files/min | Success: 539
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yrlXQOkF5M/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yrlXQOkF5M/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yrlXQOkF5M/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yrlXQOkF5M/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yrlXQOkF5M/code.cpg.bin`
exported 1107 nodes, 3825 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.yrlXQOkF5M/export
‚úÖ CVE_2019_15916_2023_Linux_Kernel_CWE_401_Testset_55474145_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dCLOAGCnHL/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dCLOAGCnHL/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dCLOAGCnHL/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dCLOAGCnHL/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dCLOAGCnHL/code.cpg.bin`
exported 1070 nodes, 3452 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.dCLOAGCnHL/export
‚úÖ CVE_2022_40476_3704_Linux_Kernel_CWE_476_Testset_b4c18823_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8Wj56bsW08/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8Wj56bsW08/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8Wj56bsW08/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8Wj56bsW08/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8Wj56bsW08/code.cpg.bin`
exported 1112 nodes, 3776 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.8Wj56bsW08/export
‚úÖ CVE_2021_3752_3054_Linux_Kernel_CWE_362_Testset_ba44d0b5_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.e4CfXvjCqO/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.e4CfXvjCqO/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.e4CfXvjCqO/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.e4CfXvjCqO/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.e4CfXvjCqO/code.cpg.bin`
exported 1097 nodes, 3594 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.e4CfXvjCqO/export
‚úÖ CVE_2019_19082_2167_Linux_Kernel_CWE_401_Testset_a64dd15b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OG4Zbcxogl/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OG4Zbcxogl/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OG4Zbcxogl/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OG4Zbcxogl/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OG4Zbcxogl/code.cpg.bin`
exported 1329 nodes, 5025 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.OG4Zbcxogl/export
‚úÖ CVE_2017_16912_1349_Linux_Kernel_CWE_125_Testset_8bb3c831_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qFPuak60ky/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qFPuak60ky/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qFPuak60ky/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qFPuak60ky/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qFPuak60ky/code.cpg.bin`
exported 1111 nodes, 3714 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qFPuak60ky/export
‚úÖ CVE_2022_2318_3431_Linux_Kernel_CWE_416_Testset_aa829263_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nX60x7XXrW/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nX60x7XXrW/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nX60x7XXrW/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nX60x7XXrW/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nX60x7XXrW/code.cpg.bin`
exported 1691 nodes, 8588 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.nX60x7XXrW/export
‚úÖ CVE_2022_33741_3578_Linux_Kernel_CWE_200_Testset_867ff13c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cFEdkd0LQE/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cFEdkd0LQE/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cFEdkd0LQE/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cFEdkd0LQE/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cFEdkd0LQE/code.cpg.bin`
exported 1466 nodes, 6240 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.cFEdkd0LQE/export
‚úÖ CVE_2022_4379_3746_Linux_Kernel_CWE_416_Testset_3a5090b0_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JPObOICcvC/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JPObOICcvC/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JPObOICcvC/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JPObOICcvC/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JPObOICcvC/code.cpg.bin`
exported 1307 nodes, 4996 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.JPObOICcvC/export
‚úÖ CVE_2023_28327_3975_Linux_Kernel_CWE_476_Testset_6aaef979_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lQnt7Ddtcl/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lQnt7Ddtcl/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lQnt7Ddtcl/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lQnt7Ddtcl/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lQnt7Ddtcl/code.cpg.bin`
exported 1000 nodes, 3087 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lQnt7Ddtcl/export
‚úÖ CVE_2010_5328_24_Linux_Kernel_CWE_20_Testset_e0bae9e7_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qOrVJhsf9q/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qOrVJhsf9q/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qOrVJhsf9q/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qOrVJhsf9q/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qOrVJhsf9q/code.cpg.bin`
exported 1595 nodes, 7468 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.qOrVJhsf9q/export
‚úÖ CVE_2021_39800_3108_Linux_Kernel_CWE_416_Testset_8ad21d1b_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kfPyAxGYpJ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kfPyAxGYpJ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kfPyAxGYpJ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kfPyAxGYpJ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kfPyAxGYpJ/code.cpg.bin`
exported 1284 nodes, 4948 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.kfPyAxGYpJ/export
‚úÖ CVE_2012_3552_74_Linux_Kernel_CWE_362_Testset_90871c5c_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eVNh3z6s3F/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eVNh3z6s3F/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eVNh3z6s3F/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eVNh3z6s3F/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eVNh3z6s3F/code.cpg.bin`
exported 1938 nodes, 10413 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eVNh3z6s3F/export
‚úÖ CVE_2022_20567_3398_Linux_Kernel_CWE_362_Testset_c4bf136d_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZV7p78wfAa/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZV7p78wfAa/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZV7p78wfAa/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZV7p78wfAa/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZV7p78wfAa/code.cpg.bin`
exported 1356 nodes, 5506 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ZV7p78wfAa/export
‚úÖ CVE_2017_16646_1329_Linux_Kernel_CWE_476_Testset_99663a61_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KOC9CcPW0h/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KOC9CcPW0h/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KOC9CcPW0h/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KOC9CcPW0h/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KOC9CcPW0h/code.cpg.bin`
exported 1172 nodes, 4102 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.KOC9CcPW0h/export
‚úÖ CVE_2013_1848_196_Linux_Kernel_CWE_20_Testset_478c197d_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FYmFHvumLN/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FYmFHvumLN/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FYmFHvumLN/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FYmFHvumLN/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FYmFHvumLN/code.cpg.bin`
exported 1103 nodes, 3615 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.FYmFHvumLN/export
‚úÖ CVE_2012_3552_70_Linux_Kernel_CWE_362_Testset_eed9930e_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.btOYW65srB/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.btOYW65srB/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.btOYW65srB/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.btOYW65srB/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.btOYW65srB/code.cpg.bin`
exported 1136 nodes, 3806 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.btOYW65srB/export
‚úÖ CVE_2013_0268_153_Linux_Kernel_CWE_264_Testset_6e774f4e_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UktMfGoIoB/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UktMfGoIoB/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UktMfGoIoB/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UktMfGoIoB/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UktMfGoIoB/code.cpg.bin`
exported 1115 nodes, 3680 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UktMfGoIoB/export
‚úÖ CVE_2020_36694_2770_Linux_Kernel_CWE_416_Testset_68500a7e_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UITjerWnNG/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UITjerWnNG/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UITjerWnNG/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UITjerWnNG/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UITjerWnNG/code.cpg.bin`
exported 1168 nodes, 4101 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.UITjerWnNG/export
‚úÖ CVE_2019_25045_2304_Linux_Kernel_CWE_416_Testset_df36048f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3lAaocKKlu/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3lAaocKKlu/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3lAaocKKlu/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3lAaocKKlu/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3lAaocKKlu/code.cpg.bin`
exported 1220 nodes, 4425 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.3lAaocKKlu/export
‚úÖ CVE_2023_2985_3984_Linux_Kernel_CWE_416_Testset_7c54d593_p OK
   üìä [560/586] Rate: 11.5 files/min | Success: 559
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ug5pTbznat/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ug5pTbznat/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ug5pTbznat/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ug5pTbznat/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ug5pTbznat/code.cpg.bin`
exported 1442 nodes, 5953 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ug5pTbznat/export
‚úÖ CVE_2015_8709_839_Linux_Kernel_CWE_264_Testset_58ad33cf_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hDZGUnuAey/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hDZGUnuAey/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hDZGUnuAey/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hDZGUnuAey/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hDZGUnuAey/code.cpg.bin`
exported 2004 nodes, 10999 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.hDZGUnuAey/export
‚úÖ CVE_2017_17712_1366_Linux_Kernel_CWE_362_Testset_08c7803f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XUg14EtEZm/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XUg14EtEZm/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XUg14EtEZm/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XUg14EtEZm/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XUg14EtEZm/code.cpg.bin`
exported 1104 nodes, 3633 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XUg14EtEZm/export
‚úÖ CVE_2019_19082_2166_Linux_Kernel_CWE_401_Testset_57b06e79_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QB2JnQu2TK/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QB2JnQu2TK/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QB2JnQu2TK/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QB2JnQu2TK/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QB2JnQu2TK/code.cpg.bin`
exported 1171 nodes, 3972 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.QB2JnQu2TK/export
‚úÖ CVE_2021_3655_3030_Linux_Kernel_CWE_20_Testset_090974c1_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.B2wY44TE1V/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.B2wY44TE1V/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.B2wY44TE1V/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.B2wY44TE1V/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.B2wY44TE1V/code.cpg.bin`
exported 1182 nodes, 4104 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.B2wY44TE1V/export
‚úÖ CVE_2018_10940_1629_Linux_Kernel_CWE_119_Testset_8fb5746f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l7zOyIz1RF/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l7zOyIz1RF/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l7zOyIz1RF/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l7zOyIz1RF/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l7zOyIz1RF/code.cpg.bin`
exported 1390 nodes, 5961 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.l7zOyIz1RF/export
‚úÖ CVE_2022_2977_3528_Linux_Kernel_CWE_416_Testset_433a0425_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fZGfzEKhxI/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fZGfzEKhxI/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fZGfzEKhxI/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fZGfzEKhxI/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fZGfzEKhxI/code.cpg.bin`
exported 1049 nodes, 3322 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.fZGfzEKhxI/export
‚úÖ CVE_2017_16526_1311_Linux_Kernel_CWE_119_Testset_8267e951_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0LfTgOKlFJ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0LfTgOKlFJ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0LfTgOKlFJ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0LfTgOKlFJ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0LfTgOKlFJ/code.cpg.bin`
exported 1000 nodes, 3087 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.0LfTgOKlFJ/export
‚úÖ CVE_2023_4244_4203_Linux_Kernel_CWE_416_Testset_2f650d0e_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lxM0eLajkZ/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lxM0eLajkZ/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lxM0eLajkZ/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lxM0eLajkZ/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lxM0eLajkZ/code.cpg.bin`
exported 1244 nodes, 4823 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.lxM0eLajkZ/export
‚úÖ CVE_2020_12464_2470_Linux_Kernel_CWE_416_Testset_07039125_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.L01FsGWwMG/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.L01FsGWwMG/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.L01FsGWwMG/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.L01FsGWwMG/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.L01FsGWwMG/code.cpg.bin`
exported 1110 nodes, 3688 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.L01FsGWwMG/export
‚úÖ CVE_2021_20261_2863_Linux_Kernel_CWE_362_Testset_d63ec3f0_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TmU8fyAuqm/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TmU8fyAuqm/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TmU8fyAuqm/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TmU8fyAuqm/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TmU8fyAuqm/code.cpg.bin`
exported 1080 nodes, 3521 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.TmU8fyAuqm/export
‚úÖ CVE_2023_32250_4020_Linux_Kernel_CWE_362_Testset_b19ff369_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.e4gaavXofY/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.e4gaavXofY/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.e4gaavXofY/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.e4gaavXofY/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.e4gaavXofY/code.cpg.bin`
exported 1442 nodes, 6132 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.e4gaavXofY/export
‚úÖ CVE_2020_10757_2414_Linux_Kernel_CWE_119_Testset_d7361e20_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Dn52AaJbAT/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Dn52AaJbAT/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Dn52AaJbAT/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Dn52AaJbAT/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Dn52AaJbAT/code.cpg.bin`
exported 1000 nodes, 3087 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Dn52AaJbAT/export
‚úÖ CVE_2019_19813_2247_Linux_Kernel_CWE_416_Testset_80a80720_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o8bBLCZRGV/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o8bBLCZRGV/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o8bBLCZRGV/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o8bBLCZRGV/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o8bBLCZRGV/code.cpg.bin`
exported 1723 nodes, 8430 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.o8bBLCZRGV/export
‚úÖ CVE_2021_4204_3151_Linux_Kernel_CWE_119_Testset_3ccdb995_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GoTK0A2kp9/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GoTK0A2kp9/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GoTK0A2kp9/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GoTK0A2kp9/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GoTK0A2kp9/code.cpg.bin`
exported 1146 nodes, 3837 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.GoTK0A2kp9/export
‚úÖ CVE_2020_27675_2623_Linux_Kernel_CWE_416_Testset_8ac60463_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XxGCTLO2Gy/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XxGCTLO2Gy/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XxGCTLO2Gy/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XxGCTLO2Gy/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XxGCTLO2Gy/code.cpg.bin`
exported 1033 nodes, 3223 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.XxGCTLO2Gy/export
‚úÖ CVE_2014_8160_607_Linux_Kernel_CWE_20_Testset_acd6bed2_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jUd87nTDsL/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jUd87nTDsL/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jUd87nTDsL/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jUd87nTDsL/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jUd87nTDsL/code.cpg.bin`
exported 1559 nodes, 7471 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.jUd87nTDsL/export
‚úÖ CVE_2021_3609_3021_Linux_Kernel_CWE_362_Testset_d0695a66_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eCGb49wRqD/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eCGb49wRqD/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eCGb49wRqD/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eCGb49wRqD/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eCGb49wRqD/code.cpg.bin`
exported 1304 nodes, 4955 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.eCGb49wRqD/export
‚úÖ CVE_2018_18021_1730_Linux_Kernel_CWE_20_Testset_408edd93_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1IJvd93D4P/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1IJvd93D4P/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1IJvd93D4P/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1IJvd93D4P/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1IJvd93D4P/code.cpg.bin`
exported 1237 nodes, 4662 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.1IJvd93D4P/export
‚úÖ CVE_2017_18241_1423_Linux_Kernel_CWE_476_Testset_ac2018c6_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.m0avnXl1er/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.m0avnXl1er/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.m0avnXl1er/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.m0avnXl1er/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.m0avnXl1er/code.cpg.bin`
exported 1884 nodes, 11125 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.m0avnXl1er/export
‚úÖ CVE_2023_0615_3838_Linux_Kernel_CWE_401_Testset_715f21ca_p OK
   üìä [580/586] Rate: 11.6 files/min | Success: 579
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ETQpABKikj/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ETQpABKikj/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ETQpABKikj/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ETQpABKikj/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ETQpABKikj/code.cpg.bin`
exported 1102 nodes, 3650 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.ETQpABKikj/export
‚úÖ CVE_2020_25656_2594_Linux_Kernel_CWE_416_Testset_0bd46a0f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y7k7T6kOHO/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y7k7T6kOHO/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y7k7T6kOHO/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y7k7T6kOHO/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y7k7T6kOHO/code.cpg.bin`
exported 1726 nodes, 9377 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.y7k7T6kOHO/export
‚úÖ CVE_2020_12363_2463_Linux_Kernel_CWE_20_Testset_1edf74ea_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RJyjuSWOVi/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RJyjuSWOVi/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RJyjuSWOVi/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RJyjuSWOVi/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RJyjuSWOVi/code.cpg.bin`
exported 1799 nodes, 9823 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RJyjuSWOVi/export
‚úÖ CVE_2023_3357_4061_Linux_Kernel_CWE_476_Testset_681b1e79_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xatiiu4mST/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xatiiu4mST/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xatiiu4mST/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xatiiu4mST/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xatiiu4mST/code.cpg.bin`
exported 1371 nodes, 5725 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.Xatiiu4mST/export
‚úÖ CVE_2013_6368_344_Linux_Kernel_CWE_20_Testset_1ddfc40f_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k0eAFYjjb3/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k0eAFYjjb3/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k0eAFYjjb3/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k0eAFYjjb3/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k0eAFYjjb3/code.cpg.bin`
exported 1669 nodes, 7845 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.k0eAFYjjb3/export
‚úÖ CVE_2015_7613_789_Linux_Kernel_CWE_362_Testset_8261e050_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SBNAYWC8qj/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SBNAYWC8qj/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SBNAYWC8qj/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SBNAYWC8qj/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SBNAYWC8qj/code.cpg.bin`
exported 1743 nodes, 9107 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.SBNAYWC8qj/export
‚úÖ CVE_2015_5327_776_Linux_Kernel_CWE_125_Testset_1dbd2804_p OK
Parsing code at: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RfUpR9fou4/preprocessed.c - language: `NEWC`
[+] Running language frontend
=======================================================================================================
Invoking CPG generator in a separate process. Note that the new process will consume additional memory.
If you are importing a large codebase (and/or running into memory issues), please try the following:
1) exit joern
2) invoke the frontend: /opt/joern/joern-cli/c2cpg.sh -J-Xmx4096m /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RfUpR9fou4/preprocessed.c --output /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RfUpR9fou4/code.cpg.bin
3) start joern, import the cpg: `importCpg("path/to/cpg")`
=======================================================================================================

[+] Applying default overlays
Successfully wrote graph to: /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RfUpR9fou4/code.cpg.bin
To load the graph, type `joern /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RfUpR9fou4/code.cpg.bin`
exported 1199 nodes, 4365 edges into /var/folders/2q/8hm3spnj0xv1qc_zp8111j700000gn/T/tmp.RfUpR9fou4/export
‚úÖ CVE_2022_1048_3243_Linux_Kernel_CWE_416_Testset_cce98ec5_p OK

======================================
üéØ VULNERABLE CPG EXTRACTION RESULTS
======================================
Finished: Sat Aug 16 15:09:54 EDT 2025
Total time: 3003s (50m)
Vulnerable files processed: 586
CPG files created:      586
Success rate: 100.0%

üìä Detailed Statistics:
  Successful extractions: 1099
  Parse failures: 0
0
  Export failures: 0
0
  No export file: 0
0
  Fallback successes: 0
0

üìÅ Output: /Users/vernetemmanueladjobi/Documents/RessourcesStages/Projets/VulRAG-Hybrid-System/data/datasets/test_cpg_files/patch
üìã Log: /Users/vernetemmanueladjobi/Documents/RessourcesStages/Projets/VulRAG-Hybrid-System/logs/extract_vuln_cpg.log

‚úÖ CPGs g√©n√©r√©s dans: /Users/vernetemmanueladjobi/Documents/RessourcesStages/Projets/VulRAG-Hybrid-System/data/datasets/test_cpg_files/{vuln,patch}
üìú Log complet: /Users/vernetemmanueladjobi/Documents/RessourcesStages/Projets/VulRAG-Hybrid-System/logs/cpg_pipeline_20250816_132807_8095.log
